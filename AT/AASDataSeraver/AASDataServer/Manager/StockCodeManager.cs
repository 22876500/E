using AASDataServer.Helper;
using AASDataServer.Model;
using DataModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Practices.Unity;
using System.Text.RegularExpressions;

namespace AASDataServer.Manager
{
    public class StockCodeManager : IManager
    {
        private static StockCodeManager _instance;

        #region Members
        private Dictionary<string, StockCode> _codes;
        private Dictionary<string, MarketCode> _marketCodes;
        List<string> _vipCodes = new List<string>();

        public static StockCodeManager GetInstance
        {
            get
            {
                if (_instance == null)
                {
                    _instance = UnityContainerHost.Container.Resolve<IManager>("StockCodeManager") as StockCodeManager;
                }
                return _instance;
            }
        }

        public Dictionary<string, StockCode> Codes
        {
            get { return _codes; }
        }

        public List<StockCode> CodeList
        {
            get { return new List<StockCode>(_codes.Values); }
        }

        public List<MarketCode> MarketCodeList
        {
            get { return _marketCodes.Values.ToList<MarketCode>(); }
        }

        public List<string> VIPCodes
        {
            get
            {
                if (_vipCodes.Count == 0)
                {
                    lock (_vipCodes)
                    {
                        if (_vipCodes.Count == 0)
                        {
                            var path = AppDomain.CurrentDomain.BaseDirectory + AppSettingsHelper.getString("VipCodesPath");
                            var lstCodes = ReadCodes(path);
                            if (lstCodes.Count > 0)
                            {
                                _vipCodes.AddRange(lstCodes);
                            }
                        }
                    }
                }
                return _vipCodes;
            }
        }

        List<string> _hs300;
        List<string> HS300
        {
            get
            {
                if (_hs300 == null)
                {
                    _hs300 = new List<string>();
                    var path = AppDomain.CurrentDomain.BaseDirectory + "\\codes-config\\hs300.txt";
                    var lstCodes = ReadCodes(path);
                    _hs300.AddRange(lstCodes);
                }
                return _hs300;
            }
        }

        List<string> _zz500;
        List<string> ZZ500
        { 
            get 
            {
                if (_zz500 == null)
                {
                    _zz500 = new List<string>();
                    var path = AppDomain.CurrentDomain.BaseDirectory + "\\codes-config\\zz500.txt";
                    var lstCodes = ReadCodes(path);
                    _zz500.AddRange(lstCodes);
                }
                return _zz500;
            }
        }

        List<string> _portfolioCodes;
        List<string> PortfolioCodes
        {
            get 
            {
                if (_portfolioCodes == null)
                {
                    _portfolioCodes = new List<string>();
                    var path = AppDomain.CurrentDomain.BaseDirectory + "\\codes-config\\portfolio.txt";
                    var lstCodes = ReadCodes(path);
                }
                return _portfolioCodes;
            }
        }

        public SubType SubCodesType
        {
            get
            {
                var type = Helper.AppSettingsHelper.getString("sub-type");
                SubType subType = (SubType)Enum.Parse(typeof(SubType), type);
                switch (subType)
                {
                    case SubType.HS300:
                    case SubType.ZZ500:
                    case SubType.Portfolio:
                    case SubType.All:
                        return subType;
                    case SubType.None:
                    default:
                        Helper.AppSettingsHelper.SetConfig("sub-type", "0");
                        return SubType.None;
                }
            }
        }
        #endregion

        public StockCodeManager()
        {
            _codes = new Dictionary<string, StockCode>();
            _marketCodes = new Dictionary<string, MarketCode>();
        }

        public StockCode GetStockCode(string code)
        {
            if (_codes.ContainsKey(code))
            {
                return _codes[code];
            }

            return null;
        }

        public string GetStockName(string code)
        {
            if (_codes.ContainsKey(code))
            {
                return _codes[code].Name;
            }

            return "";
        }

        public string ToWindCode(string code)
        {
            if (_codes.ContainsKey(code))
            {
                return _codes[code].Wind;
            }

            return "";
        }

        public void UpdateMarketCodes(List<MarketCode> codes)
        {
            _codes.Clear();
            _marketCodes.Clear();
            foreach (MarketCode code in codes)
            {
                if (_marketCodes.ContainsKey(code.Code) == false)
                {
                    StockCode def = new StockCode();
                    def.Code = code.Code;
                    def.Market = code.Market;
                    def.Name = code.CnName;
                    def.Pinyin = PinyinHelper.ToJianPin(code.CnName);
                    def.Wind = code.WindCode;
                    def.Type = code.Type;
                    _codes.Add(def.Code ,def);
                    _marketCodes.Add(code.Code, code);
                }
            }
        }

        public void UpdateCodes(List<StockCode> codes)
        {
            _codes.Clear();
            Dictionary<string, string> pinyin = GetPinyinDict();
            foreach (StockCode code in codes)
            {
                if (_codes.ContainsKey(code.Code) == false)
                {
                    //更新拼音
                    if (pinyin.ContainsKey(code.Code))
                    {
                        code.Pinyin = pinyin[code.Code];
                    }
                    _codes.Add(code.Code, code);
                }
            }
        }

        private static List<string> ReadCodes(string path)
        {

            if (System.IO.File.Exists(path))
            {
                var text = System.IO.File.ReadAllLines(path, Encoding.Default);
                var regCode = new System.Text.RegularExpressions.Regex("\\d{6}");
                var lstCodes = new List<string>(text.Length);
                StringBuilder ErrorCodes = new StringBuilder();
                foreach (var item in text)
                {
                    var codeItems = Regex.Split(item, "[^0-9]+");
                    foreach (var codeItem in codeItems)
                    {
                        if (regCode.IsMatch(codeItem))
                        {
                            if (codeItem.Length > 6)
                            {
                                ErrorCodes.Append(codeItem).Append(",");
                            }
                            else
                            {
                                lstCodes.Add(codeItem);
                            }
                        }
                        else
                        {
                            ErrorCodes.Append(codeItem).Append(",");
                        }
                    }
                }
                if (ErrorCodes.Length > 0)
                {
                    App.Logger.Info(path + "配置文件中含有异常的股票代码！");
                }
                return lstCodes;
            }
            else {
                App.Logger.Info("配置文件不存在！");
            }
            return new List<string>();
        }

        public List<string> GetAddList(int type)
        {
            SubType subType = (SubType)Enum.Parse(typeof(SubType), type.ToString());
            return GetAddList(subType);
        }

        public List<string> GetAddList(SubType subType)
        {
            List<string> addSubList = new List<string>();
            switch (subType)
            {
                case SubType.HS300:
                    //添加HS300的订阅
                    addSubList.AddRange(HS300);
                    break;
                case SubType.ZZ500:
                    //添加ZZ500的订阅
                    addSubList.AddRange(ZZ500);
                    break;
                case SubType.Portfolio:
                    //添加自选股订阅
                    addSubList.AddRange(PortfolioCodes);
                    break;
                case SubType.All:
                    addSubList.AddRange(HS300);
                    addSubList.AddRange(ZZ500.Except(addSubList));
                    addSubList.AddRange(PortfolioCodes.Except(addSubList));
                    break;
                case SubType.None:
                default:
                    break;
            }
            return addSubList;
        }

        
        

        #region 拼音字典
        public Dictionary<string, string> GetPinyinDict()
        {
            Dictionary<string, string> codes = new Dictionary<string, string>();
            codes.Add("000001", "PAYH");
            codes.Add("000612", "JZWF");
            codes.Add("000903", "YNDL");
            codes.Add("000024", "ZSDC");
            codes.Add("000637", "MHSH");
            codes.Add("000927", "YQXL");
            codes.Add("000046", "FHKG");
            codes.Add("000672", "SFSN");
            codes.Add("000958", "DFRD");
            codes.Add("000090", "TJJT");
            codes.Add("000698", "SYHG");
            codes.Add("000980", "JMGF");
            codes.Add("000404", "HYYS");
            codes.Add("000722", "HNFZ");
            codes.Add("002004", "HBYT");
            codes.Add("000430", "ZJJ");
            codes.Add("000755", "STS");
            codes.Add("002024", "SNYS");
            codes.Add("000520", "STF");
            codes.Add("002044", "JSSY");
            codes.Add("000787", "STC");
            codes.Add("000541", "FSZM");
            codes.Add("002064", "HFAL");
            codes.Add("000810", "HRJH");
            codes.Add("000564", "XAMS");
            codes.Add("002084", "HOWY");
            codes.Add("000836", "XMKJ");
            codes.Add("000591", "TJG");
            codes.Add("002104", "HBGF");
            codes.Add("000878", "YNTY");
            codes.Add("002124", "TBGF");
            codes.Add("002325", "HTGF");
            codes.Add("002144", "HDGK");
            codes.Add("002345", "CHJ");
            codes.Add("002164", "STD");
            codes.Add("002365", "YAYY");
            codes.Add("002184", "HDKZ");
            codes.Add("002385", "DBN");
            codes.Add("002204", "DLZG");
            codes.Add("002405", "SWTX");
            codes.Add("002224", "SLS");
            codes.Add("002425", "KSGF");
            codes.Add("002244", "BJJT");
            codes.Add("002445", "ZNZG");
            codes.Add("002265", "XYGF");
            codes.Add("002465", "HGTX");
            codes.Add("002285", "SLX");
            codes.Add("002485", "XNE");
            codes.Add("002305", "NGZY");
            codes.Add("002505", "DKMY");
            codes.Add("002526", "SDKJ");
            codes.Add("002729", "HLL");
            codes.Add("300131", "YTZK");
            codes.Add("002546", "XLDZ");
            codes.Add("200016", "SKJB");
            codes.Add("300151", "CHKJ");
            codes.Add("002566", "YSYY");
            codes.Add("300171", "DFL");
            codes.Add("200152", "SHB");
            codes.Add("002586", "WHGF");
            codes.Add("300191", "QNHX");
            codes.Add("200613", "DDHB");
            codes.Add("002606", "DLDC");
            codes.Add("300211", "YTKJ");
            codes.Add("300010", "LSC");
            codes.Add("002626", "JDW");
            codes.Add("300231", "YXKJ");
            codes.Add("300030", "YPYL");
            codes.Add("002646", "QQKJ");
            codes.Add("300251", "GXCM");
            codes.Add("300050", "SJDL");
            codes.Add("002666", "DLJT");
            codes.Add("300271", "HYRJ");
            codes.Add("300071", "HYJX");
            codes.Add("002686", "YLD");
            codes.Add("300291", "HLBN");
            codes.Add("300091", "JTL");
            codes.Add("002707", "ZXLY");
            codes.Add("300311", "RZX");
            codes.Add("300111", "XRK");
            codes.Add("300331", "SDWG");
            codes.Add("300351", "YGDQ");
            codes.Add("600130", "BDGF");
            codes.Add("300372", "XTDQ");
            codes.Add("600156", "HSGF");
            codes.Add("300393", "ZLGF");
            codes.Add("600178", "STD");
            codes.Add("300419", "HFKJ");
            codes.Add("600200", "JSWZ");
            codes.Add("600015", "HXYH");
            codes.Add("600223", "LSZY");
            codes.Add("600039", "SCLQ");
            codes.Add("600246", "WTDC");
            codes.Add("600068", "GZB");
            codes.Add("600268", "GDNZ");
            codes.Add("600088", "ZSCM");
            codes.Add("600290", "HYDQ");
            codes.Add("600109", "GJZQ");
            codes.Add("600313", "NFZY");
            codes.Add("600336", "AKM");
            codes.Add("600361", "HLZC");
            codes.Add("600608", "SHKJ");
            codes.Add("600823", "SMGF");
            codes.Add("600383", "JDJT");
            codes.Add("600843", "SGSB");
            codes.Add("600629", "LGSY");
            codes.Add("600408", "ATJT");
            codes.Add("600864", "HTGF");
            codes.Add("600651", "FLYH");
            codes.Add("600439", "RBK");
            codes.Add("600885", "HFGF");
            codes.Add("600675", "ZHQ");
            codes.Add("600475", "HGGF");
            codes.Add("600965", "FCWF");
            codes.Add("600695", "DJGF");
            codes.Add("600498", "FHTX");
            codes.Add("600990", "SCDZ");
            codes.Add("600717", "TJG");
            codes.Add("600520", "ZFKJ");
            codes.Add("601015", "SXHM");
            codes.Add("600737", "ZLTH");
            codes.Add("600545", "XJCJ");
            codes.Add("601126", "SFGF");
            codes.Add("600758", "HYN");
            codes.Add("600567", "SYZY");
            codes.Add("601233", "TKGF");
            codes.Add("600780", "TBNY");
            codes.Add("600588", "YYRJ");
            codes.Add("601519", "DZH");
            codes.Add("600802", "FJSN");
            codes.Add("601677", "MTLY");
            codes.Add("000004", "GNKJ");
            codes.Add("601872", "ZSLC");
            codes.Add("000613", "DDHA");
            codes.Add("601989", "ZGZG");
            codes.Add("000615", "HBJH");
            codes.Add("603077", "HBGF");
            codes.Add("000616", "YCTZ");
            codes.Add("603333", "MXDL");
            codes.Add("000617", "SYJC");
            codes.Add("603698", "HTGC");
            codes.Add("000619", "HLXC");
            codes.Add("900905", "LFXB");
            codes.Add("000620", "XHL");
            codes.Add("900925", "JDBG");
            codes.Add("000622", "HLSY");
            codes.Add("900947", "ZHBG");
            codes.Add("000623", "JLAD");
            codes.Add("000002", "WKA");
            codes.Add("000625", "CAQC");
            codes.Add("000626", "RYJT");
            codes.Add("000005", "SJXY");
            codes.Add("000008", "BLL");
            codes.Add("000627", "TMJT");
            codes.Add("000009", "ZGBA");
            codes.Add("000006", "SZYA");
            codes.Add("000628", "GXFZ");
            codes.Add("000010", "SHX");
            codes.Add("000905", "XMGW");
            codes.Add("000629", "PGFT");
            codes.Add("000011", "SWYA");
            codes.Add("000906", "WCZT");
            codes.Add("000630", "TLYS");
            codes.Add("000012", "NBA");
            codes.Add("000908", "TYKJ");
            codes.Add("000631", "SFHY");
            codes.Add("000014", "SHGF");
            codes.Add("000909", "SYKJ");
            codes.Add("000632", "SMJT");
            codes.Add("000913", "QJMT");
            codes.Add("000910", "DYKJ");
            codes.Add("000633", "HJTZ");
            codes.Add("000016", "SKJA");
            codes.Add("000911", "NNTY");
            codes.Add("000635", "YLT");
            codes.Add("000915", "SDHT");
            codes.Add("000912", "LTH");
            codes.Add("000636", "FHGK");
            codes.Add("000916", "HBGS");
            codes.Add("000007", "LQGF");
            codes.Add("000017", "SZHA");
            codes.Add("000020", "SHFA");
            codes.Add("000638", "WFFZ");
            codes.Add("000021", "CCKF");
            codes.Add("000639", "XWSP");
            codes.Add("000022", "SCWA");
            codes.Add("000650", "RHYY");
            codes.Add("000023", "STDA");
            codes.Add("000651", "GLDQ");
            codes.Add("000657", "ZWGX");
            codes.Add("000652", "TDGF");
            codes.Add("000659", "STZ");
            codes.Add("000655", "JLKY");
            codes.Add("000661", "CCGX");
            codes.Add("000656", "JKGF");
            codes.Add("000662", "SFT");
            codes.Add("000018", "ZGA");
            codes.Add("000663", "YALY");
            codes.Add("000019", "SSBA");
            codes.Add("000917", "DGCM");
            codes.Add("000918", "JKC");
            codes.Add("000667", "MHJT");
            codes.Add("000030", "FAGF");
            codes.Add("000919", "JLYY");
            codes.Add("000031", "ZLDC");
            codes.Add("000668", "RFKG");
            codes.Add("000920", "NFHT");
            codes.Add("000032", "SSDA");
            codes.Add("000669", "JHNY");
            codes.Add("000921", "HXKL");
            codes.Add("000033", "STX");
            codes.Add("000670", "SSY");
            codes.Add("000922", "JDGF");
            codes.Add("000034", "SXTF");
            codes.Add("000671", "YGC");
            codes.Add("000665", "HBGD");
            codes.Add("000035", "ZKJ");
            codes.Add("000025", "TLA");
            codes.Add("000923", "HBXG");
            codes.Add("000036", "HLKG");
            codes.Add("000026", "FYDA");
            codes.Add("000925", "ZHJD");
            codes.Add("000037", "SNDA");
            codes.Add("000027", "SZNY");
            codes.Add("000926", "FXGF");
            codes.Add("000038", "SDT");
            codes.Add("000028", "GYYZ");
            codes.Add("000666", "JWFJ");
            codes.Add("000039", "ZJJT");
            codes.Add("000029", "SSFA");
            codes.Add("000040", "BADC");
            codes.Add("000677", "HTHL");
            codes.Add("000042", "ZZKG");
            codes.Add("000678", "XYZC");
            codes.Add("000043", "ZHDC");
            codes.Add("000679", "DLYY");
            codes.Add("000673", "DDDF");
            codes.Add("000680", "STGF");
            codes.Add("000045", "SFZA");
            codes.Add("000681", "YDGF");
            codes.Add("000928", "STJ");
            codes.Add("000682", "DFDZ");
            codes.Add("000929", "LZHH");
            codes.Add("000683", "YXNY");
            codes.Add("000930", "ZLSH");
            codes.Add("000685", "ZSGY");
            codes.Add("000931", "ZGC");
            codes.Add("000686", "DBZQ");
            codes.Add("000676", "SDGK");
            codes.Add("000687", "HTTE");
            codes.Add("000688", "JXKY");
            codes.Add("000936", "HXGF");
            codes.Add("000955", "XLKG");
            codes.Add("000957", "ZTKC");
            codes.Add("000690", "BXNY");
            codes.Add("000937", "JZNY");
            codes.Add("000048", "KDE");
            codes.Add("000691", "YTSY");
            codes.Add("000938", "ZGGF");
            codes.Add("000049", "DSDC");
            codes.Add("000692", "HTRD");
            codes.Add("000939", "KDDL");
            codes.Add("000050", "STMA");
            codes.Add("000693", "HZGN");
            codes.Add("000948", "NTXX");
            codes.Add("000055", "FDJT");
            codes.Add("000695", "BHNY");
            codes.Add("000949", "XXHX");
            codes.Add("000056", "SGS");
            codes.Add("000697", "LSYS");
            codes.Add("000950", "JFHG");
            codes.Add("000058", "SSG");
            codes.Add("000932", "HLGT");
            codes.Add("000951", "ZGZQ");
            codes.Add("000059", "HJGF");
            codes.Add("000933", "SHGF");
            codes.Add("000952", "GJYY");
            codes.Add("000060", "ZJLN");
            codes.Add("000935", "SCSM");
            codes.Add("000953", "HCHG");
            codes.Add("000061", "NCP");
            codes.Add("000701", "XMXD");
            codes.Add("000062", "SZHQ");
            codes.Add("000702", "ZHKJ");
            codes.Add("000063", "ZXTX");
            codes.Add("000703", "HYSH");
            codes.Add("000065", "BFGJ");
            codes.Add("000705", "ZJZY");
            codes.Add("000066", "CCDN");
            codes.Add("000707", "SHKJ");
            codes.Add("000068", "HKSG");
            codes.Add("000708", "DYTG");
            codes.Add("000069", "HQCA");
            codes.Add("000709", "HBGT");
            codes.Add("000070", "TFXX");
            codes.Add("000710", "TXYB");
            codes.Add("000078", "HWSW");
            codes.Add("000711", "TLZY");
            codes.Add("000700", "MSKJ");
            codes.Add("000712", "JLGF");
            codes.Add("000713", "FLZY");
            codes.Add("000965", "TBJJ");
            codes.Add("000150", "YHDC");
            codes.Add("000966", "CYDL");
            codes.Add("000715", "ZXSY");
            codes.Add("000151", "ZCGF");
            codes.Add("000717", "SGSS");
            codes.Add("000716", "NFSP");
            codes.Add("000153", "FYYY");
            codes.Add("000718", "SNHQ");
            codes.Add("000088", "YTG");
            codes.Add("000155", "CHGF");
            codes.Add("000719", "DDCM");
            codes.Add("000089", "SZJC");
            codes.Add("000156", "HSCM");
            codes.Add("000720", "XNTS");
            codes.Add("000959", "SGGF");
            codes.Add("000157", "ZLZK");
            codes.Add("000721", "XAYS");
            codes.Add("000960", "XYGF");
            codes.Add("000158", "CSGF");
            codes.Add("000096", "GJNY");
            codes.Add("000961", "ZNJS");
            codes.Add("000159", "GJSY");
            codes.Add("000099", "ZXHZ");
            codes.Add("000962", "DFTY");
            codes.Add("000967", "SFGK");
            codes.Add("000100", "TCLJ");
            codes.Add("000963", "HDYY");
            codes.Add("000968", "MQH");
            codes.Add("000969", "ATKJ");
            codes.Add("000970", "ZKSH");
            codes.Add("000166", "SWHY");
            codes.Add("000971", "LDKG");
            codes.Add("000301", "DFSC");
            codes.Add("000972", "XZJ");
            codes.Add("000333", "MDJT");
            codes.Add("000973", "FSKJ");
            codes.Add("000338", "WCDL");
            codes.Add("000975", "YTZY");
            codes.Add("000400", "XJDQ");
            codes.Add("000976", "CHGF");
            codes.Add("000401", "JDSN");
            codes.Add("000977", "LCXX");
            codes.Add("000402", "JRJ");
            codes.Add("000978", "GLLY");
            codes.Add("000403", "STS");
            codes.Add("000979", "ZHGF");
            codes.Add("000723", "MJNY");
            codes.Add("000725", "JDFA");
            codes.Add("000726", "LTA");
            codes.Add("000738", "ZHDK");
            codes.Add("000985", "DQHK");
            codes.Add("000727", "HDKJ");
            codes.Add("000987", "GZYY");
            codes.Add("000739", "PLYY");
            codes.Add("000728", "GYZQ");
            codes.Add("000988", "HGKJ");
            codes.Add("000748", "CCXX");
            codes.Add("000729", "YJPJ");
            codes.Add("000989", "JZT");
            codes.Add("000750", "GHZQ");
            codes.Add("000731", "SCMF");
            codes.Add("000990", "CZGF");
            codes.Add("000751", "STX");
            codes.Add("000732", "THJT");
            codes.Add("000993", "MDDL");
            codes.Add("000752", "XCFZ");
            codes.Add("000733", "ZHKJ");
            codes.Add("000995", "HTJY");
            codes.Add("000753", "ZZFZ");
            codes.Add("000735", "LNS");
            codes.Add("000996", "ZGZQ");
            codes.Add("000981", "YYGF");
            codes.Add("000736", "ZFDC");
            codes.Add("000997", "XDL");
            codes.Add("000982", "ZYRY");
            codes.Add("000737", "NFHG");
            codes.Add("000998", "LPGK");
            codes.Add("000983", "XSMD");
            codes.Add("000999", "HRSJ");
            codes.Add("000760", "STE");
            codes.Add("001696", "ZSDL");
            codes.Add("000761", "BGBC");
            codes.Add("001896", "YNKG");
            codes.Add("000762", "XCKY");
            codes.Add("002001", "XHC");
            codes.Add("000407", "SLGF");
            codes.Add("002002", "HDXY");
            codes.Add("000408", "JGY");
            codes.Add("002003", "WXGF");
            codes.Add("000409", "SDDK");
            codes.Add("000756", "XHZY");
            codes.Add("000410", "SYJC");
            codes.Add("000757", "HWGF");
            codes.Add("000411", "YTJT");
            codes.Add("000758", "ZSGF");
            codes.Add("000413", "DXGD");
            codes.Add("000759", "ZBJT");
            codes.Add("000415", "BHZL");
            codes.Add("000416", "MSKG");
            codes.Add("002009", "TQGF");
            codes.Add("002017", "DXHP");
            codes.Add("000417", "HFBH");
            codes.Add("002010", "CHGF");
            codes.Add("002018", "HXHG");
            codes.Add("000418", "XTEA");
            codes.Add("002011", "DAHJ");
            codes.Add("002019", "XFYY");
            codes.Add("000419", "TCKG");
            codes.Add("002020", "JXYY");
            codes.Add("002012", "KEGF");
            codes.Add("000420", "JLHX");
            codes.Add("002021", "ZJGF");
            codes.Add("002013", "ZHJD");
            codes.Add("002005", "DHRD");
            codes.Add("002022", "KHSW");
            codes.Add("002014", "YXGF");
            codes.Add("002006", "STJ");
            codes.Add("002023", "HTGX");
            codes.Add("002015", "STX");
            codes.Add("000421", "NJZB");
            codes.Add("000422", "HBYH");
            codes.Add("000766", "THJM");
            codes.Add("002007", "HLSW");
            codes.Add("000423", "DAAJ");
            codes.Add("000767", "ZZDL");
            codes.Add("002008", "DZJG");
            codes.Add("000425", "XGJX");
            codes.Add("002016", "SRZY");
            codes.Add("000426", "XYKY");
            codes.Add("000783", "CJZQ");
            codes.Add("000428", "HTJD");
            codes.Add("000785", "WHZS");
            codes.Add("000429", "YGSA");
            codes.Add("000786", "BXJC");
            codes.Add("000768", "ZHFJ");
            codes.Add("002025", "HTDQ");
            codes.Add("000776", "GFZQ");
            codes.Add("002026", "SDWD");
            codes.Add("000777", "ZHKJ");
            codes.Add("002027", "QXKG");
            codes.Add("000778", "XXZG");
            codes.Add("002028", "SYDQ");
            codes.Add("000779", "STP");
            codes.Add("002029", "QPL");
            codes.Add("000780", "PZNY");
            codes.Add("002030", "DAJY");
            codes.Add("000782", "MDGF");
            codes.Add("002031", "JLGF");
            codes.Add("002032", "SBE");
            codes.Add("002038", "SLYY");
            codes.Add("000788", "BDYY");
            codes.Add("002033", "LJLY");
            codes.Add("002039", "QYDL");
            codes.Add("000509", "HSKG");
            codes.Add("002034", "MXD");
            codes.Add("002040", "NJG");
            codes.Add("000510", "JLJT");
            codes.Add("000488", "CMZY");
            codes.Add("002041", "DHZY");
            codes.Add("000511", "XTXC");
            codes.Add("000498", "SDLQ");
            codes.Add("002042", "HFSF");
            codes.Add("000513", "LZJT");
            codes.Add("000501", "EWSA");
            codes.Add("000503", "HHKG");
            codes.Add("000514", "YKF");
            codes.Add("002035", "HDGF");
            codes.Add("000504", "STC");
            codes.Add("000515", "PYTY");
            codes.Add("002036", "YKKJ");
            codes.Add("000505", "ZJKG");
            codes.Add("000789", "JXSN");
            codes.Add("002037", "JLFZ");
            codes.Add("000506", "ZRZY");
            codes.Add("000790", "HSJT");
            codes.Add("000502", "LJKG");
            codes.Add("000507", "ZHG");
            codes.Add("000791", "GSDT");
            codes.Add("002043", "TBB");
            codes.Add("000798", "ZSYY");
            codes.Add("000516", "KYTZ");
            codes.Add("000799", "JGJ");
            codes.Add("000517", "RADC");
            codes.Add("000800", "YQJC");
            codes.Add("000518", "SHSW");
            codes.Add("002045", "GGDQ");
            codes.Add("000519", "JNHJ");
            codes.Add("002046", "ZYKJ");
            codes.Add("000792", "YHGF");
            codes.Add("002047", "BYGF");
            codes.Add("000793", "HWCM");
            codes.Add("002048", "NBHX");
            codes.Add("000795", "TYGY");
            codes.Add("002049", "TFGX");
            codes.Add("000796", "YSGF");
            codes.Add("002050", "SHGF");
            codes.Add("000797", "ZGWY");
            codes.Add("002051", "ZGGJ");
            codes.Add("000801", "SCJZ");
            codes.Add("000524", "DFBG");
            codes.Add("000532", "LHGF");
            codes.Add("000802", "BJLY");
            codes.Add("000533", "WJL");
            codes.Add("000525", "HTY");
            codes.Add("000803", "JYCC");
            codes.Add("000534", "WZGF");
            codes.Add("000526", "YRTZ");
            codes.Add("000805", "STY");
            codes.Add("000536", "HYKJ");
            codes.Add("000527", "MDDQ");
            codes.Add("000806", "YHTZ");
            codes.Add("000537", "GYFZ");
            codes.Add("000528", "LG");
            codes.Add("000807", "YLGF");
            codes.Add("002054", "DMHG");
            codes.Add("000529", "GHKG");
            codes.Add("000809", "TLXC");
            codes.Add("002055", "DRDZ");
            codes.Add("002052", "TZDZ");
            codes.Add("000521", "MLDQ");
            codes.Add("002056", "HDDC");
            codes.Add("002053", "YNYH");
            codes.Add("000522", "BYSA");
            codes.Add("002057", "ZGTY");
            codes.Add("000530", "DLGF");
            codes.Add("000523", "GZLQ");
            codes.Add("002058", "WET");
            codes.Add("000531", "SHYA");
            codes.Add("002059", "YNLY");
            codes.Add("000813", "TSFZ");
            codes.Add("002060", "YSD");
            codes.Add("000815", "MLZY");
            codes.Add("000538", "YNBY");
            codes.Add("000816", "JHDL");
            codes.Add("000539", "YDLA");
            codes.Add("000818", "FDHG");
            codes.Add("000540", "ZTCT");
            codes.Add("000819", "YYXC");
            codes.Add("002061", "JSHG");
            codes.Add("000820", "JCGF");
            codes.Add("002062", "HRJS");
            codes.Add("000821", "JSQJ");
            codes.Add("002063", "YGRJ");
            codes.Add("000822", "STH");
            codes.Add("000811", "YTBL");
            codes.Add("000823", "CSDZ");
            codes.Add("000812", "SXJY");
            codes.Add("000825", "TGBX");
            codes.Add("000826", "SDHJ");
            codes.Add("000543", "WNDL");
            codes.Add("002074", "DYDQ");
            codes.Add("000828", "DGKG");
            codes.Add("000544", "ZYHB");
            codes.Add("002075", "SGGF");
            codes.Add("000829", "TYKG");
            codes.Add("000545", "JPTY");
            codes.Add("002076", "XLT");
            codes.Add("000830", "LXHG");
            codes.Add("000546", "GHKG");
            codes.Add("000547", "MFFA");
            codes.Add("002065", "DHRJ");
            codes.Add("002068", "HMGF");
            codes.Add("000548", "HNTZ");
            codes.Add("002066", "RTKJ");
            codes.Add("002069", "ZZD");
            codes.Add("000550", "JLQC");
            codes.Add("000831", "WKXT");
            codes.Add("002070", "ZHGF");
            codes.Add("000551", "CYKJ");
            codes.Add("000833", "GTGF");
            codes.Add("002071", "CCYS");
            codes.Add("000552", "JYMD");
            codes.Add("000835", "SCSD");
            codes.Add("002072", "DMGF");
            codes.Add("000553", "SLDA");
            codes.Add("002067", "JXZY");
            codes.Add("002073", "RKGF");
            codes.Add("000554", "TSSY");
            codes.Add("000555", "SZXX");
            codes.Add("002079", "SZGD");
            codes.Add("000557", "STG");
            codes.Add("002080", "ZCKJ");
            codes.Add("000558", "LYZY");
            codes.Add("002081", "JTL");
            codes.Add("000559", "WXQC");
            codes.Add("002082", "DLXC");
            codes.Add("000560", "KBDA");
            codes.Add("002083", "FRGF");
            codes.Add("000561", "FHDZ");
            codes.Add("000837", "QCFZ");
            codes.Add("000562", "HYZQ");
            codes.Add("000565", "YSXA");
            codes.Add("000563", "SGTA");
            codes.Add("000566", "HNHY");
            codes.Add("002077", "DGGF");
            codes.Add("000567", "HDGF");
            codes.Add("002078", "TYZY");
            codes.Add("000568", "LZLJ");
            codes.Add("000569", "CCGF");
            codes.Add("000851", "GHGF");
            codes.Add("000869", "ZYA");
            codes.Add("000570", "SCCA");
            codes.Add("000875", "JDGF");
            codes.Add("000852", "JZGF");
            codes.Add("000571", "XDZA");
            codes.Add("000876", "XXW");
            codes.Add("000856", "JDZB");
            codes.Add("000572", "HMQC");
            codes.Add("000877", "TSGF");
            codes.Add("000858", "WLY");
            codes.Add("000573", "YHYA");
            codes.Add("000578", "YHJT");
            codes.Add("000859", "GFSY");
            codes.Add("000576", "GDGH");
            codes.Add("000581", "WFGK");
            codes.Add("000860", "SXNY");
            codes.Add("000838", "GXDC");
            codes.Add("000582", "BBWG");
            codes.Add("000861", "HYGF");
            codes.Add("000584", "YLKG");
            codes.Add("000839", "ZXGA");
            codes.Add("000862", "YXNY");
            codes.Add("000585", "DBDQ");
            codes.Add("000848", "CDLL");
            codes.Add("000863", "SXGF");
            codes.Add("000586", "HYTX");
            codes.Add("000850", "HMGF");
            codes.Add("000868", "AKKC");
            codes.Add("000587", "JYZB");
            codes.Add("002092", "ZTHX");
            codes.Add("000589", "QLTA");
            codes.Add("002093", "GMKJ");
            codes.Add("000590", "ZGGH");
            codes.Add("002094", "QDJW");
            codes.Add("002085", "WFAW");
            codes.Add("002095", "SYB");
            codes.Add("002086", "DFHY");
            codes.Add("002096", "NLMB");
            codes.Add("002087", "XYFZ");
            codes.Add("002097", "SHZN");
            codes.Add("002088", "LYGF");
            codes.Add("002098", "XXGF");
            codes.Add("002089", "XHY");
            codes.Add("002099", "HXYY");
            codes.Add("002090", "JZKJ");
            codes.Add("002100", "TKSW");
            codes.Add("002091", "JSGT");
            codes.Add("002101", "GDHT");
            codes.Add("002102", "GFJY");
            codes.Add("000882", "HLGF");
            codes.Add("000889", "MYWL");
            codes.Add("002103", "GBGF");
            codes.Add("000890", "FES");
            codes.Add("000883", "HBNY");
            codes.Add("000592", "PTFZ");
            codes.Add("000892", "XMLH");
            codes.Add("000885", "TLSN");
            codes.Add("000593", "DTRQ");
            codes.Add("000893", "DLLY");
            codes.Add("000886", "HNGS");
            codes.Add("000594", "STG");
            codes.Add("000895", "SHFZ");
            codes.Add("000887", "ZDGF");
            codes.Add("000595", "XBZC");
            codes.Add("000897", "JBFZ");
            codes.Add("000598", "XRTZ");
            codes.Add("000596", "GJGJ");
            codes.Add("000898", "AGGF");
            codes.Add("000599", "QDSX");
            codes.Add("000597", "DBZY");
            codes.Add("000899", "GNGF");
            codes.Add("002105", "XLSY");
            codes.Add("000880", "WCZJ");
            codes.Add("000900", "XDTZ");
            codes.Add("000881", "DLGJ");
            codes.Add("002106", "LBGK");
            codes.Add("002107", "WHYY");
            codes.Add("000888", "EMSA");
            codes.Add("000600", "JTNY");
            codes.Add("000611", "SHGF");
            codes.Add("000601", "SNGF");
            codes.Add("002108", "CZMZ");
            codes.Add("000602", "JMTS");
            codes.Add("002109", "XHGF");
            codes.Add("000603", "SDKY");
            codes.Add("002110", "SGMG");
            codes.Add("000605", "BHGF");
            codes.Add("002111", "WHGT");
            codes.Add("000606", "QHMJ");
            codes.Add("002112", "SBKJ");
            codes.Add("000607", "HZKG");
            codes.Add("002113", "TRKG");
            codes.Add("000608", "YGGF");
            codes.Add("002114", "LPXD");
            codes.Add("000609", "MSGF");
            codes.Add("002115", "SWTX");
            codes.Add("000610", "XALY");
            codes.Add("000901", "HTKJ");
            codes.Add("000902", "XYF");
            codes.Add("002122", "TMGF");
            codes.Add("002136", "AND");
            codes.Add("002116", "ZGHC");
            codes.Add("002137", "SYD");
            codes.Add("002123", "RXGF");
            codes.Add("002117", "DGGF");
            codes.Add("002138", "SLDZ");
            codes.Add("002128", "LTMY");
            codes.Add("002118", "ZXYY");
            codes.Add("002139", "TBGF");
            codes.Add("002129", "ZHGF");
            codes.Add("002119", "KQDZ");
            codes.Add("002140", "DHKJ");
            codes.Add("002130", "WEHC");
            codes.Add("002125", "XTDH");
            codes.Add("002141", "RSCW");
            codes.Add("002126", "YLGF");
            codes.Add("002131", "LOGF");
            codes.Add("002142", "NBYH");
            codes.Add("002127", "STX");
            codes.Add("002132", "HXKJ");
            codes.Add("002143", "GJSP");
            codes.Add("002120", "XHGF");
            codes.Add("002133", "GYJT");
            codes.Add("002326", "YTKJ");
            codes.Add("002121", "KLDZ");
            codes.Add("002134", "STP");
            codes.Add("002327", "FAN");
            codes.Add("002135", "DNWJ");
            codes.Add("002328", "XPGF");
            codes.Add("002338", "APGD");
            codes.Add("002329", "HSRY");
            codes.Add("002339", "JCDZ");
            codes.Add("002330", "DLS");
            codes.Add("002340", "GLM");
            codes.Add("002331", "WTKJ");
            codes.Add("002145", "ZHTB");
            codes.Add("002332", "XJZY");
            codes.Add("002146", "RSFZ");
            codes.Add("002333", "LPSJ");
            codes.Add("002147", "FYZC");
            codes.Add("002334", "YWT");
            codes.Add("002148", "BWTX");
            codes.Add("002335", "KHHS");
            codes.Add("002149", "XBCL");
            codes.Add("002336", "RRL");
            codes.Add("002341", "XLKJ");
            codes.Add("002337", "SXKJ");
            codes.Add("002342", "JLSJ");
            codes.Add("002343", "HXGF");
            codes.Add("002159", "STSD");
            codes.Add("002350", "BJKR");
            codes.Add("002150", "TRZB");
            codes.Add("002160", "STC");
            codes.Add("002351", "MBZ");
            codes.Add("002151", "BDXT");
            codes.Add("002161", "YWG");
            codes.Add("002352", "DTXC");
            codes.Add("002152", "GDYT");
            codes.Add("002353", "JRGF");
            codes.Add("002162", "SMK");
            codes.Add("002153", "SJXX");
            codes.Add("002354", "KMMY");
            codes.Add("002163", "STS");
            codes.Add("002355", "XMGQ");
            codes.Add("002154", "BXN");
            codes.Add("002344", "HNPC");
            codes.Add("002356", "HND");
            codes.Add("002155", "CZKY");
            codes.Add("002346", "ZZJS");
            codes.Add("002357", "FLYY");
            codes.Add("002156", "TFWD");
            codes.Add("002358", "SYDQ");
            codes.Add("002347", "TEZG");
            codes.Add("002157", "ZBKJ");
            codes.Add("002359", "QXTT");
            codes.Add("002348", "GLGF");
            codes.Add("002158", "HZJJ");
            codes.Add("002349", "JHZY");
            codes.Add("002360", "TDHG");
            codes.Add("002173", "QZZZ");
            codes.Add("002361", "SJGF");
            codes.Add("002174", "YZWL");
            codes.Add("002165", "HBL");
            codes.Add("002175", "GLSC");
            codes.Add("002166", "LYSW");
            codes.Add("002176", "JTDJ");
            codes.Add("002167", "DFGY");
            codes.Add("002177", "YYGF");
            codes.Add("002168", "SZHC");
            codes.Add("002178", "YHZN");
            codes.Add("002169", "ZGDQ");
            codes.Add("002179", "ZHGD");
            codes.Add("002170", "BTGF");
            codes.Add("002180", "WLD");
            codes.Add("002171", "JCTY");
            codes.Add("002181", "YCM");
            codes.Add("002172", "AYKJ");
            codes.Add("002182", "YHJS");
            codes.Add("002183", "YYT");
            codes.Add("002191", "JJGF");
            codes.Add("002372", "WXXC");
            codes.Add("002362", "HWKJ");
            codes.Add("002192", "LXGF");
            codes.Add("002373", "LXYY");
            codes.Add("002363", "LJJX");
            codes.Add("002193", "SDRY");
            codes.Add("002374", "LPGF");
            codes.Add("002364", "ZHDQ");
            codes.Add("002194", "WHFG");
            codes.Add("002375", "YXGF");
            codes.Add("002185", "HTKJ");
            codes.Add("002366", "DFGF");
            codes.Add("002376", "XBY");
            codes.Add("002186", "QJD");
            codes.Add("002367", "KLDT");
            codes.Add("002187", "GBGF");
            codes.Add("002377", "GCGX");
            codes.Add("002368", "TJGF");
            codes.Add("002188", "XJL");
            codes.Add("002378", "ZYWY");
            codes.Add("002369", "ZYKJ");
            codes.Add("002189", "LDGD");
            codes.Add("002379", "LFHB");
            codes.Add("002370", "YTYY");
            codes.Add("002190", "CFJC");
            codes.Add("002380", "KYGF");
            codes.Add("002371", "QXDZ");
            codes.Add("002381", "SJGF");
            codes.Add("002382", "LFGF");
            codes.Add("002202", "JFKJ");
            codes.Add("002383", "HZSZ");
            codes.Add("002203", "HLGF");
            codes.Add("002384", "DSJM");
            codes.Add("002205", "GTGF");
            codes.Add("002195", "HLRJ");
            codes.Add("002206", "HLD");
            codes.Add("002196", "FZDJ");
            codes.Add("002207", "ZYGF");
            codes.Add("002197", "ZTDZ");
            codes.Add("002208", "HFCJ");
            codes.Add("002198", "JYZY");
            codes.Add("002209", "DYL");
            codes.Add("002199", "DJDZ");
            codes.Add("002210", "FMGJ");
            codes.Add("002200", "LDD");
            codes.Add("002211", "HDXC");
            codes.Add("002201", "JDXC");
            codes.Add("002212", "NYGF");
            codes.Add("002213", "TEJ");
            codes.Add("002223", "YYYL");
            codes.Add("002395", "SXGF");
            codes.Add("002214", "DLKJ");
            codes.Add("002396", "XWRJ");
            codes.Add("002386", "TYJT");
            codes.Add("002215", "NPX");
            codes.Add("002397", "MJJF");
            codes.Add("002387", "HNSP");
            codes.Add("002216", "SQSP");
            codes.Add("002398", "JYJT");
            codes.Add("002388", "XYZC");
            codes.Add("002217", "STH");
            codes.Add("002399", "HPR");
            codes.Add("002389", "NYKJ");
            codes.Add("002218", "TRXN");
            codes.Add("002400", "SGGF");
            codes.Add("002390", "XBZY");
            codes.Add("002219", "HKYL");
            codes.Add("002225", "PNGF");
            codes.Add("002391", "CQGF");
            codes.Add("002220", "TBGF");
            codes.Add("002226", "JNHG");
            codes.Add("002392", "BJLE");
            codes.Add("002221", "DHNY");
            codes.Add("002227", "ATX");
            codes.Add("002393", "LSZY");
            codes.Add("002222", "FJKJ");
            codes.Add("002228", "HXBZ");
            codes.Add("002394", "LFGF");
            codes.Add("002229", "HBGF");
            codes.Add("002235", "ANGF");
            codes.Add("002230", "KDXF");
            codes.Add("002236", "DHGF");
            codes.Add("002401", "ZHKJ");
            codes.Add("002237", "HBGF");
            codes.Add("002402", "HET");
            codes.Add("002238", "TWSX");
            codes.Add("002403", "ASD");
            codes.Add("002406", "YDCD");
            codes.Add("002404", "JXSC");
            codes.Add("002407", "DFD");
            codes.Add("002231", "AWTX");
            codes.Add("002408", "QXTD");
            codes.Add("002232", "QMXX");
            codes.Add("002409", "YKKJ");
            codes.Add("002233", "TPJT");
            codes.Add("002410", "GLD");
            codes.Add("002234", "STM");
            codes.Add("002239", "JFD");
            codes.Add("002240", "WHGF");
            codes.Add("002420", "YCGF");
            codes.Add("002247", "DLXC");
            codes.Add("002411", "JJJ");
            codes.Add("002421", "DSZN");
            codes.Add("002248", "STD");
            codes.Add("002412", "HSZY");
            codes.Add("002422", "KLYY");
            codes.Add("002249", "DYDJ");
            codes.Add("002413", "CFGF");
            codes.Add("002241", "GESX");
            codes.Add("002250", "LHKJ");
            codes.Add("002414", "GDHW");
            codes.Add("002242", "JYGF");
            codes.Add("002251", "BBG");
            codes.Add("002415", "HKWS");
            codes.Add("002243", "TCLX");
            codes.Add("002426", "SLJM");
            codes.Add("002416", "ASD");
            codes.Add("002423", "ZYTG");
            codes.Add("002427", "YFGF");
            codes.Add("002417", "SYD");
            codes.Add("002424", "GZBL");
            codes.Add("002428", "YNZY");
            codes.Add("002418", "KSGF");
            codes.Add("002245", "AYSC");
            codes.Add("002429", "ZCGF");
            codes.Add("002419", "THSC");
            codes.Add("002246", "BHGF");
            codes.Add("002430", "HYGF");
            codes.Add("002431", "ZLYL");
            codes.Add("002432", "JAYL");
            codes.Add("002437", "YHYY");
            codes.Add("002433", "TAT");
            codes.Add("002438", "JSST");
            codes.Add("002252", "SHLS");
            codes.Add("002439", "QMXC");
            codes.Add("002253", "CDZS");
            codes.Add("002440", "RTGF");
            codes.Add("002254", "THXC");
            codes.Add("002441", "ZYD");
            codes.Add("002255", "HLZG");
            codes.Add("002442", "LXHG");
            codes.Add("002434", "WLY");
            codes.Add("002443", "JZGD");
            codes.Add("002435", "CJRF");
            codes.Add("002444", "JXKJ");
            codes.Add("002436", "XSKJ");
            codes.Add("002256", "CHJH");
            codes.Add("002258", "LEHX");
            codes.Add("002259", "SDLY");
            codes.Add("002450", "KDX");
            codes.Add("002460", "GFLY");
            codes.Add("002260", "YLP");
            codes.Add("002461", "ZJPJ");
            codes.Add("002451", "MEDQ");
            codes.Add("002261", "TWXX");
            codes.Add("002452", "CGJT");
            codes.Add("002462", "JST");
            codes.Add("002262", "EHYY");
            codes.Add("002453", "TMJH");
            codes.Add("002266", "ZFKG");
            codes.Add("002263", "DDN");
            codes.Add("002454", "SZGF");
            codes.Add("002267", "STRQ");
            codes.Add("002264", "XHD");
            codes.Add("002455", "BCGF");
            codes.Add("002268", "WST");
            codes.Add("002446", "SLTX");
            codes.Add("002456", "OFG");
            codes.Add("002269", "MBFS");
            codes.Add("002447", "YQMY");
            codes.Add("002457", "QLGY");
            codes.Add("002270", "FYSK");
            codes.Add("002448", "ZYNP");
            codes.Add("002458", "YSGF");
            codes.Add("002271", "DFYH");
            codes.Add("002449", "GXGD");
            codes.Add("002459", "STT");
            codes.Add("002272", "CRGF");
            codes.Add("002273", "SJGD");
            codes.Add("002274", "HCHG");
            codes.Add("002281", "GXKJ");
            codes.Add("002275", "GLSJ");
            codes.Add("002282", "BSGJ");
            codes.Add("002276", "WMGF");
            codes.Add("002283", "TRQZ");
            codes.Add("002277", "YAGF");
            codes.Add("002284", "YTGF");
            codes.Add("002278", "SKGF");
            codes.Add("002466", "TQLY");
            codes.Add("002463", "HDGF");
            codes.Add("002467", "ELS");
            codes.Add("002464", "JLKJ");
            codes.Add("002468", "ADX");
            codes.Add("002279", "JQRJ");
            codes.Add("002469", "SWGC");
            codes.Add("002280", "XSJ");
            codes.Add("002470", "JZD");
            codes.Add("002471", "ZCDL");
            codes.Add("002286", "BLB");
            codes.Add("002291", "XQL");
            codes.Add("002296", "HHKJ");
            codes.Add("002287", "QZCY");
            codes.Add("002477", "CYNM");
            codes.Add("002297", "BYXC");
            codes.Add("002288", "CHKJ");
            codes.Add("002478", "CBGF");
            codes.Add("002298", "XLDQ");
            codes.Add("002289", "YSDZ");
            codes.Add("002479", "FCHB");
            codes.Add("002299", "SNFZ");
            codes.Add("002290", "HSXC");
            codes.Add("002480", "XZGF");
            codes.Add("002300", "TYDL");
            codes.Add("002472", "SHCD");
            codes.Add("002301", "QXWJ");
            codes.Add("002481", "STSP");
            codes.Add("002473", "SLD");
            codes.Add("002302", "XBJS");
            codes.Add("002292", "AFDM");
            codes.Add("002474", "RJRJ");
            codes.Add("002303", "MYS");
            codes.Add("002293", "LLJF");
            codes.Add("002475", "LXJM");
            codes.Add("002482", "GTGF");
            codes.Add("002294", "XLT");
            codes.Add("002476", "BMGF");
            codes.Add("002483", "RBGF");
            codes.Add("002295", "JYGF");
            codes.Add("002484", "JHGF");
            codes.Add("002308", "WCGF");
            codes.Add("002304", "YHGF");
            codes.Add("002309", "ZLKJ");
            codes.Add("002486", "JLJ");
            codes.Add("002310", "DFYL");
            codes.Add("002487", "DJZG");
            codes.Add("002311", "HDJT");
            codes.Add("002488", "JGGF");
            codes.Add("002492", "HJDX");
            codes.Add("002489", "ZJYQ");
            codes.Add("002493", "RSSH");
            codes.Add("002490", "SDML");
            codes.Add("002494", "HSGF");
            codes.Add("002491", "TDGD");
            codes.Add("002495", "JLGF");
            codes.Add("002306", "XEQ");
            codes.Add("002496", "HFGF");
            codes.Add("002307", "BXLQ");
            codes.Add("002497", "YHJT");
            codes.Add("002498", "HLGF");
            codes.Add("002315", "JDKJ");
            codes.Add("002507", "FLZC");
            codes.Add("002499", "KLHB");
            codes.Add("002508", "LBDQ");
            codes.Add("002316", "JQTX");
            codes.Add("002500", "SXZQ");
            codes.Add("002509", "TGXF");
            codes.Add("002317", "ZSYY");
            codes.Add("002501", "LYJZ");
            codes.Add("002510", "TQM");
            codes.Add("002318", "JLTC");
            codes.Add("002502", "HWGF");
            codes.Add("002511", "ZSJR");
            codes.Add("002319", "LTGF");
            codes.Add("002503", "SYT");
            codes.Add("002512", "DHZN");
            codes.Add("002320", "HXGF");
            codes.Add("002504", "DGWD");
            codes.Add("002513", "LFSH");
            codes.Add("002321", "HYNY");
            codes.Add("002312", "STDZ");
            codes.Add("002514", "BXKJ");
            codes.Add("002322", "LGJC");
            codes.Add("002313", "RHTX");
            codes.Add("002515", "JZHT");
            codes.Add("002323", "ZLDQ");
            codes.Add("002314", "YZGF");
            codes.Add("002516", "JSKD");
            codes.Add("002506", "STC");
            codes.Add("002517", "TYGF");
            codes.Add("002527", "XSD");
            codes.Add("002518", "KSD");
            codes.Add("300132", "QSGF");
            codes.Add("002519", "YHDZ");
            codes.Add("300133", "HCYS");
            codes.Add("002520", "RFJJ");
            codes.Add("300134", "DFKJ");
            codes.Add("002521", "QFXC");
            codes.Add("300135", "BLLQ");
            codes.Add("002522", "ZJZC");
            codes.Add("300136", "XWTX");
            codes.Add("002523", "TQQZ");
            codes.Add("300137", "XHHB");
            codes.Add("002524", "GZJT");
            codes.Add("300138", "CGSW");
            codes.Add("002324", "PLT");
            codes.Add("002731", "CHZB");
            codes.Add("002730", "DGKJ");
            codes.Add("002528", "YFT");
            codes.Add("002529", "HYJX");
            codes.Add("002539", "XDHG");
            codes.Add("002735", "WZXC");
            codes.Add("002530", "FDGF");
            codes.Add("002540", "YTKJ");
            codes.Add("002736", "GXZQ");
            codes.Add("002531", "TSFN");
            codes.Add("002732", "YTRY");
            codes.Add("002737", "KHYY");
            codes.Add("002532", "XJBY");
            codes.Add("002541", "HLGG");
            codes.Add("002738", "ZKZY");
            codes.Add("002533", "JBDG");
            codes.Add("002542", "ZHYT");
            codes.Add("002739", "WDYH");
            codes.Add("002534", "HGGF");
            codes.Add("002543", "WHDQ");
            codes.Add("002740", "ADE");
            codes.Add("002535", "LZZJ");
            codes.Add("002544", "JSKJ");
            codes.Add("002741", "GHKJ");
            codes.Add("002536", "XBGF");
            codes.Add("002545", "DFTT");
            codes.Add("002742", "SSTC");
            codes.Add("002537", "HLMD");
            codes.Add("002733", "XTGF");
            codes.Add("002743", "FHGG");
            codes.Add("002538", "SET");
            codes.Add("002734", "LMGF");
            codes.Add("002745", "MLS");
            codes.Add("002746", "XTGF");
            codes.Add("002553", "NFZC");
            codes.Add("200002", "WKB");
            codes.Add("002554", "HBP");
            codes.Add("200011", "SWYB");
            codes.Add("002555", "SRGF");
            codes.Add("200012", "NBB");
            codes.Add("002556", "HLGF");
            codes.Add("002547", "CXJG");
            codes.Add("002557", "QQSP");
            codes.Add("002548", "JXN");
            codes.Add("002558", "SJYL");
            codes.Add("002549", "KMTQ");
            codes.Add("002559", "YWGF");
            codes.Add("002550", "QHZY");
            codes.Add("002560", "TDGF");
            codes.Add("002551", "SRYL");
            codes.Add("300139", "FXXC");
            codes.Add("002552", "BDZG");
            codes.Add("002561", "XJH");
            codes.Add("002562", "XDKJ");
            codes.Add("200024", "ZSJB");
            codes.Add("300145", "NFBY");
            codes.Add("002563", "SMFS");
            codes.Add("200025", "TLB");
            codes.Add("200037", "SNDB");
            codes.Add("002564", "ZHJ");
            codes.Add("200026", "FYDB");
            codes.Add("002567", "TRS");
            codes.Add("002565", "SHLX");
            codes.Add("200028", "YZB");
            codes.Add("002568", "BRGF");
            codes.Add("200017", "SZHB");
            codes.Add("200029", "SSFB");
            codes.Add("002569", "BSGF");
            codes.Add("200018", "ZGB");
            codes.Add("200030", "FAB");
            codes.Add("300146", "TCBJ");
            codes.Add("200019", "SSBB");
            codes.Add("300141", "HSDQ");
            codes.Add("300147", "XXZY");
            codes.Add("200020", "SHFB");
            codes.Add("300142", "WSSW");
            codes.Add("200039", "ZJB");
            codes.Add("300140", "QYZB");
            codes.Add("300143", "XHSW");
            codes.Add("200045", "SFZB");
            codes.Add("200022", "SCWB");
            codes.Add("300144", "SCYY");
            codes.Add("002570", "BYM");
            codes.Add("002571", "DLGF");
            codes.Add("300149", "LZGK");
            codes.Add("002572", "SFY");
            codes.Add("300150", "SJRE");
            codes.Add("002573", "GDQX");
            codes.Add("002575", "QXWJ");
            codes.Add("002574", "MPZB");
            codes.Add("002576", "TDDL");
            codes.Add("200053", "SJDB");
            codes.Add("002577", "LBKJ");
            codes.Add("200054", "JMB");
            codes.Add("002578", "MFLY");
            codes.Add("200055", "FDB");
            codes.Add("002579", "ZJDZ");
            codes.Add("200056", "SGSB");
            codes.Add("002580", "SYGF");
            codes.Add("200058", "SSGB");
            codes.Add("002581", "WCKJ");
            codes.Add("300148", "TZWH");
            codes.Add("002582", "HXN");
            codes.Add("002583", "HND");
            codes.Add("300153", "KTDY");
            codes.Add("300159", "XYGF");
            codes.Add("002584", "XLHG");
            codes.Add("300154", "RLGF");
            codes.Add("300160", "XQGF");
            codes.Add("002585", "SXXC");
            codes.Add("300155", "AJB");
            codes.Add("300161", "HZSK");
            codes.Add("200160", "NJB");
            codes.Add("300156", "TLHB");
            codes.Add("300162", "LMGD");
            codes.Add("200168", "LYB");
            codes.Add("300157", "HTAP");
            codes.Add("300163", "XFXC");
            codes.Add("200413", "DXB");
            codes.Add("200488", "CMB");
            codes.Add("300164", "TYSY");
            codes.Add("200418", "XTEB");
            codes.Add("200505", "ZJB");
            codes.Add("300165", "TRYQ");
            codes.Add("200429", "YGSB");
            codes.Add("200512", "MCKB");
            codes.Add("300166", "DFGX");
            codes.Add("200468", "NTXB");
            codes.Add("200513", "LZB");
            codes.Add("300167", "DWSX");
            codes.Add("300152", "RKKJ");
            codes.Add("300158", "ZDZY");
            codes.Add("300168", "WDXX");
            codes.Add("300169", "TSXC");
            codes.Add("200596", "GJGB");
            codes.Add("300170", "HDXX");
            codes.Add("002587", "ATDZ");
            codes.Add("200521", "WMLB");
            codes.Add("002588", "SDL");
            codes.Add("200530", "DLB");
            codes.Add("002589", "RKYY");
            codes.Add("200539", "YDLB");
            codes.Add("002590", "WAKJ");
            codes.Add("200541", "YZMB");
            codes.Add("002591", "HDGX");
            codes.Add("200550", "JLB");
            codes.Add("002592", "BLKJ");
            codes.Add("200553", "SLDB");
            codes.Add("002593", "RSJT");
            codes.Add("200570", "SCCB");
            codes.Add("002594", "BYD");
            codes.Add("200581", "SWFB");
            codes.Add("300172", "ZDHB");
            codes.Add("300173", "SDGF");
            codes.Add("200725", "JDFB");
            codes.Add("300002", "SZTY");
            codes.Add("300174", "YLGF");
            codes.Add("002595", "HMKJ");
            codes.Add("300003", "LPYL");
            codes.Add("300175", "LYGF");
            codes.Add("200726", "LTB");
            codes.Add("300004", "NFGF");
            codes.Add("300176", "HTJM");
            codes.Add("200761", "BGBB");
            codes.Add("300181", "ZLYY");
            codes.Add("300177", "ZHD");
            codes.Add("200770", "STW");
            codes.Add("300182", "JCGF");
            codes.Add("300178", "TBGJ");
            codes.Add("200771", "HQLB");
            codes.Add("300183", "DRZB");
            codes.Add("300179", "SFD");
            codes.Add("200869", "ZYB");
            codes.Add("300184", "LYXX");
            codes.Add("300180", "HFCX");
            codes.Add("200986", "YHBB");
            codes.Add("300185", "TYZG");
            codes.Add("200625", "CAB");
            codes.Add("200992", "ZLB");
            codes.Add("300186", "DHN");
            codes.Add("200706", "WZB");
            codes.Add("300001", "TRD");
            codes.Add("300187", "YQHB");
            codes.Add("300188", "MYBK");
            codes.Add("002598", "SDZG");
            codes.Add("300189", "SNDF");
            codes.Add("002599", "STGF");
            codes.Add("300190", "WEL");
            codes.Add("002600", "JFCC");
            codes.Add("300005", "TLZ");
            codes.Add("002601", "BLL");
            codes.Add("300006", "LMYY");
            codes.Add("002602", "SJHT");
            codes.Add("300007", "HWDZ");
            codes.Add("002603", "YLYY");
            codes.Add("300008", "SHJH");
            codes.Add("002604", "LLSW");
            codes.Add("300009", "AKSW");
            codes.Add("002605", "YJPK");
            codes.Add("002596", "HNRZ");
            codes.Add("300011", "DHJS");
            codes.Add("002597", "JHSY");
            codes.Add("300012", "HCJC");
            codes.Add("300013", "XNWL");
            codes.Add("300023", "BDGF");
            codes.Add("300195", "CRGF");
            codes.Add("300014", "YWLN");
            codes.Add("300024", "JQR");
            codes.Add("300196", "CHGF");
            codes.Add("300015", "AEYK");
            codes.Add("300025", "HXCY");
            codes.Add("002607", "YXQC");
            codes.Add("300016", "BLYY");
            codes.Add("300026", "HRYY");
            codes.Add("002608", "STCB");
            codes.Add("300017", "WSKJ");
            codes.Add("300027", "HYXD");
            codes.Add("002609", "JSKJ");
            codes.Add("300018", "ZYHD");
            codes.Add("300028", "JYKJ");
            codes.Add("002610", "AKKJ");
            codes.Add("300019", "GBKJ");
            codes.Add("300029", "TLGD");
            codes.Add("002611", "DFJG");
            codes.Add("300020", "YJGF");
            codes.Add("300192", "KSWD");
            codes.Add("002612", "LZGF");
            codes.Add("300021", "DYJS");
            codes.Add("300193", "JSKJ");
            codes.Add("002613", "BBGF");
            codes.Add("300022", "JFNJ");
            codes.Add("300194", "FAYY");
            codes.Add("002614", "MFL");
            codes.Add("002615", "HES");
            codes.Add("300197", "THST");
            codes.Add("002619", "JLGY");
            codes.Add("300198", "NCGF");
            codes.Add("002620", "RHGF");
            codes.Add("300199", "HYYY");
            codes.Add("002621", "DLSL");
            codes.Add("300200", "GMXC");
            codes.Add("300203", "JGKJ");
            codes.Add("300201", "HLZ");
            codes.Add("300204", "STS");
            codes.Add("300202", "JLGF");
            codes.Add("300205", "TYXX");
            codes.Add("002616", "CQJT");
            codes.Add("300206", "LBYQ");
            codes.Add("002617", "LXKJ");
            codes.Add("300207", "XWD");
            codes.Add("002618", "DBKJ");
            codes.Add("300208", "HSDQ");
            codes.Add("300209", "TZXX");
            codes.Add("300210", "SYGF");
            codes.Add("300036", "CTRJ");
            codes.Add("300046", "TJGF");
            codes.Add("300031", "BTDY");
            codes.Add("300037", "XZB");
            codes.Add("300047", "TYDK");
            codes.Add("300032", "JLJD");
            codes.Add("300038", "MTN");
            codes.Add("300048", "HKBP");
            codes.Add("002622", "YDJT");
            codes.Add("300039", "SHKB");
            codes.Add("300212", "YHL");
            codes.Add("002623", "YMD");
            codes.Add("300040", "JZDQ");
            codes.Add("300213", "JXFH");
            codes.Add("002624", "JLGF");
            codes.Add("300041", "HTXC");
            codes.Add("300214", "RKHX");
            codes.Add("002625", "LSGF");
            codes.Add("300042", "LKKJ");
            codes.Add("300033", "THS");
            codes.Add("300215", "DKY");
            codes.Add("300043", "HDYL");
            codes.Add("300216", "QSYJ");
            codes.Add("300034", "GYGN");
            codes.Add("300044", "SWZN");
            codes.Add("300217", "DFDR");
            codes.Add("300035", "ZKDQ");
            codes.Add("300045", "HLCT");
            codes.Add("300049", "FRGF");
            codes.Add("300218", "ALGF");
            codes.Add("002627", "YCJY");
            codes.Add("300219", "HLGD");
            codes.Add("002628", "CDLQ");
            codes.Add("300220", "JYJG");
            codes.Add("002629", "RZYF");
            codes.Add("300221", "YXKJ");
            codes.Add("300051", "SWHL");
            codes.Add("300222", "KDZN");
            codes.Add("300052", "ZQB");
            codes.Add("300223", "BJJZ");
            codes.Add("300053", "OBT");
            codes.Add("300224", "ZHCC");
            codes.Add("300054", "DLGF");
            codes.Add("300225", "JLT");
            codes.Add("300055", "WBD");
            codes.Add("300226", "SHGL");
            codes.Add("300056", "SWS");
            codes.Add("300227", "GYD");
            codes.Add("300057", "WSGF");
            codes.Add("300228", "FRTZ");
            codes.Add("300059", "DFCF");
            codes.Add("300070", "BSY");
            codes.Add("300229", "TES");
            codes.Add("002636", "JAGJ");
            codes.Add("300061", "KNT");
            codes.Add("300058", "LSGB");
            codes.Add("002637", "ZYKJ");
            codes.Add("300062", "ZNDQ");
            codes.Add("002630", "HXNY");
            codes.Add("300063", "TLJT");
            codes.Add("300232", "ZMKJ");
            codes.Add("002631", "DEJJ");
            codes.Add("300064", "YJGS");
            codes.Add("300233", "JCYY");
            codes.Add("002632", "DMGX");
            codes.Add("300065", "HLX");
            codes.Add("002638", "QSGD");
            codes.Add("002633", "SKGF");
            codes.Add("300066", "SCGF");
            codes.Add("002639", "XRGF");
            codes.Add("002634", "BJGF");
            codes.Add("300067", "ANQ");
            codes.Add("002640", "BYKY");
            codes.Add("002635", "AJKJ");
            codes.Add("300068", "NDDY");
            codes.Add("002641", "YGGF");
            codes.Add("300230", "YLDY");
            codes.Add("300069", "JLHD");
            codes.Add("002642", "RZL");
            codes.Add("002643", "YTWR");
            codes.Add("300241", "RFGD");
            codes.Add("002644", "FCZY");
            codes.Add("300242", "MJKJ");
            codes.Add("002645", "HHKJ");
            codes.Add("300243", "RFGC");
            codes.Add("300234", "KEXC");
            codes.Add("300244", "DAZD");
            codes.Add("300235", "FZKJ");
            codes.Add("300245", "TJKJ");
            codes.Add("300236", "SHXY");
            codes.Add("300072", "SJHB");
            codes.Add("300237", "MCKJ");
            codes.Add("300073", "DSKJ");
            codes.Add("300238", "GHSW");
            codes.Add("300074", "HPGF");
            codes.Add("300239", "DBSW");
            codes.Add("300075", "SZZT");
            codes.Add("300240", "FLD");
            codes.Add("300076", "GQYS");
            codes.Add("300077", "GMJS");
            codes.Add("002652", "YZXC");
            codes.Add("002659", "ZTQL");
            codes.Add("002647", "HLGF");
            codes.Add("300249", "YMK");
            codes.Add("002660", "MSDY");
            codes.Add("002648", "WXSH");
            codes.Add("300079", "SMSX");
            codes.Add("002661", "KMMY");
            codes.Add("002649", "BYKJ");
            codes.Add("300250", "CLXX");
            codes.Add("002662", "JWGF");
            codes.Add("002650", "JJSP");
            codes.Add("002653", "HSK");
            codes.Add("002663", "PBYL");
            codes.Add("300246", "BLT");
            codes.Add("002654", "WRKJ");
            codes.Add("300080", "XDXC");
            codes.Add("300247", "SLJ");
            codes.Add("002655", "GDDS");
            codes.Add("300081", "HXYD");
            codes.Add("300078", "ZRSC");
            codes.Add("002656", "KNDL");
            codes.Add("300082", "AKGF");
            codes.Add("300248", "XKP");
            codes.Add("002657", "ZKJC");
            codes.Add("300083", "JSJM");
            codes.Add("002651", "LJGF");
            codes.Add("002658", "XDL");
            codes.Add("300084", "HMKJ");
            codes.Add("300085", "YZJ");
            codes.Add("300255", "CSYY");
            codes.Add("300086", "KZYY");
            codes.Add("300256", "XXKJ");
            codes.Add("300087", "QYGK");
            codes.Add("300257", "KSGF");
            codes.Add("300088", "CXKJ");
            codes.Add("300258", "JDKJ");
            codes.Add("300089", "CCJT");
            codes.Add("002665", "SHJN");
            codes.Add("300090", "SYGF");
            codes.Add("300259", "XTKJ");
            codes.Add("300252", "JXN");
            codes.Add("300260", "XLYC");
            codes.Add("002664", "XZDJ");
            codes.Add("300261", "YBHX");
            codes.Add("300253", "WNRJ");
            codes.Add("300262", "BASW");
            codes.Add("300254", "QYZY");
            codes.Add("300263", "LHJN");
            codes.Add("300264", "JCSX");
            codes.Add("300268", "WFSK");
            codes.Add("002670", "HSGF");
            codes.Add("300265", "TGXL");
            codes.Add("300269", "LJGD");
            codes.Add("002671", "LQGF");
            codes.Add("300266", "XYGL");
            codes.Add("300270", "ZWDZ");
            codes.Add("002672", "DJHB");
            codes.Add("300267", "EKZY");
            codes.Add("300097", "ZYGF");
            codes.Add("002673", "XBZQ");
            codes.Add("300098", "GXX");
            codes.Add("002674", "XYKJ");
            codes.Add("300092", "KXJD");
            codes.Add("300099", "YLK");
            codes.Add("002675", "DCYY");
            codes.Add("300093", "JGBL");
            codes.Add("300100", "SLGF");
            codes.Add("002676", "SWGF");
            codes.Add("300094", "GLSC");
            codes.Add("300101", "ZXKJ");
            codes.Add("002677", "ZJMD");
            codes.Add("300095", "HWGF");
            codes.Add("002668", "AMDQ");
            codes.Add("300102", "QZGD");
            codes.Add("300096", "YLZ");
            codes.Add("002669", "KDXC");
            codes.Add("300103", "DGLJ");
            codes.Add("002667", "AZGF");
            codes.Add("300104", "LSW");
            codes.Add("002683", "HDBP");
            codes.Add("300105", "LYJS");
            codes.Add("002684", "MSKJ");
            codes.Add("300106", "XBMY");
            codes.Add("002685", "HDZJ");
            codes.Add("300107", "JXGF");
            codes.Add("300272", "KNHB");
            codes.Add("300108", "SLGF");
            codes.Add("300273", "HJGF");
            codes.Add("002678", "ZJGQ");
            codes.Add("300274", "YGDY");
            codes.Add("002679", "FJJS");
            codes.Add("300275", "MAS");
            codes.Add("002680", "HHJX");
            codes.Add("300276", "SFZN");
            codes.Add("002681", "FDKJ");
            codes.Add("300277", "HLX");
            codes.Add("002682", "LZGF");
            codes.Add("300278", "HCD");
            codes.Add("300109", "XKY");
            codes.Add("002687", "QZB");
            codes.Add("002693", "SCYY");
            codes.Add("300110", "HRYY");
            codes.Add("002688", "JHSW");
            codes.Add("002694", "GDKJ");
            codes.Add("300279", "HJKJ");
            codes.Add("002689", "BLT");
            codes.Add("002695", "HSH");
            codes.Add("300280", "NTDY");
            codes.Add("300287", "FLX");
            codes.Add("002696", "BYGF");
            codes.Add("300281", "JMJJ");
            codes.Add("300288", "LMXX");
            codes.Add("002697", "HQLS");
            codes.Add("300282", "HGGF");
            codes.Add("300289", "LDM");
            codes.Add("002698", "BSGF");
            codes.Add("300283", "WZHF");
            codes.Add("300290", "RKKJ");
            codes.Add("002699", "MSWH");
            codes.Add("300284", "SJK");
            codes.Add("002690", "MYGD");
            codes.Add("002700", "XJHY");
            codes.Add("300285", "GCCL");
            codes.Add("002691", "SZZB");
            codes.Add("002701", "ARJ");
            codes.Add("300286", "AKR");
            codes.Add("002692", "YCDL");
            codes.Add("300292", "WTTX");
            codes.Add("300112", "WXZK");
            codes.Add("300119", "RPSW");
            codes.Add("002702", "HXSP");
            codes.Add("002706", "LXDQ");
            codes.Add("002703", "ZJSB");
            codes.Add("300293", "LYZB");
            codes.Add("002705", "XBGF");
            codes.Add("300294", "BYSW");
            codes.Add("300113", "SWKJ");
            codes.Add("300295", "SLWW");
            codes.Add("300114", "ZHDC");
            codes.Add("300296", "LYD");
            codes.Add("300115", "CYJM");
            codes.Add("300297", "LDGF");
            codes.Add("300116", "JRXF");
            codes.Add("300298", "SNSW");
            codes.Add("300117", "JYGF");
            codes.Add("300120", "JWDC");
            codes.Add("300118", "DFRS");
            codes.Add("300121", "YGHT");
            codes.Add("300122", "ZFSW");
            codes.Add("300302", "TYKJ");
            codes.Add("300310", "YTSJ");
            codes.Add("300123", "TYN");
            codes.Add("002708", "GYGF");
            codes.Add("300303", "JFGD");
            codes.Add("300124", "HCJS");
            codes.Add("002709", "TCCL");
            codes.Add("300304", "YYDQ");
            codes.Add("300125", "YSD");
            codes.Add("002711", "OPGW");
            codes.Add("300305", "YXGF");
            codes.Add("300126", "RQGF");
            codes.Add("002712", "SMCM");
            codes.Add("300129", "TSFN");
            codes.Add("300127", "YHCT");
            codes.Add("002713", "DYRS");
            codes.Add("300130", "XGD");
            codes.Add("300128", "JFXC");
            codes.Add("002714", "MYGF");
            codes.Add("300306", "YFGD");
            codes.Add("300299", "FCTX");
            codes.Add("002715", "DYGF");
            codes.Add("300307", "CXGF");
            codes.Add("300300", "HDGF");
            codes.Add("002716", "JGYY");
            codes.Add("300308", "ZJZB");
            codes.Add("300301", "CFZM");
            codes.Add("002717", "LNYL");
            codes.Add("300309", "JAKJ");
            codes.Add("002718", "YBDD");
            codes.Add("300332", "THJN");
            codes.Add("002719", "MQE");
            codes.Add("300333", "ZRKJ");
            codes.Add("002721", "JYWH");
            codes.Add("300334", "JMKJ");
            codes.Add("002722", "JLGF");
            codes.Add("300335", "DSGF");
            codes.Add("002723", "JLT");
            codes.Add("300336", "XWH");
            codes.Add("002724", "HYW");
            codes.Add("300337", "YBGF");
            codes.Add("002725", "YLGF");
            codes.Add("300338", "KYYQ");
            codes.Add("002726", "LDRS");
            codes.Add("300339", "RHRJ");
            codes.Add("002727", "YXT");
            codes.Add("300312", "BXJS");
            codes.Add("002728", "TCZY");
            codes.Add("300313", "TSSW");
            codes.Add("300314", "DWYL");
            codes.Add("300349", "JKGF");
            codes.Add("300323", "HCGD");
            codes.Add("300340", "KHGF");
            codes.Add("300350", "HPF");
            codes.Add("300324", "XJXX");
            codes.Add("300341", "MDDQ");
            codes.Add("300315", "ZQKJ");
            codes.Add("600131", "MJSD");
            codes.Add("300342", "TYJD");
            codes.Add("300316", "JSJD");
            codes.Add("600132", "ZQPJ");
            codes.Add("300343", "LCJN");
            codes.Add("300317", "JWGF");
            codes.Add("600133", "DHGX");
            codes.Add("300344", "TKBY");
            codes.Add("300318", "BHCX");
            codes.Add("600135", "LKJP");
            codes.Add("300345", "HYXC");
            codes.Add("300319", "MJKJ");
            codes.Add("600136", "DBGF");
            codes.Add("300346", "NDGD");
            codes.Add("300320", "HDGF");
            codes.Add("600137", "LSGF");
            codes.Add("300347", "TGYY");
            codes.Add("300321", "TDGF");
            codes.Add("600138", "ZQL");
            codes.Add("300348", "CLKJ");
            codes.Add("300322", "SBD");
            codes.Add("600139", "XBZY");
            codes.Add("600141", "XFJT");
            codes.Add("600143", "JFKJ");
            codes.Add("600148", "CCYD");
            codes.Add("600145", "STG");
            codes.Add("600149", "LFFZ");
            codes.Add("600146", "DYGF");
            codes.Add("600150", "ZGCB");
            codes.Add("300325", "DWXC");
            codes.Add("600151", "HTJD");
            codes.Add("300326", "KLT");
            codes.Add("600152", "WKJH");
            codes.Add("300327", "ZYDZ");
            codes.Add("600153", "JFGF");
            codes.Add("300328", "YAKJ");
            codes.Add("600155", "BSGF");
            codes.Add("300329", "HLGQ");
            codes.Add("300352", "BXY");
            codes.Add("300330", "HHJT");
            codes.Add("300353", "DTKJ");
            codes.Add("300354", "DHCS");
            codes.Add("300355", "MCKH");
            codes.Add("300366", "CYXX");
            codes.Add("600161", "TTSW");
            codes.Add("300356", "GYKJ");
            codes.Add("300367", "DFWL");
            codes.Add("600162", "XJKG");
            codes.Add("300357", "WWSW");
            codes.Add("300368", "HJGF");
            codes.Add("600163", "FJNZ");
            codes.Add("300358", "CTKJ");
            codes.Add("300369", "LMKJ");
            codes.Add("600165", "XRHL");
            codes.Add("300359", "QTJY");
            codes.Add("300370", "AKKJ");
            codes.Add("600166", "FTQC");
            codes.Add("300360", "JHKJ");
            codes.Add("300371", "HZGF");
            codes.Add("600167", "LMKG");
            codes.Add("300362", "TBZZ");
            codes.Add("600157", "YTNY");
            codes.Add("600168", "WHKG");
            codes.Add("300363", "BTGF");
            codes.Add("600158", "ZTCY");
            codes.Add("600169", "TYZG");
            codes.Add("300364", "ZWZX");
            codes.Add("600159", "DLDC");
            codes.Add("600170", "SHJ");
            codes.Add("300365", "HHKJ");
            codes.Add("600160", "JHGF");
            codes.Add("600171", "SHBL");
            codes.Add("600172", "HHXF");
            codes.Add("600173", "WLDC");
            codes.Add("300379", "DFT");
            codes.Add("600175", "MDKG");
            codes.Add("300380", "ASXX");
            codes.Add("600176", "ZGBX");
            codes.Add("300381", "YDL");
            codes.Add("600177", "YGE");
            codes.Add("300382", "SLK");
            codes.Add("300373", "YJKJ");
            codes.Add("300383", "GHXW");
            codes.Add("300375", "PLGF");
            codes.Add("300384", "SLHP");
            codes.Add("300376", "YST");
            codes.Add("300385", "XLHJ");
            codes.Add("300377", "YSS");
            codes.Add("300386", "FTCX");
            codes.Add("300378", "DJRJ");
            codes.Add("300387", "FBGF");
            codes.Add("300388", "GZHB");
            codes.Add("300389", "ABS");
            codes.Add("600186", "LHWJ");
            codes.Add("600197", "YLT");
            codes.Add("300390", "THCJ");
            codes.Add("600187", "GZSW");
            codes.Add("600198", "DTDX");
            codes.Add("300391", "KYKJ");
            codes.Add("600188", "YZMY");
            codes.Add("600199", "JZZJ");
            codes.Add("300392", "TXGF");
            codes.Add("600189", "JLSG");
            codes.Add("300394", "TFTX");
            codes.Add("600179", "HHGF");
            codes.Add("600190", "JZG");
            codes.Add("300395", "FLH");
            codes.Add("600180", "RMT");
            codes.Add("600191", "HZSY");
            codes.Add("300396", "DRYL");
            codes.Add("600182", "SJT");
            codes.Add("600192", "CCDG");
            codes.Add("300397", "THFW");
            codes.Add("600193", "CXZY");
            codes.Add("600183", "SYKJ");
            codes.Add("300398", "FKCL");
            codes.Add("600195", "ZMGF");
            codes.Add("600184", "GDGF");
            codes.Add("300399", "JTL");
            codes.Add("600196", "FXYY");
            codes.Add("600185", "GLDC");
            codes.Add("300400", "JTGF");
            codes.Add("300401", "HYSW");
            codes.Add("300402", "BSGF");
            codes.Add("600201", "JYJT");
            codes.Add("300403", "DEHY");
            codes.Add("600202", "HKD");
            codes.Add("300405", "KLJH");
            codes.Add("600203", "FRDZ");
            codes.Add("300406", "JQSW");
            codes.Add("600206", "YYXC");
            codes.Add("300407", "KFDQ");
            codes.Add("600207", "ACGK");
            codes.Add("300410", "ZYKJ");
            codes.Add("600208", "XHZB");
            codes.Add("300411", "JDGF");
            codes.Add("300416", "SSSY");
            codes.Add("300412", "JNKJ");
            codes.Add("300418", "KLWW");
            codes.Add("300413", "KLG");
            codes.Add("600209", "LDFZ");
            codes.Add("600210", "ZJQY");
            codes.Add("600211", "XCYY");
            codes.Add("600222", "TLYY");
            codes.Add("600003", "STDB");
            codes.Add("600212", "JQSY");
            codes.Add("300420", "WYKJ");
            codes.Add("600004", "BYJC");
            codes.Add("600213", "YXKC");
            codes.Add("300421", "LXGF");
            codes.Add("600005", "WGGF");
            codes.Add("600215", "CCJK");
            codes.Add("300422", "BSK");
            codes.Add("600006", "DFQC");
            codes.Add("600216", "ZJYY");
            codes.Add("300423", "LYT");
            codes.Add("600225", "TJSJ");
            codes.Add("600217", "QLSN");
            codes.Add("300425", "HNKJ");
            codes.Add("600226", "SHBK");
            codes.Add("600218", "QCDL");
            codes.Add("300426", "TDYS");
            codes.Add("600227", "CTH");
            codes.Add("600219", "NSLY");
            codes.Add("300427", "HXDL");
            codes.Add("600007", "ZGGM");
            codes.Add("600220", "JSYG");
            codes.Add("600000", "PFYH");
            codes.Add("600008", "SCGF");
            codes.Add("600221", "HNHK");
            codes.Add("600001", "HDGT");
            codes.Add("600009", "SHJC");
            codes.Add("600010", "BGGF");
            codes.Add("600235", "MFTZ");
            codes.Add("600011", "HNGJ");
            codes.Add("600236", "GGDL");
            codes.Add("600012", "WTGS");
            codes.Add("600237", "TFDZ");
            codes.Add("600228", "STC");
            codes.Add("600238", "HNYD");
            codes.Add("600229", "QDJY");
            codes.Add("600239", "YNCT");
            codes.Add("600230", "CZDH");
            codes.Add("600240", "HYDC");
            codes.Add("600231", "LGGF");
            codes.Add("600241", "SDWH");
            codes.Add("600232", "JYGF");
            codes.Add("600242", "ZCHY");
            codes.Add("600233", "DYCS");
            codes.Add("600243", "QHHD");
            codes.Add("600234", "SSWH");
            codes.Add("600016", "MSYH");
            codes.Add("600017", "RZG");
            codes.Add("600029", "NFHK");
            codes.Add("600249", "LMZ");
            codes.Add("600018", "SGJT");
            codes.Add("600030", "ZXZQ");
            codes.Add("600250", "NFGF");
            codes.Add("600019", "BGGF");
            codes.Add("600031", "SYZG");
            codes.Add("600251", "GNGF");
            codes.Add("600020", "ZYGS");
            codes.Add("600033", "FJGS");
            codes.Add("600252", "ZHJT");
            codes.Add("600021", "SHDL");
            codes.Add("600035", "CTGS");
            codes.Add("600253", "TFYY");
            codes.Add("600022", "SDGT");
            codes.Add("600036", "ZSYH");
            codes.Add("600255", "XKCL");
            codes.Add("600023", "ZNDL");
            codes.Add("600037", "GHYH");
            codes.Add("600256", "GHNY");
            codes.Add("600026", "ZHFZ");
            codes.Add("600038", "HFGF");
            codes.Add("600257", "DHGF");
            codes.Add("600027", "HDG");
            codes.Add("600247", "STCC");
            codes.Add("600258", "SLJD");
            codes.Add("600028", "ZGSH");
            codes.Add("600248", "YCHJ");
            codes.Add("600259", "GSYS");
            codes.Add("600260", "KLKJ");
            codes.Add("600052", "ZJGX");
            codes.Add("600261", "YGZM");
            codes.Add("600053", "ZJDC");
            codes.Add("600262", "BFGF");
            codes.Add("600054", "HSLY");
            codes.Add("600263", "LQJS");
            codes.Add("600055", "HRWD");
            codes.Add("600265", "STJG");
            codes.Add("600056", "ZGYY");
            codes.Add("600266", "BJCJ");
            codes.Add("600057", "XYGF");
            codes.Add("600048", "BLDC");
            codes.Add("600058", "WKFZ");
            codes.Add("600050", "ZGLT");
            codes.Add("600059", "GYLS");
            codes.Add("600051", "NBLH");
            codes.Add("600060", "HXDQ");
            codes.Add("600267", "HZYY");
            codes.Add("600061", "ZFTZ");
            codes.Add("600062", "HRSH");
            codes.Add("600273", "HFFZ");
            codes.Add("600283", "QJSL");
            codes.Add("600063", "WWG");
            codes.Add("600275", "WCY");
            codes.Add("600284", "PDJS");
            codes.Add("600064", "NJGK");
            codes.Add("600276", "HRYY");
            codes.Add("600285", "LRZY");
            codes.Add("600065", "STLY");
            codes.Add("600277", "YLNY");
            codes.Add("600287", "JSST");
            codes.Add("600066", "YTKC");
            codes.Add("600278", "DFCY");
            codes.Add("600288", "DHKJ");
            codes.Add("600067", "GCDT");
            codes.Add("600289", "YYXT");
            codes.Add("600279", "ZQGJ");
            codes.Add("600269", "GYGS");
            codes.Add("600070", "ZJFR");
            codes.Add("600069", "YGTZ");
            codes.Add("600270", "WYFZ");
            codes.Add("600071", "FHGX");
            codes.Add("600280", "ZYSC");
            codes.Add("600271", "HTXX");
            codes.Add("600072", "STG");
            codes.Add("600281", "THGF");
            codes.Add("600272", "KKSY");
            codes.Add("600073", "SHML");
            codes.Add("600282", "STN");
            codes.Add("600074", "ZDGF");
            codes.Add("600084", "ZPGF");
            codes.Add("600075", "STX");
            codes.Add("600085", "TRT");
            codes.Add("600076", "QNHG");
            codes.Add("600086", "DFJY");
            codes.Add("600077", "SDGF");
            codes.Add("600087", "TSCY");
            codes.Add("600078", "CXGF");
            codes.Add("600089", "TBDG");
            codes.Add("600079", "RFYY");
            codes.Add("600090", "PJH");
            codes.Add("600080", "JHGF");
            codes.Add("600091", "STMK");
            codes.Add("600081", "DFKJ");
            codes.Add("600093", "HJGF");
            codes.Add("600082", "HTFZ");
            codes.Add("600094", "DMC");
            codes.Add("600083", "BXGF");
            codes.Add("600095", "HGK");
            codes.Add("600096", "YTH");
            codes.Add("600103", "QSZY");
            codes.Add("600300", "WWGF");
            codes.Add("600097", "KCGJ");
            codes.Add("600104", "SQJT");
            codes.Add("600301", "STNH");
            codes.Add("600098", "GZFZ");
            codes.Add("600105", "YDGF");
            codes.Add("600302", "BZGF");
            codes.Add("600291", "XSGF");
            codes.Add("600106", "ZQLQ");
            codes.Add("600303", "SGGF");
            codes.Add("600292", "ZDYD");
            codes.Add("600107", "MEY");
            codes.Add("600305", "HSCY");
            codes.Add("600293", "SXXC");
            codes.Add("600295", "EEDS");
            codes.Add("600306", "STS");
            codes.Add("600099", "LHGF");
            codes.Add("600108", "YSJT");
            codes.Add("600307", "JGHX");
            codes.Add("600100", "TFGF");
            codes.Add("600297", "MLYY");
            codes.Add("600308", "HTGF");
            codes.Add("600101", "MXDL");
            codes.Add("600298", "AQJM");
            codes.Add("600309", "WHHX");
            codes.Add("600102", "LGGF");
            codes.Add("600299", "STX");
            codes.Add("600310", "GDDL");
            codes.Add("600311", "RHSY");
            codes.Add("600323", "HLHJ");
            codes.Add("600312", "PGDQ");
            codes.Add("600325", "HFGF");
            codes.Add("600315", "SHJH");
            codes.Add("600326", "XCTL");
            codes.Add("600316", "HDHK");
            codes.Add("600327", "DDF");
            codes.Add("600317", "YKG");
            codes.Add("600328", "LTSY");
            codes.Add("600318", "CDGF");
            codes.Add("600329", "ZXYY");
            codes.Add("600319", "YXHX");
            codes.Add("600330", "TTGF");
            codes.Add("600320", "ZHZG");
            codes.Add("600331", "HDGF");
            codes.Add("600321", "GDJS");
            codes.Add("600332", "BYS");
            codes.Add("600322", "TFFZ");
            codes.Add("600333", "CCRQ");
            codes.Add("600335", "GJQC");
            codes.Add("600119", "CJTZ");
            codes.Add("600128", "HYGF");
            codes.Add("600110", "ZKYH");
            codes.Add("600129", "TJJT");
            codes.Add("600120", "ZJDF");
            codes.Add("600111", "BGXT");
            codes.Add("600339", "TLGX");
            codes.Add("600121", "ZZMD");
            codes.Add("600112", "TCKG");
            codes.Add("600340", "HXXF");
            codes.Add("600122", "HTGK");
            codes.Add("600113", "ZJDR");
            codes.Add("600343", "HTDL");
            codes.Add("600123", "LHKC");
            codes.Add("600114", "DMGF");
            codes.Add("600345", "CJTX");
            codes.Add("600337", "MKGF");
            codes.Add("600115", "DFHK");
            codes.Add("600346", "DXS");
            codes.Add("600338", "XCZF");
            codes.Add("600116", "SXSL");
            codes.Add("600348", "YQMY");
            codes.Add("600125", "TLWL");
            codes.Add("600117", "XNTG");
            codes.Add("600350", "SDGS");
            codes.Add("600126", "HGGF");
            codes.Add("600118", "ZGWX");
            codes.Add("600351", "YBYY");
            codes.Add("600127", "JJMY");
            codes.Add("600352", "ZJLS");
            codes.Add("600363", "LCGD");
            codes.Add("600353", "XGGF");
            codes.Add("600365", "TPGF");
            codes.Add("600354", "DHZY");
            codes.Add("600366", "NBY");
            codes.Add("600355", "JLDZ");
            codes.Add("600367", "HXFZ");
            codes.Add("600356", "HFZY");
            codes.Add("600368", "WZJT");
            codes.Add("600357", "CDFT");
            codes.Add("600369", "XNZQ");
            codes.Add("600358", "GLLH");
            codes.Add("600370", "SFX");
            codes.Add("600359", "XNKF");
            codes.Add("600371", "WXDN");
            codes.Add("600360", "HWDZ");
            codes.Add("600372", "ZHDZ");
            codes.Add("600362", "JXTY");
            codes.Add("600609", "JBQC");
            codes.Add("600610", "SST");
            codes.Add("600617", "LHHX");
            codes.Add("600382", "GDMZ");
            codes.Add("600611", "DZJT");
            codes.Add("600824", "YMJT");
            codes.Add("600618", "LJHG");
            codes.Add("600612", "LFX");
            codes.Add("600619", "HLGF");
            codes.Add("600825", "XHCM");
            codes.Add("600613", "SQZY");
            codes.Add("600620", "TCGF");
            codes.Add("600826", "LSGF");
            codes.Add("600614", "DLGF");
            codes.Add("600621", "HXGF");
            codes.Add("600827", "YYGF");
            codes.Add("600373", "ZWCM");
            codes.Add("600377", "NHGS");
            codes.Add("600828", "CSJT");
            codes.Add("600375", "HLXM");
            codes.Add("600378", "TKGF");
            codes.Add("600829", "SJZY");
            codes.Add("600376", "SKGF");
            codes.Add("600379", "BGGF");
            codes.Add("600830", "XYRT");
            codes.Add("600615", "FHGF");
            codes.Add("600380", "JKY");
            codes.Add("600831", "GDWL");
            codes.Add("600616", "JFJY");
            codes.Add("600381", "STX");
            codes.Add("600832", "DFMZ");
            codes.Add("600833", "DYYY");
            codes.Add("600834", "STDT");
            codes.Add("600624", "FDFH");
            codes.Add("600835", "SHJD");
            codes.Add("600626", "SDGF");
            codes.Add("600836", "JLSY");
            codes.Add("600627", "SDGF");
            codes.Add("600837", "HTZ");
            codes.Add("600385", "STJ");
            codes.Add("600838", "SHJB");
            codes.Add("600386", "BBCM");
            codes.Add("600839", "SCCH");
            codes.Add("600387", "HYGF");
            codes.Add("600840", "XHCY");
            codes.Add("600388", "LJHB");
            codes.Add("600622", "JBJT");
            codes.Add("600389", "JSGF");
            codes.Add("600623", "SQGF");
            codes.Add("600390", "JRKJ");
            codes.Add("600391", "CFKJ");
            codes.Add("600841", "SCGF");
            codes.Add("600400", "HDGF");
            codes.Add("600844", "DHKJ");
            codes.Add("600842", "ZXYY");
            codes.Add("600401", "HRGF");
            codes.Add("600636", "SAF");
            codes.Add("600628", "XSJ");
            codes.Add("600403", "DYNY");
            codes.Add("600637", "BST");
            codes.Add("600392", "SHZY");
            codes.Add("600638", "XHP");
            codes.Add("600405", "DLY");
            codes.Add("600393", "DHSY");
            codes.Add("600639", "PDJQ");
            codes.Add("600406", "GDNR");
            codes.Add("600395", "PJGF");
            codes.Add("600630", "LTGF");
            codes.Add("600640", "HBKG");
            codes.Add("600396", "JSGF");
            codes.Add("600631", "BLGF");
            codes.Add("600641", "WYQY");
            codes.Add("600397", "AYMY");
            codes.Add("600633", "ZBCM");
            codes.Add("600642", "SNGF");
            codes.Add("600398", "HLZJ");
            codes.Add("600634", "ZJKG");
            codes.Add("600845", "BXRJ");
            codes.Add("600399", "FSTG");
            codes.Add("600635", "DZG");
            codes.Add("600846", "TJKJ");
            codes.Add("600847", "WLGF");
            codes.Add("600643", "AJGF");
            codes.Add("600848", "ZYGF");
            codes.Add("600644", "LSDL");
            codes.Add("600849", "SHYY");
            codes.Add("600645", "ZYXH");
            codes.Add("600850", "HDDN");
            codes.Add("600647", "TDCY");
            codes.Add("600851", "HXGF");
            codes.Add("600648", "WGQ");
            codes.Add("600853", "LJGF");
            codes.Add("600649", "CTKG");
            codes.Add("600854", "CLGF");
            codes.Add("600650", "JJTZ");
            codes.Add("600855", "HTCF");
            codes.Add("600858", "YZGF");
            codes.Add("600856", "CBJT");
            codes.Add("600859", "WFJ");
            codes.Add("600857", "GDSC");
            codes.Add("600409", "SYHG");
            codes.Add("600410", "HSTC");
            codes.Add("600653", "SHKG");
            codes.Add("600861", "BJCX");
            codes.Add("600415", "XSPC");
            codes.Add("600862", "NTKJ");
            codes.Add("600654", "FLGF");
            codes.Add("600416", "XDGF");
            codes.Add("600863", "NMHD");
            codes.Add("600655", "YYSC");
            codes.Add("600418", "JHQC");
            codes.Add("600425", "QSJH");
            codes.Add("600656", "BYTZ");
            codes.Add("600419", "TRRY");
            codes.Add("600426", "HLHS");
            codes.Add("600657", "XDDC");
            codes.Add("600420", "XDZY");
            codes.Add("600428", "ZYHY");
            codes.Add("600421", "YFKG");
            codes.Add("600429", "SYGF");
            codes.Add("600658", "DZC");
            codes.Add("600422", "KMZY");
            codes.Add("600432", "JENY");
            codes.Add("600660", "FYBL");
            codes.Add("600423", "LHGF");
            codes.Add("600663", "LJZ");
            codes.Add("600661", "XNY");
            codes.Add("600652", "ASGF");
            codes.Add("600664", "HYGF");
            codes.Add("600662", "QSKG");
            codes.Add("600860", "STJ");
            codes.Add("600665", "TDY");
            codes.Add("600871", "STY");
            codes.Add("600865", "BDJT");
            codes.Add("600872", "ZJGX");
            codes.Add("600866", "XHKJ");
            codes.Add("600873", "MHSW");
            codes.Add("600867", "THDB");
            codes.Add("600433", "GHGX");
            codes.Add("600868", "MYJX");
            codes.Add("600435", "BFDH");
            codes.Add("600869", "YDD");
            codes.Add("600436", "PZH");
            codes.Add("600666", "XNYY");
            codes.Add("600438", "TWG");
            codes.Add("600667", "TJSY");
            codes.Add("600671", "TMYY");
            codes.Add("600668", "JFJT");
            codes.Add("600673", "DYGK");
            codes.Add("600870", "XHDZ");
            codes.Add("600674", "CTNY");
            codes.Add("600874", "CYHB");
            codes.Add("600884", "SSGF");
            codes.Add("600461", "HCSY");
            codes.Add("600875", "DFDQ");
            codes.Add("600462", "SXZY");
            codes.Add("600446", "JZGF");
            codes.Add("600876", "LYBL");
            codes.Add("600463", "KGGF");
            codes.Add("600448", "HFGF");
            codes.Add("600877", "ZGJL");
            codes.Add("600466", "DKYY");
            codes.Add("600449", "NXJC");
            codes.Add("600879", "HTDZ");
            codes.Add("600467", "HDJ");
            codes.Add("600452", "FLDL");
            codes.Add("600880", "BRCB");
            codes.Add("600468", "BLDQ");
            codes.Add("600455", "BTGF");
            codes.Add("600881", "YTJT");
            codes.Add("600469", "FSGF");
            codes.Add("600456", "BTGF");
            codes.Add("600882", "HLKY");
            codes.Add("600470", "LGHG");
            codes.Add("600458", "SDXC");
            codes.Add("600444", "GTGY");
            codes.Add("600676", "JYG");
            codes.Add("600459", "GYBY");
            codes.Add("600883", "BWKJ");
            codes.Add("600677", "HTTX");
            codes.Add("600460", "SLW");
            codes.Add("600678", "SCJD");
            codes.Add("600891", "QLJT");
            codes.Add("600679", "JSKF");
            codes.Add("600472", "BTLY");
            codes.Add("600680", "SHPT");
            codes.Add("600892", "BCGF");
            codes.Add("600681", "WHJT");
            codes.Add("600893", "HKDL");
            codes.Add("600682", "NJXB");
            codes.Add("600894", "GRGF");
            codes.Add("600886", "GTDL");
            codes.Add("600895", "ZJGK");
            codes.Add("600887", "YLGF");
            codes.Add("600896", "ZHHS");
            codes.Add("600888", "XJZH");
            codes.Add("600897", "XMKG");
            codes.Add("600889", "NJHX");
            codes.Add("600683", "JTYT");
            codes.Add("600890", "ZFGF");
            codes.Add("600684", "ZJSY");
            codes.Add("600685", "GCGJ");
            codes.Add("600960", "BHHS");
            codes.Add("600479", "QJYY");
            codes.Add("600686", "JLQC");
            codes.Add("600961", "ZYJT");
            codes.Add("600480", "LYGF");
            codes.Add("600687", "GTKG");
            codes.Add("600692", "YTGF");
            codes.Add("600481", "SLJN");
            codes.Add("600688", "SHSH");
            codes.Add("600476", "XYKJ");
            codes.Add("600482", "FFGF");
            codes.Add("600689", "STS");
            codes.Add("600693", "DBJT");
            codes.Add("600483", "FJNF");
            codes.Add("600690", "QDHE");
            codes.Add("600694", "DSG");
            codes.Add("600485", "ZCXC");
            codes.Add("600691", "YMHG");
            codes.Add("600962", "GTZL");
            codes.Add("600486", "YNHG");
            codes.Add("600898", "SLSS");
            codes.Add("600963", "YYLZ");
            codes.Add("600487", "HTGD");
            codes.Add("600900", "CJDL");
            codes.Add("600477", "HXG");
            codes.Add("600488", "TYGF");
            codes.Add("600917", "ZQRQ");
            codes.Add("600478", "KLY");
            codes.Add("600489", "ZJHJ");
            codes.Add("600490", "PXZY");
            codes.Add("600969", "CDGJ");
            codes.Add("600491", "LYJS");
            codes.Add("600970", "ZCGJ");
            codes.Add("600493", "FZFZ");
            codes.Add("600971", "HYMD");
            codes.Add("600495", "JXCZ");
            codes.Add("600973", "BSGF");
            codes.Add("600496", "JGGG");
            codes.Add("600698", "HNTY");
            codes.Add("600497", "CHXZ");
            codes.Add("600699", "JSDZ");
            codes.Add("600696", "DLGF");
            codes.Add("600701", "GDGX");
            codes.Add("600697", "OYJT");
            codes.Add("600975", "XWF");
            codes.Add("600966", "BHZY");
            codes.Add("600976", "WHJM");
            codes.Add("600967", "BFCY");
            codes.Add("600978", "YHMY");
            codes.Add("600499", "KDJN");
            codes.Add("600987", "HMGF");
            codes.Add("600509", "TFRD");
            codes.Add("600500", "ZHGJ");
            codes.Add("600510", "HMD");
            codes.Add("600988", "CFHJ");
            codes.Add("600979", "GAAZ");
            codes.Add("600511", "GYGF");
            codes.Add("600501", "HTCG");
            codes.Add("600980", "BKCC");
            codes.Add("600512", "TDJS");
            codes.Add("600502", "AHS");
            codes.Add("600981", "HHGF");
            codes.Add("600513", "LHYY");
            codes.Add("600503", "HLJZ");
            codes.Add("600982", "NBRD");
            codes.Add("600515", "HDJS");
            codes.Add("600505", "XCDL");
            codes.Add("600983", "HFSY");
            codes.Add("600516", "FDTS");
            codes.Add("600506", "XLGF");
            codes.Add("600984", "JSJX");
            codes.Add("600703", "SAGD");
            codes.Add("600507", "FDTG");
            codes.Add("600985", "LMKH");
            codes.Add("600704", "WCZD");
            codes.Add("600702", "TPSD");
            codes.Add("600986", "KDGF");
            codes.Add("600705", "ZHTZ");
            codes.Add("600508", "SHNY");
            codes.Add("600706", "QJWL");
            codes.Add("600993", "MYL");
            codes.Add("600707", "CHGF");
            codes.Add("600995", "WSDL");
            codes.Add("600708", "HBGF");
            codes.Add("600997", "KLGF");
            codes.Add("600710", "CLGF");
            codes.Add("600715", "SLQC");
            codes.Add("600711", "STKY");
            codes.Add("600716", "FHGF");
            codes.Add("600712", "NNBH");
            codes.Add("600998", "JZT");
            codes.Add("600713", "NJYY");
            codes.Add("600999", "ZSZQ");
            codes.Add("600714", "JRKY");
            codes.Add("601000", "TSG");
            codes.Add("600991", "GQCF");
            codes.Add("601001", "DTMY");
            codes.Add("600992", "GSGF");
            codes.Add("600517", "ZXDQ");
            codes.Add("600518", "KMYY");
            codes.Add("601011", "BTL");
            codes.Add("600726", "HDNY");
            codes.Add("601002", "JYSY");
            codes.Add("601012", "LJGF");
            codes.Add("600727", "LBHG");
            codes.Add("601003", "LGGF");
            codes.Add("600521", "HHYY");
            codes.Add("600718", "DRJT");
            codes.Add("601005", "ZQGT");
            codes.Add("600522", "ZTKJ");
            codes.Add("600719", "DLRD");
            codes.Add("601006", "DQTL");
            codes.Add("600523", "GHGF");
            codes.Add("600720", "QLS");
            codes.Add("601007", "JLFD");
            codes.Add("600525", "CYJT");
            codes.Add("600721", "BHC");
            codes.Add("601008", "LYG");
            codes.Add("600526", "FDHB");
            codes.Add("600722", "JNHG");
            codes.Add("600519", "GZMT");
            codes.Add("600527", "JNGX");
            codes.Add("600723", "SSGF");
            codes.Add("601009", "NJYH");
            codes.Add("600528", "ZTEJ");
            codes.Add("600724", "NBFD");
            codes.Add("601010", "WFGF");
            codes.Add("601016", "JNFD");
            codes.Add("600725", "YWGF");
            codes.Add("601018", "NBG");
            codes.Add("601038", "YTGF");
            codes.Add("601021", "CQHK");
            codes.Add("601058", "SLGF");
            codes.Add("600728", "JDKJ");
            codes.Add("601069", "XBHJ");
            codes.Add("600729", "ZQB");
            codes.Add("601088", "ZGSH");
            codes.Add("600730", "ZGGK");
            codes.Add("601098", "ZNCM");
            codes.Add("600731", "HNHL");
            codes.Add("600529", "SDYB");
            codes.Add("600732", "SHXM");
            codes.Add("600530", "JDAL");
            codes.Add("600733", "SQF");
            codes.Add("600531", "YGJQ");
            codes.Add("600734", "SDJT");
            codes.Add("600532", "HDKY");
            codes.Add("601028", "YLGF");
            codes.Add("600533", "QXJS");
            codes.Add("600535", "TSL");
            codes.Add("601100", "HLYG");
            codes.Add("600547", "SDHJ");
            codes.Add("600536", "ZGRJ");
            codes.Add("600548", "SGS");
            codes.Add("601101", "HHNY");
            codes.Add("600537", "YJGD");
            codes.Add("600549", "XMWY");
            codes.Add("601106", "ZGYZ");
            codes.Add("600538", "GFGF");
            codes.Add("600550", "STT");
            codes.Add("601107", "SCCY");
            codes.Add("600539", "STST");
            codes.Add("600551", "SDCB");
            codes.Add("601111", "ZGGH");
            codes.Add("600540", "XSGF");
            codes.Add("600552", "FXKJ");
            codes.Add("601113", "HDGF");
            codes.Add("600543", "MGGF");
            codes.Add("600553", "TXSN");
            codes.Add("601116", "SJGW");
            codes.Add("600735", "XHJ");
            codes.Add("600555", "JLS");
            codes.Add("601117", "ZGHX");
            codes.Add("600736", "SZG");
            codes.Add("600556", "BSYY");
            codes.Add("601118", "HNXJ");
            codes.Add("601099", "TPY");
            codes.Add("600557", "KYYY");
            codes.Add("600546", "SMGJ");
            codes.Add("600558", "DXY");
            codes.Add("600559", "LBGJ");
            codes.Add("601158", "ZQSW");
            codes.Add("600560", "JZTZ");
            codes.Add("601166", "XYYH");
            codes.Add("600561", "JXCY");
            codes.Add("601168", "XBKY");
            codes.Add("600562", "GRKJ");
            codes.Add("601169", "BJYH");
            codes.Add("600563", "FLDZ");
            codes.Add("601177", "HCQJ");
            codes.Add("600565", "DMGF");
            codes.Add("601179", "ZGXD");
            codes.Add("601137", "BWH");
            codes.Add("601186", "ZGTJ");
            codes.Add("601139", "SZRQ");
            codes.Add("601188", "LJJT");
            codes.Add("600566", "HCGF");
            codes.Add("601198", "DXZQ");
            codes.Add("601199", "JNS");
            codes.Add("600738", "LZMB");
            codes.Add("600744", "HYDL");
            codes.Add("600751", "TJHY");
            codes.Add("600745", "ZYGF");
            codes.Add("600739", "LNCD");
            codes.Add("600753", "DFYH");
            codes.Add("600746", "JSSP");
            codes.Add("600740", "SXJH");
            codes.Add("600754", "JJGF");
            codes.Add("600747", "DLKG");
            codes.Add("600741", "HYQC");
            codes.Add("600755", "XMGM");
            codes.Add("600748", "SSFZ");
            codes.Add("600742", "YQF");
            codes.Add("600756", "LCRJ");
            codes.Add("600749", "XCLY");
            codes.Add("600743", "HYDC");
            codes.Add("600757", "CJCM");
            codes.Add("601225", "SXMY");
            codes.Add("601208", "DCKJ");
            codes.Add("600568", "ZZKG");
            codes.Add("601226", "HDZG");
            codes.Add("601216", "NMJZ");
            codes.Add("600569", "AYGT");
            codes.Add("601231", "HXDZ");
            codes.Add("600570", "HSDZ");
            codes.Add("601218", "JXKJ");
            codes.Add("600750", "JZYY");
            codes.Add("600571", "XYD");
            codes.Add("601222", "LYDZ");
            codes.Add("600572", "KEB");
            codes.Add("600583", "HYG");
            codes.Add("600573", "HQPJ");
            codes.Add("600584", "CDKJ");
            codes.Add("600575", "WHG");
            codes.Add("601238", "GQJT");
            codes.Add("600576", "WHWJ");
            codes.Add("601258", "PDJT");
            codes.Add("600577", "JDGF");
            codes.Add("601268", "STE");
            codes.Add("600578", "JNDL");
            codes.Add("601288", "NYYH");
            codes.Add("600579", "THY");
            codes.Add("601299", "ZGBC");
            codes.Add("600580", "WLDQ");
            codes.Add("601311", "LTGF");
            codes.Add("600581", "BYGT");
            codes.Add("600585", "HLSN");
            codes.Add("600582", "TDKJ");
            codes.Add("600586", "JJKJ");
            codes.Add("600587", "XHYL");
            codes.Add("601390", "ZGZT");
            codes.Add("600767", "YSSY");
            codes.Add("601313", "JNJJ");
            codes.Add("600768", "NBFB");
            codes.Add("601398", "GSYH");
            codes.Add("601318", "ZGPA");
            codes.Add("600769", "XLDY");
            codes.Add("601515", "DFGF");
            codes.Add("601328", "JTYH");
            codes.Add("600770", "ZYGF");
            codes.Add("600759", "ZHGF");
            codes.Add("601333", "GSTL");
            codes.Add("600771", "GYY");
            codes.Add("600760", "ZHHB");
            codes.Add("601336", "XHBX");
            codes.Add("600589", "GDRT");
            codes.Add("600761", "AHHL");
            codes.Add("601339", "BLDF");
            codes.Add("601518", "JLGS");
            codes.Add("600763", "TCYL");
            codes.Add("601369", "SGDL");
            codes.Add("600590", "THKJ");
            codes.Add("600764", "ZDGT");
            codes.Add("601377", "XYZ");
            codes.Add("600591", "STS");
            codes.Add("600765", "ZHZJ");
            codes.Add("601388", "YQZY");
            codes.Add("600592", "LXGF");
            codes.Add("600766", "YCHJ");
            codes.Add("600593", "DLSY");
            codes.Add("600773", "XCCT");
            codes.Add("600594", "YBZY");
            codes.Add("600774", "HSJT");
            codes.Add("600595", "ZFSY");
            codes.Add("600775", "NJXM");
            codes.Add("600596", "XAGF");
            codes.Add("600776", "DFTX");
            codes.Add("600597", "GMRY");
            codes.Add("600777", "XCSY");
            codes.Add("600598", "STD");
            codes.Add("600778", "YHJT");
            codes.Add("600599", "XMYH");
            codes.Add("601555", "DWZQ");
            codes.Add("600600", "QDPJ");
            codes.Add("600603", "DZXY");
            codes.Add("600601", "FZKJ");
            codes.Add("600604", "SBGX");
            codes.Add("600602", "YDDZ");
            codes.Add("601558", "STR");
            codes.Add("600779", "SJF");
            codes.Add("601601", "ZGTB");
            codes.Add("600785", "XHBH");
            codes.Add("600605", "HTNY");
            codes.Add("601628", "ZGRS");
            codes.Add("601607", "SHYY");
            codes.Add("600606", "JFTZ");
            codes.Add("601608", "ZXZG");
            codes.Add("601633", "CCQC");
            codes.Add("600607", "SSYY");
            codes.Add("601636", "QBJT");
            codes.Add("600781", "FRYY");
            codes.Add("601566", "JMW");
            codes.Add("601666", "PMGF");
            codes.Add("600782", "XGGF");
            codes.Add("601567", "SXDQ");
            codes.Add("601678", "BHGF");
            codes.Add("601668", "ZGJ");
            codes.Add("601579", "HJS");
            codes.Add("601616", "GDDQ");
            codes.Add("601669", "ZGDJ");
            codes.Add("601588", "BCS");
            codes.Add("601618", "ZGZY");
            codes.Add("600786", "DGTS");
            codes.Add("601599", "LGKJ");
            codes.Add("600783", "LXCT");
            codes.Add("600787", "ZCGF");
            codes.Add("601600", "ZGLY");
            codes.Add("600784", "LYTZ");
            codes.Add("600789", "LKYY");
            codes.Add("600790", "QFC");
            codes.Add("600791", "JNZY");
            codes.Add("601700", "FFGF");
            codes.Add("600792", "YMNY");
            codes.Add("601717", "ZMJ");
            codes.Add("600793", "STYZ");
            codes.Add("601718", "JHJT");
            codes.Add("600794", "BSKJ");
            codes.Add("601727", "SHDQ");
            codes.Add("600795", "GDDL");
            codes.Add("601766", "ZGNC");
            codes.Add("600796", "QJSH");
            codes.Add("601777", "LFGF");
            codes.Add("600797", "ZDWX");
            codes.Add("601788", "GDZ");
            codes.Add("601688", "HTZQ");
            codes.Add("601789", "NBJG");
            codes.Add("601699", "LAHN");
            codes.Add("600798", "NBHY");
            codes.Add("600800", "TJCK");
            codes.Add("600801", "HXS");
            codes.Add("600804", "PBS");
            codes.Add("600815", "XGGF");
            codes.Add("601798", "LKGX");
            codes.Add("601877", "ZTDQ");
            codes.Add("600805", "YDTZ");
            codes.Add("601799", "XYGF");
            codes.Add("601880", "DLG");
            codes.Add("600806", "KMJC");
            codes.Add("601800", "ZGJJ");
            codes.Add("601886", "JHCJ");
            codes.Add("600807", "TYGF");
            codes.Add("601801", "WXCM");
            codes.Add("601888", "ZGGL");
            codes.Add("600808", "MGGF");
            codes.Add("601808", "ZHYF");
            codes.Add("601890", "YXML");
            codes.Add("600809", "SXFJ");
            codes.Add("601818", "GDYH");
            codes.Add("601898", "ZMNY");
            codes.Add("600810", "SMGF");
            codes.Add("601857", "ZGSY");
            codes.Add("601899", "ZJKY");
            codes.Add("600811", "DFJT");
            codes.Add("601866", "ZHJY");
            codes.Add("601901", "FZZQ");
            codes.Add("600812", "HBZY");
            codes.Add("600803", "WYSH");
            codes.Add("601908", "JYT");
            codes.Add("600814", "HZJB");
            codes.Add("601918", "GTXJ");
            codes.Add("600816", "AXXT");
            codes.Add("601919", "ZGYY");
            codes.Add("600817", "STHS");
            codes.Add("601928", "FHCM");
            codes.Add("600818", "ZLGF");
            codes.Add("601929", "JSCM");
            codes.Add("600819", "YPBL");
            codes.Add("601933", "YHCS");
            codes.Add("600820", "SDGF");
            codes.Add("601939", "JSYH");
            codes.Add("600821", "JQY");
            codes.Add("601958", "JMGF");
            codes.Add("600822", "SHWM");
            codes.Add("601965", "ZGQY");
            codes.Add("601991", "DTFD");
            codes.Add("601969", "HNKY");
            codes.Add("601992", "JYGF");
            codes.Add("601988", "ZGYH");
            codes.Add("601996", "FLJT");
            codes.Add("601998", "ZXYH");
            codes.Add("603010", "WSGF");
            codes.Add("603118", "GJGF");
            codes.Add("601999", "CBCM");
            codes.Add("603011", "HDGF");
            codes.Add("603123", "CWGF");
            codes.Add("603000", "RMW");
            codes.Add("603015", "HXKJ");
            codes.Add("603126", "ZCJN");
            codes.Add("603001", "AKGJ");
            codes.Add("603017", "YQSJ");
            codes.Add("603128", "HMWL");
            codes.Add("603002", "HCDZ");
            codes.Add("603018", "SJGF");
            codes.Add("603166", "FDGF");
            codes.Add("603003", "LYRY");
            codes.Add("603019", "ZKSG");
            codes.Add("603167", "BHLD");
            codes.Add("603005", "JFKJ");
            codes.Add("603088", "NBJD");
            codes.Add("603168", "SPAS");
            codes.Add("603006", "LMGF");
            codes.Add("603099", "ZBS");
            codes.Add("603169", "LSZZ");
            codes.Add("603008", "XLM");
            codes.Add("603100", "CYGF");
            codes.Add("603188", "YBGF");
            codes.Add("603009", "BTKJ");
            codes.Add("603111", "KNJD");
            codes.Add("603222", "JMZY");
            codes.Add("603288", "HTWY");
            codes.Add("603518", "WGNS");
            codes.Add("603306", "HMKJ");
            codes.Add("603555", "GRN");
            codes.Add("603308", "YLGF");
            codes.Add("603558", "JSJT");
            codes.Add("603309", "WLYL");
            codes.Add("603588", "GNHJ");
            codes.Add("603328", "YDDZ");
            codes.Add("603600", "YYGF");
            codes.Add("603366", "RCDF");
            codes.Add("603601", "ZSKJ");
            codes.Add("603368", "LZYY");
            codes.Add("603606", "DFDL");
            codes.Add("603369", "JSY");
            codes.Add("603609", "HFMY");
            codes.Add("603399", "XHL");
            codes.Add("603611", "NLGF");
            codes.Add("603456", "JZYY");
            codes.Add("603618", "HDGF");
            codes.Add("603636", "NWRJ");
            codes.Add("603889", "XAGF");
            codes.Add("900902", "SBBG");
            codes.Add("603678", "HJDZ");
            codes.Add("603898", "HLK");
            codes.Add("900903", "DZBG");
            codes.Add("603686", "LMHW");
            codes.Add("603899", "CGWJ");
            codes.Add("900904", "SQBG");
            codes.Add("603688", "SYGF");
            codes.Add("603939", "YFYF");
            codes.Add("900906", "STZ");
            codes.Add("603699", "NWGF");
            codes.Add("603969", "YLGF");
            codes.Add("900907", "DLBG");
            codes.Add("603766", "LXTY");
            codes.Add("603988", "ZDDJ");
            codes.Add("900908", "LJBG");
            codes.Add("603788", "NBGF");
            codes.Add("603993", "LYMY");
            codes.Add("900909", "SQBG");
            codes.Add("603799", "HYGY");
            codes.Add("603997", "JFGF");
            codes.Add("900910", "HLBG");
            codes.Add("603806", "FST");
            codes.Add("603998", "FSZY");
            codes.Add("900911", "JQBG");
            codes.Add("603828", "KLD");
            codes.Add("900901", "YDBG");
            codes.Add("900912", "WGBG");
            codes.Add("900913", "LHBG");
            codes.Add("900923", "YYBG");
            codes.Add("900914", "JTBG");
            codes.Add("900924", "SGBG");
            codes.Add("900915", "ZLBG");
            codes.Add("900926", "BXB");
            codes.Add("900916", "JSBG");
            codes.Add("900927", "WMBG");
            codes.Add("900917", "HXBG");
            codes.Add("900928", "ZYBG");
            codes.Add("900918", "YPBG");
            codes.Add("900929", "JLBG");
            codes.Add("900919", "DJBG");
            codes.Add("900930", "HPTB");
            codes.Add("900920", "SCBG");
            codes.Add("900932", "LJBG");
            codes.Add("900921", "DKBG");
            codes.Add("900933", "HXB");
            codes.Add("900922", "STS");
            codes.Add("900934", "JJBG");
            codes.Add("900935", "YCBG");
            codes.Add("900946", "TYBG");
            codes.Add("900936", "EZBG");
            codes.Add("900948", "YTBG");
            codes.Add("900937", "HDBG");
            codes.Add("900949", "DDBG");
            codes.Add("900938", "THB");
            codes.Add("900950", "XCBG");
            codes.Add("900939", "HLB");
            codes.Add("900951", "STD");
            codes.Add("900940", "DMCB");
            codes.Add("900952", "JGBG");
            codes.Add("900941", "DXBG");
            codes.Add("900953", "KMB");
            codes.Add("900942", "HSBG");
            codes.Add("900955", "JLSB");
            codes.Add("900943", "KKBG");
            codes.Add("900956", "DBBG");
            codes.Add("900945", "HHBG");
            codes.Add("900957", "LYBG");
            return codes;
        }
        #endregion
    }

    public enum SubType
    { 
        None = 0,

        /// <summary>
        /// 沪深300
        /// </summary>
        HS300 = 1,

        /// <summary>
        /// 中正500
        /// </summary>
        ZZ500 = 2,

        /// <summary>
        /// 自选股
        /// </summary>
        Portfolio = 3,

        /// <summary>
        /// 所有(包含初始订阅列表，中正500，沪深300及自选股)
        /// </summary>
        All = 4,
    }
}
