//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AASClient.AASServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AASServiceReference.AASService", CallbackContract=typeof(AASClient.AASServiceReference.AASServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface AASService {
        
        // CODEGEN: 参数“Query可用资金Result”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query可用资金", ReplyAction="http://tempuri.org/AASService/Query可用资金Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Query可用资金Response Query可用资金(AASClient.AASServiceReference.Query可用资金Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query可用资金", ReplyAction="http://tempuri.org/AASService/Query可用资金Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query可用资金Response> Query可用资金Async(AASClient.AASServiceReference.Query可用资金Request request);
        
        // CODEGEN: 参数“QueryAll可用资金Result”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAll可用资金", ReplyAction="http://tempuri.org/AASService/QueryAll可用资金Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryAll可用资金Response QueryAll可用资金(AASClient.AASServiceReference.QueryAll可用资金Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAll可用资金", ReplyAction="http://tempuri.org/AASService/QueryAll可用资金Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAll可用资金Response> QueryAll可用资金Async(AASClient.AASServiceReference.QueryAll可用资金Request request);
        
        // CODEGEN: 参数“AddAccountRelationResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddAccountRelation", ReplyAction="http://tempuri.org/AASService/AddAccountRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddAccountRelationResponse AddAccountRelation(AASClient.AASServiceReference.AddAccountRelationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddAccountRelation", ReplyAction="http://tempuri.org/AASService/AddAccountRelationResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddAccountRelationResponse> AddAccountRelationAsync(AASClient.AASServiceReference.AddAccountRelationRequest request);
        
        // CODEGEN: 参数“DeleteAccountRelationResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteAccountRelation", ReplyAction="http://tempuri.org/AASService/DeleteAccountRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteAccountRelationResponse DeleteAccountRelation(AASClient.AASServiceReference.DeleteAccountRelationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteAccountRelation", ReplyAction="http://tempuri.org/AASService/DeleteAccountRelationResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteAccountRelationResponse> DeleteAccountRelationAsync(AASClient.AASServiceReference.DeleteAccountRelationRequest request);
        
        // CODEGEN: 参数“UpdateAccountRelationResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateAccountRelation", ReplyAction="http://tempuri.org/AASService/UpdateAccountRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateAccountRelationResponse UpdateAccountRelation(AASClient.AASServiceReference.UpdateAccountRelationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateAccountRelation", ReplyAction="http://tempuri.org/AASService/UpdateAccountRelationResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateAccountRelationResponse> UpdateAccountRelationAsync(AASClient.AASServiceReference.UpdateAccountRelationRequest request);
        
        // CODEGEN: 参数“QueryAccountRelationResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAccountRelation", ReplyAction="http://tempuri.org/AASService/QueryAccountRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryAccountRelationResponse QueryAccountRelation(AASClient.AASServiceReference.QueryAccountRelationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAccountRelation", ReplyAction="http://tempuri.org/AASService/QueryAccountRelationResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountRelationResponse> QueryAccountRelationAsync(AASClient.AASServiceReference.QueryAccountRelationRequest request);
        
        // CODEGEN: 参数“QuerySingleUserResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QuerySingleUser", ReplyAction="http://tempuri.org/AASService/QuerySingleUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QuerySingleUserResponse QuerySingleUser(AASClient.AASServiceReference.QuerySingleUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QuerySingleUser", ReplyAction="http://tempuri.org/AASService/QuerySingleUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QuerySingleUserResponse> QuerySingleUserAsync(AASClient.AASServiceReference.QuerySingleUserRequest request);
        
        // CODEGEN: 参数“DecryptResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Decrypt", ReplyAction="http://tempuri.org/AASService/DecryptResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DecryptResponse Decrypt(AASClient.AASServiceReference.DecryptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Decrypt", ReplyAction="http://tempuri.org/AASService/DecryptResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DecryptResponse> DecryptAsync(AASClient.AASServiceReference.DecryptRequest request);
        
        // CODEGEN: 参数“Get交易服务器Result”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Get交易服务器", ReplyAction="http://tempuri.org/AASService/Get交易服务器Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Get交易服务器Response Get交易服务器(AASClient.AASServiceReference.Get交易服务器Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Get交易服务器", ReplyAction="http://tempuri.org/AASService/Get交易服务器Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Get交易服务器Response> Get交易服务器Async(AASClient.AASServiceReference.Get交易服务器Request request);
        
        // CODEGEN: 参数“Get行情服务器Result”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Get行情服务器", ReplyAction="http://tempuri.org/AASService/Get行情服务器Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Get行情服务器Response Get行情服务器(AASClient.AASServiceReference.Get行情服务器Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Get行情服务器", ReplyAction="http://tempuri.org/AASService/Get行情服务器Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Get行情服务器Response> Get行情服务器Async(AASClient.AASServiceReference.Get行情服务器Request request);
        
        // CODEGEN: 参数“GetDataServerIPResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/GetDataServerIP", ReplyAction="http://tempuri.org/AASService/GetDataServerIPResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.GetDataServerIPResponse GetDataServerIP(AASClient.AASServiceReference.GetDataServerIPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/GetDataServerIP", ReplyAction="http://tempuri.org/AASService/GetDataServerIPResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.GetDataServerIPResponse> GetDataServerIPAsync(AASClient.AASServiceReference.GetDataServerIPRequest request);
        
        // CODEGEN: 参数“QueryClientIPResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryClientIP", ReplyAction="http://tempuri.org/AASService/QueryClientIPResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryClientIPResponse QueryClientIP(AASClient.AASServiceReference.QueryClientIPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryClientIP", ReplyAction="http://tempuri.org/AASService/QueryClientIPResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryClientIPResponse> QueryClientIPAsync(AASClient.AASServiceReference.QueryClientIPRequest request);
        
        // CODEGEN: 参数“QueryUserResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryUser", ReplyAction="http://tempuri.org/AASService/QueryUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryUserResponse QueryUser(AASClient.AASServiceReference.QueryUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryUser", ReplyAction="http://tempuri.org/AASService/QueryUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryUserResponse> QueryUserAsync(AASClient.AASServiceReference.QueryUserRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ResetPassword", ReplyAction="http://tempuri.org/AASService/ResetPasswordResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.ResetPasswordResponse ResetPassword(AASClient.AASServiceReference.ResetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ResetPassword", ReplyAction="http://tempuri.org/AASService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ResetPasswordResponse> ResetPasswordAsync(AASClient.AASServiceReference.ResetPasswordRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddUser", ReplyAction="http://tempuri.org/AASService/AddUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddUserResponse AddUser(AASClient.AASServiceReference.AddUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddUser", ReplyAction="http://tempuri.org/AASService/AddUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddUserResponse> AddUserAsync(AASClient.AASServiceReference.AddUserRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateUser", ReplyAction="http://tempuri.org/AASService/UpdateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateUserResponse UpdateUser(AASClient.AASServiceReference.UpdateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateUser", ReplyAction="http://tempuri.org/AASService/UpdateUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateUserResponse> UpdateUserAsync(AASClient.AASServiceReference.UpdateUserRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteUser", ReplyAction="http://tempuri.org/AASService/DeleteUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteUserResponse DeleteUser(AASClient.AASServiceReference.DeleteUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteUser", ReplyAction="http://tempuri.org/AASService/DeleteUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteUserResponse> DeleteUserAsync(AASClient.AASServiceReference.DeleteUserRequest request);
        
        // CODEGEN: 参数“QueryFKResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryFK", ReplyAction="http://tempuri.org/AASService/QueryFKResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryFKResponse QueryFK(AASClient.AASServiceReference.QueryFKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryFK", ReplyAction="http://tempuri.org/AASService/QueryFKResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryFKResponse> QueryFKAsync(AASClient.AASServiceReference.QueryFKRequest request);
        
        // CODEGEN: 参数“QueryJyBelongFKResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyBelongFKResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryJyBelongFKResponse QueryJyBelongFK(AASClient.AASServiceReference.QueryJyBelongFKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyBelongFKResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyBelongFKResponse> QueryJyBelongFKAsync(AASClient.AASServiceReference.QueryJyBelongFKRequest request);
        
        // CODEGEN: 参数“QueryJyNotBelongFKResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyNotBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyNotBelongFKResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryJyNotBelongFKResponse QueryJyNotBelongFK(AASClient.AASServiceReference.QueryJyNotBelongFKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyNotBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyNotBelongFKResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyNotBelongFKResponse> QueryJyNotBelongFKAsync(AASClient.AASServiceReference.QueryJyNotBelongFKRequest request);
        
        // CODEGEN: 参数“RC”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTraderToRC", ReplyAction="http://tempuri.org/AASService/AddTraderToRCResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddTraderToRCResponse AddTraderToRC(AASClient.AASServiceReference.AddTraderToRCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTraderToRC", ReplyAction="http://tempuri.org/AASService/AddTraderToRCResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderToRCResponse> AddTraderToRCAsync(AASClient.AASServiceReference.AddTraderToRCRequest request);
        
        // CODEGEN: 参数“RC”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteTraderFromRC", ReplyAction="http://tempuri.org/AASService/DeleteTraderFromRCResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteTraderFromRCResponse DeleteTraderFromRC(AASClient.AASServiceReference.DeleteTraderFromRCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteTraderFromRC", ReplyAction="http://tempuri.org/AASService/DeleteTraderFromRCResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTraderFromRCResponse> DeleteTraderFromRCAsync(AASClient.AASServiceReference.DeleteTraderFromRCRequest request);
        
        // CODEGEN: 参数“QueryECoinQsAccountResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryECoinQsAccount", ReplyAction="http://tempuri.org/AASService/QueryECoinQsAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryECoinQsAccountResponse QueryECoinQsAccount(AASClient.AASServiceReference.QueryECoinQsAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryECoinQsAccount", ReplyAction="http://tempuri.org/AASService/QueryECoinQsAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryECoinQsAccountResponse> QueryECoinQsAccountAsync(AASClient.AASServiceReference.QueryECoinQsAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/EnableECoinQSAccount", ReplyAction="http://tempuri.org/AASService/EnableECoinQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.EnableECoinQSAccountResponse EnableECoinQSAccount(AASClient.AASServiceReference.EnableECoinQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/EnableECoinQSAccount", ReplyAction="http://tempuri.org/AASService/EnableECoinQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableECoinQSAccountResponse> EnableECoinQSAccountAsync(AASClient.AASServiceReference.EnableECoinQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddECoinQSAccount", ReplyAction="http://tempuri.org/AASService/AddECoinQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddECoinQSAccountResponse AddECoinQSAccount(AASClient.AASServiceReference.AddECoinQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddECoinQSAccount", ReplyAction="http://tempuri.org/AASService/AddECoinQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddECoinQSAccountResponse> AddECoinQSAccountAsync(AASClient.AASServiceReference.AddECoinQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateECoinQSAccount", ReplyAction="http://tempuri.org/AASService/UpdateECoinQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateECoinQSAccountResponse UpdateECoinQSAccount(AASClient.AASServiceReference.UpdateECoinQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateECoinQSAccount", ReplyAction="http://tempuri.org/AASService/UpdateECoinQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateECoinQSAccountResponse> UpdateECoinQSAccountAsync(AASClient.AASServiceReference.UpdateECoinQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteECoinQSAccount", ReplyAction="http://tempuri.org/AASService/DeleteECoinQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteECoinQSAccountResponse DeleteECoinQSAccount(AASClient.AASServiceReference.DeleteECoinQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteECoinQSAccount", ReplyAction="http://tempuri.org/AASService/DeleteECoinQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteECoinQSAccountResponse> DeleteECoinQSAccountAsync(AASClient.AASServiceReference.DeleteECoinQSAccountRequest request);
        
        // CODEGEN: 参数“QueryAccountCoinResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAccountCoin", ReplyAction="http://tempuri.org/AASService/QueryAccountCoinResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryAccountCoinResponse QueryAccountCoin(AASClient.AASServiceReference.QueryAccountCoinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryAccountCoin", ReplyAction="http://tempuri.org/AASService/QueryAccountCoinResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountCoinResponse> QueryAccountCoinAsync(AASClient.AASServiceReference.QueryAccountCoinRequest request);
        
        // CODEGEN: 参数“交易员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryCoinQty", ReplyAction="http://tempuri.org/AASService/QueryCoinQtyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryCoinQtyResponse QueryCoinQty(AASClient.AASServiceReference.QueryCoinQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryCoinQty", ReplyAction="http://tempuri.org/AASService/QueryCoinQtyResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryCoinQtyResponse> QueryCoinQtyAsync(AASClient.AASServiceReference.QueryCoinQtyRequest request);
        
        // CODEGEN: 参数“QueryQsAccountResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryQsAccount", ReplyAction="http://tempuri.org/AASService/QueryQsAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryQsAccountResponse QueryQsAccount(AASClient.AASServiceReference.QueryQsAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryQsAccount", ReplyAction="http://tempuri.org/AASService/QueryQsAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryQsAccountResponse> QueryQsAccountAsync(AASClient.AASServiceReference.QueryQsAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/EnableQSAccount", ReplyAction="http://tempuri.org/AASService/EnableQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.EnableQSAccountResponse EnableQSAccount(AASClient.AASServiceReference.EnableQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/EnableQSAccount", ReplyAction="http://tempuri.org/AASService/EnableQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableQSAccountResponse> EnableQSAccountAsync(AASClient.AASServiceReference.EnableQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddQSAccount", ReplyAction="http://tempuri.org/AASService/AddQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddQSAccountResponse AddQSAccount(AASClient.AASServiceReference.AddQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddQSAccount", ReplyAction="http://tempuri.org/AASService/AddQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddQSAccountResponse> AddQSAccountAsync(AASClient.AASServiceReference.AddQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateQSAccount", ReplyAction="http://tempuri.org/AASService/UpdateQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateQSAccountResponse UpdateQSAccount(AASClient.AASServiceReference.UpdateQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateQSAccount", ReplyAction="http://tempuri.org/AASService/UpdateQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateQSAccountResponse> UpdateQSAccountAsync(AASClient.AASServiceReference.UpdateQSAccountRequest request);
        
        // CODEGEN: 参数“Name”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteQSAccount", ReplyAction="http://tempuri.org/AASService/DeleteQSAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteQSAccountResponse DeleteQSAccount(AASClient.AASServiceReference.DeleteQSAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteQSAccount", ReplyAction="http://tempuri.org/AASService/DeleteQSAccountResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteQSAccountResponse> DeleteQSAccountAsync(AASClient.AASServiceReference.DeleteQSAccountRequest request);
        
        // CODEGEN: 参数“TestResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Test", ReplyAction="http://tempuri.org/AASService/TestResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.TestResponse Test(AASClient.AASServiceReference.TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Test", ReplyAction="http://tempuri.org/AASService/TestResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.TestResponse> TestAsync(AASClient.AASServiceReference.TestRequest request);
        
        // CODEGEN: 参数“AccountRepayResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AccountRepay", ReplyAction="http://tempuri.org/AASService/AccountRepayResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AccountRepayResponse AccountRepay(AASClient.AASServiceReference.AccountRepayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AccountRepay", ReplyAction="http://tempuri.org/AASService/AccountRepayResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AccountRepayResponse> AccountRepayAsync(AASClient.AASServiceReference.AccountRepayRequest request);
        
        // CODEGEN: 参数“QueryJYResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJY", ReplyAction="http://tempuri.org/AASService/QueryJYResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryJYResponse QueryJY(AASClient.AASServiceReference.QueryJYRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJY", ReplyAction="http://tempuri.org/AASService/QueryJYResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJYResponse> QueryJYAsync(AASClient.AASServiceReference.QueryJYRequest request);
        
        // CODEGEN: 参数“QueryTradeLimitResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryTradeLimit", ReplyAction="http://tempuri.org/AASService/QueryTradeLimitResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryTradeLimitResponse QueryTradeLimit(AASClient.AASServiceReference.QueryTradeLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryTradeLimit", ReplyAction="http://tempuri.org/AASService/QueryTradeLimitResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryTradeLimitResponse> QueryTradeLimitAsync(AASClient.AASServiceReference.QueryTradeLimitRequest request);
        
        // CODEGEN: 参数“交易员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTradeLimit", ReplyAction="http://tempuri.org/AASService/AddTradeLimitResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddTradeLimitResponse AddTradeLimit(AASClient.AASServiceReference.AddTradeLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTradeLimit", ReplyAction="http://tempuri.org/AASService/AddTradeLimitResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTradeLimitResponse> AddTradeLimitAsync(AASClient.AASServiceReference.AddTradeLimitRequest request);
        
        // CODEGEN: 参数“交易员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateTradeLimit", ReplyAction="http://tempuri.org/AASService/UpdateTradeLimitResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateTradeLimitResponse UpdateTradeLimit(AASClient.AASServiceReference.UpdateTradeLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateTradeLimit", ReplyAction="http://tempuri.org/AASService/UpdateTradeLimitResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateTradeLimitResponse> UpdateTradeLimitAsync(AASClient.AASServiceReference.UpdateTradeLimitRequest request);
        
        // CODEGEN: 参数“交易员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteTradeLimit", ReplyAction="http://tempuri.org/AASService/DeleteTradeLimitResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteTradeLimitResponse DeleteTradeLimit(AASClient.AASServiceReference.DeleteTradeLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteTradeLimit", ReplyAction="http://tempuri.org/AASService/DeleteTradeLimitResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTradeLimitResponse> DeleteTradeLimitAsync(AASClient.AASServiceReference.DeleteTradeLimitRequest request);
        
        // CODEGEN: 参数“Query普通用户Result”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query普通用户", ReplyAction="http://tempuri.org/AASService/Query普通用户Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Query普通用户Response Query普通用户(AASClient.AASServiceReference.Query普通用户Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query普通用户", ReplyAction="http://tempuri.org/AASService/Query普通用户Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query普通用户Response> Query普通用户Async(AASClient.AASServiceReference.Query普通用户Request request);
        
        // CODEGEN: 参数“QueryMACBelongUserResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryMACBelongUser", ReplyAction="http://tempuri.org/AASService/QueryMACBelongUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryMACBelongUserResponse QueryMACBelongUser(AASClient.AASServiceReference.QueryMACBelongUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryMACBelongUser", ReplyAction="http://tempuri.org/AASService/QueryMACBelongUserResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryMACBelongUserResponse> QueryMACBelongUserAsync(AASClient.AASServiceReference.QueryMACBelongUserRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddMAC", ReplyAction="http://tempuri.org/AASService/AddMACResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddMACResponse AddMAC(AASClient.AASServiceReference.AddMACRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddMAC", ReplyAction="http://tempuri.org/AASService/AddMACResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddMACResponse> AddMACAsync(AASClient.AASServiceReference.AddMACRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteMAC", ReplyAction="http://tempuri.org/AASService/DeleteMACResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.DeleteMACResponse DeleteMAC(AASClient.AASServiceReference.DeleteMACRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/DeleteMAC", ReplyAction="http://tempuri.org/AASService/DeleteMACResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteMACResponse> DeleteMACAsync(AASClient.AASServiceReference.DeleteMACRequest request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/FectchAllTable", ReplyAction="http://tempuri.org/AASService/FectchAllTableResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.FectchAllTableResponse FectchAllTable(AASClient.AASServiceReference.FectchAllTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/FectchAllTable", ReplyAction="http://tempuri.org/AASService/FectchAllTableResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.FectchAllTableResponse> FectchAllTableAsync(AASClient.AASServiceReference.FectchAllTableRequest request);
        
        // CODEGEN: 参数“SendOrderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/SendOrder", ReplyAction="http://tempuri.org/AASService/SendOrderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.SendOrderResponse SendOrder(AASClient.AASServiceReference.SendOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/SendOrder", ReplyAction="http://tempuri.org/AASService/SendOrderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.SendOrderResponse> SendOrderAsync(AASClient.AASServiceReference.SendOrderRequest request);
        
        // CODEGEN: 参数“SendECoinOrderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/SendECoinOrder", ReplyAction="http://tempuri.org/AASService/SendECoinOrderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.SendECoinOrderResponse SendECoinOrder(AASClient.AASServiceReference.SendECoinOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/SendECoinOrder", ReplyAction="http://tempuri.org/AASService/SendECoinOrderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.SendECoinOrderResponse> SendECoinOrderAsync(AASClient.AASServiceReference.SendECoinOrderRequest request);
        
        // CODEGEN: 参数“CancelOrderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CancelOrder", ReplyAction="http://tempuri.org/AASService/CancelOrderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.CancelOrderResponse CancelOrder(AASClient.AASServiceReference.CancelOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CancelOrder", ReplyAction="http://tempuri.org/AASService/CancelOrderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelOrderResponse> CancelOrderAsync(AASClient.AASServiceReference.CancelOrderRequest request);
        
        // CODEGEN: 参数“CancelECoinOrderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CancelECoinOrder", ReplyAction="http://tempuri.org/AASService/CancelECoinOrderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.CancelECoinOrderResponse CancelECoinOrder(AASClient.AASServiceReference.CancelECoinOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CancelECoinOrder", ReplyAction="http://tempuri.org/AASService/CancelECoinOrderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelECoinOrderResponse> CancelECoinOrderAsync(AASClient.AASServiceReference.CancelECoinOrderRequest request);
        
        // CODEGEN: 参数“userName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RefreshOrderTable", ReplyAction="http://tempuri.org/AASService/RefreshOrderTableResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.RefreshOrderTableResponse RefreshOrderTable(AASClient.AASServiceReference.RefreshOrderTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RefreshOrderTable", ReplyAction="http://tempuri.org/AASService/RefreshOrderTableResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RefreshOrderTableResponse> RefreshOrderTableAsync(AASClient.AASServiceReference.RefreshOrderTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Fectch名下交易员Table", ReplyAction="http://tempuri.org/AASService/Fectch名下交易员TableResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Fectch名下交易员Table();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Fectch名下交易员Table", ReplyAction="http://tempuri.org/AASService/Fectch名下交易员TableResponse")]
        System.Threading.Tasks.Task Fectch名下交易员TableAsync();
        
        // CODEGEN: 参数“交易员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CloseOrder", ReplyAction="http://tempuri.org/AASService/CloseOrderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.CloseOrderResponse CloseOrder(AASClient.AASServiceReference.CloseOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/CloseOrder", ReplyAction="http://tempuri.org/AASService/CloseOrderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CloseOrderResponse> CloseOrderAsync(AASClient.AASServiceReference.CloseOrderRequest request);
        
        // CODEGEN: 参数“QueryJyLogBelongFKResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyLogBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyLogBelongFKResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryJyLogBelongFKResponse QueryJyLogBelongFK(AASClient.AASServiceReference.QueryJyLogBelongFKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryJyLogBelongFK", ReplyAction="http://tempuri.org/AASService/QueryJyLogBelongFKResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyLogBelongFKResponse> QueryJyLogBelongFKAsync(AASClient.AASServiceReference.QueryJyLogBelongFKRequest request);
        
        // CODEGEN: 参数“Query业绩BelongFKResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query业绩BelongFK", ReplyAction="http://tempuri.org/AASService/Query业绩BelongFKResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Query业绩BelongFKResponse Query业绩BelongFK(AASClient.AASServiceReference.Query业绩BelongFKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Query业绩BelongFK", ReplyAction="http://tempuri.org/AASService/Query业绩BelongFKResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query业绩BelongFKResponse> Query业绩BelongFKAsync(AASClient.AASServiceReference.Query业绩BelongFKRequest request);
        
        // CODEGEN: 参数“ShareLimitDocumentQueryResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ShareLimitDocumentQuery", ReplyAction="http://tempuri.org/AASService/ShareLimitDocumentQueryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.ShareLimitDocumentQueryResponse ShareLimitDocumentQuery(AASClient.AASServiceReference.ShareLimitDocumentQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ShareLimitDocumentQuery", ReplyAction="http://tempuri.org/AASService/ShareLimitDocumentQueryResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareLimitDocumentQueryResponse> ShareLimitDocumentQueryAsync(AASClient.AASServiceReference.ShareLimitDocumentQueryRequest request);
        
        // CODEGEN: 参数“ShareGroupQueryResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ShareGroupQuery", ReplyAction="http://tempuri.org/AASService/ShareGroupQueryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.ShareGroupQueryResponse ShareGroupQuery(AASClient.AASServiceReference.ShareGroupQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/ShareGroupQuery", ReplyAction="http://tempuri.org/AASService/ShareGroupQueryResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareGroupQueryResponse> ShareGroupQueryAsync(AASClient.AASServiceReference.ShareGroupQueryRequest request);
        
        // CODEGEN: 参数“AddTraderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTrader", ReplyAction="http://tempuri.org/AASService/AddTraderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddTraderResponse AddTrader(AASClient.AASServiceReference.AddTraderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddTrader", ReplyAction="http://tempuri.org/AASService/AddTraderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderResponse> AddTraderAsync(AASClient.AASServiceReference.AddTraderRequest request);
        
        // CODEGEN: 参数“group”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RemoveGroupTrader", ReplyAction="http://tempuri.org/AASService/RemoveGroupTraderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.RemoveGroupTraderResponse RemoveGroupTrader(AASClient.AASServiceReference.RemoveGroupTraderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RemoveGroupTrader", ReplyAction="http://tempuri.org/AASService/RemoveGroupTraderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveGroupTraderResponse> RemoveGroupTraderAsync(AASClient.AASServiceReference.RemoveGroupTraderRequest request);
        
        // CODEGEN: 参数“AddStockResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddStock", ReplyAction="http://tempuri.org/AASService/AddStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.AddStockResponse AddStock(AASClient.AASServiceReference.AddStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/AddStock", ReplyAction="http://tempuri.org/AASService/AddStockResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddStockResponse> AddStockAsync(AASClient.AASServiceReference.AddStockRequest request);
        
        // CODEGEN: 参数“UpdateStockResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateStock", ReplyAction="http://tempuri.org/AASService/UpdateStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.UpdateStockResponse UpdateStock(AASClient.AASServiceReference.UpdateStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/UpdateStock", ReplyAction="http://tempuri.org/AASService/UpdateStockResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateStockResponse> UpdateStockAsync(AASClient.AASServiceReference.UpdateStockRequest request);
        
        // CODEGEN: 参数“RemoveStockResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RemoveStock", ReplyAction="http://tempuri.org/AASService/RemoveStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.RemoveStockResponse RemoveStock(AASClient.AASServiceReference.RemoveStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/RemoveStock", ReplyAction="http://tempuri.org/AASService/RemoveStockResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveStockResponse> RemoveStockAsync(AASClient.AASServiceReference.RemoveStockRequest request);
        
        // CODEGEN: 参数“QueryNotGroupedTraderResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryNotGroupedTrader", ReplyAction="http://tempuri.org/AASService/QueryNotGroupedTraderResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.QueryNotGroupedTraderResponse QueryNotGroupedTrader(AASClient.AASServiceReference.QueryNotGroupedTraderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/QueryNotGroupedTrader", ReplyAction="http://tempuri.org/AASService/QueryNotGroupedTraderResponse")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryNotGroupedTraderResponse> QueryNotGroupedTraderAsync(AASClient.AASServiceReference.QueryNotGroupedTraderRequest request);
        
        // CODEGEN: 参数“userName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Add可用资金", ReplyAction="http://tempuri.org/AASService/Add可用资金Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Add可用资金Response Add可用资金(AASClient.AASServiceReference.Add可用资金Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Add可用资金", ReplyAction="http://tempuri.org/AASService/Add可用资金Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Add可用资金Response> Add可用资金Async(AASClient.AASServiceReference.Add可用资金Request request);
        
        // CODEGEN: 参数“userName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Delete可用资金", ReplyAction="http://tempuri.org/AASService/Delete可用资金Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Delete可用资金Response Delete可用资金(AASClient.AASServiceReference.Delete可用资金Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Delete可用资金", ReplyAction="http://tempuri.org/AASService/Delete可用资金Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Delete可用资金Response> Delete可用资金Async(AASClient.AASServiceReference.Delete可用资金Request request);
        
        // CODEGEN: 参数“userName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Update可用资金", ReplyAction="http://tempuri.org/AASService/Update可用资金Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AASClient.AASServiceReference.Update可用资金Response Update可用资金(AASClient.AASServiceReference.Update可用资金Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AASService/Update可用资金", ReplyAction="http://tempuri.org/AASService/Update可用资金Response")]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Update可用资金Response> Update可用资金Async(AASClient.AASServiceReference.Update可用资金Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AASServiceCallback {
        
        // CODEGEN: 参数“操作员”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/Notify")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Notify(AASClient.AASServiceReference.Notify request);
        
        // CODEGEN: 参数“名下交易员DataTable”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/风控分配DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 风控分配DataTableChanged(AASClient.AASServiceReference.风控分配DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/成交DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 成交DataTableChanged(AASClient.AASServiceReference.成交DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/委托DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 委托DataTableChanged(AASClient.AASServiceReference.委托DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/平台用户DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 平台用户DataTableChanged(AASClient.AASServiceReference.平台用户DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/额度分配DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 额度分配DataTableChanged(AASClient.AASServiceReference.额度分配DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/订单DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 订单DataTableChanged(AASClient.AASServiceReference.订单DataTableChanged request);
        
        // CODEGEN: 参数“UserName”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/已平仓订单DataTableChanged")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void 已平仓订单DataTableChanged(AASClient.AASServiceReference.已平仓订单DataTableChanged request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/AASService/Close")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Close();
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DbDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DbDataSet : global::System.Data.DataSet {
        
        private 已发委托DataTable table已发委托;
        
        private 已处理成交DataTable table已处理成交;
        
        private 券商帐户DataTable table券商帐户;
        
        private 订单DataTable table订单;
        
        private 平台用户DataTable table平台用户;
        
        private MAC地址分配DataTable tableMAC地址分配;
        
        private 风控分配DataTable table风控分配;
        
        private 已平仓订单DataTable table已平仓订单;
        
        private 交易日志DataTable table交易日志;
        
        private 额度分配DataTable table额度分配;
        
        private 电子币帐户DataTable table电子币帐户;
        
        private 可用资金DataTable table可用资金;
        
        private 交易账户关联DataTable table交易账户关联;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public DbDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected DbDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["已发委托"] != null)) {
                    base.Tables.Add(new 已发委托DataTable(ds.Tables["已发委托"]));
                }
                if ((ds.Tables["已处理成交"] != null)) {
                    base.Tables.Add(new 已处理成交DataTable(ds.Tables["已处理成交"]));
                }
                if ((ds.Tables["券商帐户"] != null)) {
                    base.Tables.Add(new 券商帐户DataTable(ds.Tables["券商帐户"]));
                }
                if ((ds.Tables["订单"] != null)) {
                    base.Tables.Add(new 订单DataTable(ds.Tables["订单"]));
                }
                if ((ds.Tables["平台用户"] != null)) {
                    base.Tables.Add(new 平台用户DataTable(ds.Tables["平台用户"]));
                }
                if ((ds.Tables["MAC地址分配"] != null)) {
                    base.Tables.Add(new MAC地址分配DataTable(ds.Tables["MAC地址分配"]));
                }
                if ((ds.Tables["风控分配"] != null)) {
                    base.Tables.Add(new 风控分配DataTable(ds.Tables["风控分配"]));
                }
                if ((ds.Tables["已平仓订单"] != null)) {
                    base.Tables.Add(new 已平仓订单DataTable(ds.Tables["已平仓订单"]));
                }
                if ((ds.Tables["交易日志"] != null)) {
                    base.Tables.Add(new 交易日志DataTable(ds.Tables["交易日志"]));
                }
                if ((ds.Tables["额度分配"] != null)) {
                    base.Tables.Add(new 额度分配DataTable(ds.Tables["额度分配"]));
                }
                if ((ds.Tables["电子币帐户"] != null)) {
                    base.Tables.Add(new 电子币帐户DataTable(ds.Tables["电子币帐户"]));
                }
                if ((ds.Tables["可用资金"] != null)) {
                    base.Tables.Add(new 可用资金DataTable(ds.Tables["可用资金"]));
                }
                if ((ds.Tables["交易账户关联"] != null)) {
                    base.Tables.Add(new 交易账户关联DataTable(ds.Tables["交易账户关联"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 已发委托DataTable 已发委托 {
            get {
                return this.table已发委托;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 已处理成交DataTable 已处理成交 {
            get {
                return this.table已处理成交;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 券商帐户DataTable 券商帐户 {
            get {
                return this.table券商帐户;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 订单DataTable 订单 {
            get {
                return this.table订单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 平台用户DataTable 平台用户 {
            get {
                return this.table平台用户;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAC地址分配DataTable MAC地址分配 {
            get {
                return this.tableMAC地址分配;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 风控分配DataTable 风控分配 {
            get {
                return this.table风控分配;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 已平仓订单DataTable 已平仓订单 {
            get {
                return this.table已平仓订单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 交易日志DataTable 交易日志 {
            get {
                return this.table交易日志;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 额度分配DataTable 额度分配 {
            get {
                return this.table额度分配;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 电子币帐户DataTable 电子币帐户 {
            get {
                return this.table电子币帐户;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 可用资金DataTable 可用资金 {
            get {
                return this.table可用资金;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 交易账户关联DataTable 交易账户关联 {
            get {
                return this.table交易账户关联;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DbDataSet cln = ((DbDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["已发委托"] != null)) {
                    base.Tables.Add(new 已发委托DataTable(ds.Tables["已发委托"]));
                }
                if ((ds.Tables["已处理成交"] != null)) {
                    base.Tables.Add(new 已处理成交DataTable(ds.Tables["已处理成交"]));
                }
                if ((ds.Tables["券商帐户"] != null)) {
                    base.Tables.Add(new 券商帐户DataTable(ds.Tables["券商帐户"]));
                }
                if ((ds.Tables["订单"] != null)) {
                    base.Tables.Add(new 订单DataTable(ds.Tables["订单"]));
                }
                if ((ds.Tables["平台用户"] != null)) {
                    base.Tables.Add(new 平台用户DataTable(ds.Tables["平台用户"]));
                }
                if ((ds.Tables["MAC地址分配"] != null)) {
                    base.Tables.Add(new MAC地址分配DataTable(ds.Tables["MAC地址分配"]));
                }
                if ((ds.Tables["风控分配"] != null)) {
                    base.Tables.Add(new 风控分配DataTable(ds.Tables["风控分配"]));
                }
                if ((ds.Tables["已平仓订单"] != null)) {
                    base.Tables.Add(new 已平仓订单DataTable(ds.Tables["已平仓订单"]));
                }
                if ((ds.Tables["交易日志"] != null)) {
                    base.Tables.Add(new 交易日志DataTable(ds.Tables["交易日志"]));
                }
                if ((ds.Tables["额度分配"] != null)) {
                    base.Tables.Add(new 额度分配DataTable(ds.Tables["额度分配"]));
                }
                if ((ds.Tables["电子币帐户"] != null)) {
                    base.Tables.Add(new 电子币帐户DataTable(ds.Tables["电子币帐户"]));
                }
                if ((ds.Tables["可用资金"] != null)) {
                    base.Tables.Add(new 可用资金DataTable(ds.Tables["可用资金"]));
                }
                if ((ds.Tables["交易账户关联"] != null)) {
                    base.Tables.Add(new 交易账户关联DataTable(ds.Tables["交易账户关联"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table已发委托 = ((已发委托DataTable)(base.Tables["已发委托"]));
            if ((initTable == true)) {
                if ((this.table已发委托 != null)) {
                    this.table已发委托.InitVars();
                }
            }
            this.table已处理成交 = ((已处理成交DataTable)(base.Tables["已处理成交"]));
            if ((initTable == true)) {
                if ((this.table已处理成交 != null)) {
                    this.table已处理成交.InitVars();
                }
            }
            this.table券商帐户 = ((券商帐户DataTable)(base.Tables["券商帐户"]));
            if ((initTable == true)) {
                if ((this.table券商帐户 != null)) {
                    this.table券商帐户.InitVars();
                }
            }
            this.table订单 = ((订单DataTable)(base.Tables["订单"]));
            if ((initTable == true)) {
                if ((this.table订单 != null)) {
                    this.table订单.InitVars();
                }
            }
            this.table平台用户 = ((平台用户DataTable)(base.Tables["平台用户"]));
            if ((initTable == true)) {
                if ((this.table平台用户 != null)) {
                    this.table平台用户.InitVars();
                }
            }
            this.tableMAC地址分配 = ((MAC地址分配DataTable)(base.Tables["MAC地址分配"]));
            if ((initTable == true)) {
                if ((this.tableMAC地址分配 != null)) {
                    this.tableMAC地址分配.InitVars();
                }
            }
            this.table风控分配 = ((风控分配DataTable)(base.Tables["风控分配"]));
            if ((initTable == true)) {
                if ((this.table风控分配 != null)) {
                    this.table风控分配.InitVars();
                }
            }
            this.table已平仓订单 = ((已平仓订单DataTable)(base.Tables["已平仓订单"]));
            if ((initTable == true)) {
                if ((this.table已平仓订单 != null)) {
                    this.table已平仓订单.InitVars();
                }
            }
            this.table交易日志 = ((交易日志DataTable)(base.Tables["交易日志"]));
            if ((initTable == true)) {
                if ((this.table交易日志 != null)) {
                    this.table交易日志.InitVars();
                }
            }
            this.table额度分配 = ((额度分配DataTable)(base.Tables["额度分配"]));
            if ((initTable == true)) {
                if ((this.table额度分配 != null)) {
                    this.table额度分配.InitVars();
                }
            }
            this.table电子币帐户 = ((电子币帐户DataTable)(base.Tables["电子币帐户"]));
            if ((initTable == true)) {
                if ((this.table电子币帐户 != null)) {
                    this.table电子币帐户.InitVars();
                }
            }
            this.table可用资金 = ((可用资金DataTable)(base.Tables["可用资金"]));
            if ((initTable == true)) {
                if ((this.table可用资金 != null)) {
                    this.table可用资金.InitVars();
                }
            }
            this.table交易账户关联 = ((交易账户关联DataTable)(base.Tables["交易账户关联"]));
            if ((initTable == true)) {
                if ((this.table交易账户关联 != null)) {
                    this.table交易账户关联.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DbDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DbDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table已发委托 = new 已发委托DataTable();
            base.Tables.Add(this.table已发委托);
            this.table已处理成交 = new 已处理成交DataTable();
            base.Tables.Add(this.table已处理成交);
            this.table券商帐户 = new 券商帐户DataTable();
            base.Tables.Add(this.table券商帐户);
            this.table订单 = new 订单DataTable();
            base.Tables.Add(this.table订单);
            this.table平台用户 = new 平台用户DataTable();
            base.Tables.Add(this.table平台用户);
            this.tableMAC地址分配 = new MAC地址分配DataTable();
            base.Tables.Add(this.tableMAC地址分配);
            this.table风控分配 = new 风控分配DataTable();
            base.Tables.Add(this.table风控分配);
            this.table已平仓订单 = new 已平仓订单DataTable();
            base.Tables.Add(this.table已平仓订单);
            this.table交易日志 = new 交易日志DataTable();
            base.Tables.Add(this.table交易日志);
            this.table额度分配 = new 额度分配DataTable();
            base.Tables.Add(this.table额度分配);
            this.table电子币帐户 = new 电子币帐户DataTable();
            base.Tables.Add(this.table电子币帐户);
            this.table可用资金 = new 可用资金DataTable();
            base.Tables.Add(this.table可用资金);
            this.table交易账户关联 = new 交易账户关联DataTable();
            base.Tables.Add(this.table交易账户关联);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize已发委托() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize已处理成交() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize券商帐户() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize订单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize平台用户() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeMAC地址分配() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize风控分配() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize已平仓订单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize交易日志() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize额度分配() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize电子币帐户() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize可用资金() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize交易账户关联() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DbDataSet ds = new DbDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 已发委托RowChangeEventHandler(object sender, 已发委托RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 已处理成交RowChangeEventHandler(object sender, 已处理成交RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 券商帐户RowChangeEventHandler(object sender, 券商帐户RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 订单RowChangeEventHandler(object sender, 订单RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 平台用户RowChangeEventHandler(object sender, 平台用户RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void MAC地址分配RowChangeEventHandler(object sender, MAC地址分配RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 风控分配RowChangeEventHandler(object sender, 风控分配RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 已平仓订单RowChangeEventHandler(object sender, 已平仓订单RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 交易日志RowChangeEventHandler(object sender, 交易日志RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 额度分配RowChangeEventHandler(object sender, 额度分配RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 电子币帐户RowChangeEventHandler(object sender, 电子币帐户RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 可用资金RowChangeEventHandler(object sender, 可用资金RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 交易账户关联RowChangeEventHandler(object sender, 交易账户关联RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 已发委托DataTable : global::System.Data.TypedTableBase<已发委托Row> {
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column委托编号;
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column状态说明;
            
            private global::System.Data.DataColumn column市场代码;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column买卖方向;
            
            private global::System.Data.DataColumn column成交价格;
            
            private global::System.Data.DataColumn column成交数量;
            
            private global::System.Data.DataColumn column委托价格;
            
            private global::System.Data.DataColumn column委托数量;
            
            private global::System.Data.DataColumn column撤单数量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托DataTable() {
                this.TableName = "已发委托";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已发委托DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 已发委托DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托编号Column {
                get {
                    return this.column委托编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 状态说明Column {
                get {
                    return this.column状态说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 市场代码Column {
                get {
                    return this.column市场代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买卖方向Column {
                get {
                    return this.column买卖方向;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交价格Column {
                get {
                    return this.column成交价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交数量Column {
                get {
                    return this.column成交数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托价格Column {
                get {
                    return this.column委托价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托数量Column {
                get {
                    return this.column委托数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 撤单数量Column {
                get {
                    return this.column撤单数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托Row this[int index] {
                get {
                    return ((已发委托Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已发委托RowChangeEventHandler 已发委托RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已发委托RowChangeEventHandler 已发委托RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已发委托RowChangeEventHandler 已发委托RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已发委托RowChangeEventHandler 已发委托RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add已发委托Row(已发委托Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托Row Add已发委托Row(System.DateTime 日期, string 组合号, string 委托编号, string 交易员, string 状态说明, byte 市场代码, string 证券代码, string 证券名称, int 买卖方向, decimal 成交价格, decimal 成交数量, decimal 委托价格, decimal 委托数量, decimal 撤单数量) {
                已发委托Row row已发委托Row = ((已发委托Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        日期,
                        组合号,
                        委托编号,
                        交易员,
                        状态说明,
                        市场代码,
                        证券代码,
                        证券名称,
                        买卖方向,
                        成交价格,
                        成交数量,
                        委托价格,
                        委托数量,
                        撤单数量};
                row已发委托Row.ItemArray = columnValuesArray;
                this.Rows.Add(row已发委托Row);
                return row已发委托Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                已发委托DataTable cln = ((已发委托DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 已发委托DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column日期 = base.Columns["日期"];
                this.column组合号 = base.Columns["组合号"];
                this.column委托编号 = base.Columns["委托编号"];
                this.column交易员 = base.Columns["交易员"];
                this.column状态说明 = base.Columns["状态说明"];
                this.column市场代码 = base.Columns["市场代码"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column买卖方向 = base.Columns["买卖方向"];
                this.column成交价格 = base.Columns["成交价格"];
                this.column成交数量 = base.Columns["成交数量"];
                this.column委托价格 = base.Columns["委托价格"];
                this.column委托数量 = base.Columns["委托数量"];
                this.column撤单数量 = base.Columns["撤单数量"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column委托编号 = new global::System.Data.DataColumn("委托编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托编号);
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column状态说明 = new global::System.Data.DataColumn("状态说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column状态说明);
                this.column市场代码 = new global::System.Data.DataColumn("市场代码", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column市场代码);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column买卖方向 = new global::System.Data.DataColumn("买卖方向", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买卖方向);
                this.column成交价格 = new global::System.Data.DataColumn("成交价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交价格);
                this.column成交数量 = new global::System.Data.DataColumn("成交数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交数量);
                this.column委托价格 = new global::System.Data.DataColumn("委托价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托价格);
                this.column委托数量 = new global::System.Data.DataColumn("委托数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托数量);
                this.column撤单数量 = new global::System.Data.DataColumn("撤单数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column撤单数量);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托Row New已发委托Row() {
                return ((已发委托Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 已发委托Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(已发委托Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.已发委托RowChanged != null)) {
                    this.已发委托RowChanged(this, new 已发委托RowChangeEvent(((已发委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.已发委托RowChanging != null)) {
                    this.已发委托RowChanging(this, new 已发委托RowChangeEvent(((已发委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.已发委托RowDeleted != null)) {
                    this.已发委托RowDeleted(this, new 已发委托RowChangeEvent(((已发委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.已发委托RowDeleting != null)) {
                    this.已发委托RowDeleting(this, new 已发委托RowChangeEvent(((已发委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove已发委托Row(已发委托Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "已发委托DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 已处理成交DataTable : global::System.Data.TypedTableBase<已处理成交Row> {
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column委托编号;
            
            private global::System.Data.DataColumn column成交编号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交DataTable() {
                this.TableName = "已处理成交";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已处理成交DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 已处理成交DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托编号Column {
                get {
                    return this.column委托编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交编号Column {
                get {
                    return this.column成交编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交Row this[int index] {
                get {
                    return ((已处理成交Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已处理成交RowChangeEventHandler 已处理成交RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已处理成交RowChangeEventHandler 已处理成交RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已处理成交RowChangeEventHandler 已处理成交RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已处理成交RowChangeEventHandler 已处理成交RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add已处理成交Row(已处理成交Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交Row Add已处理成交Row(System.DateTime 日期, string 组合号, string 委托编号, string 成交编号) {
                已处理成交Row row已处理成交Row = ((已处理成交Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        日期,
                        组合号,
                        委托编号,
                        成交编号};
                row已处理成交Row.ItemArray = columnValuesArray;
                this.Rows.Add(row已处理成交Row);
                return row已处理成交Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                已处理成交DataTable cln = ((已处理成交DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 已处理成交DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column日期 = base.Columns["日期"];
                this.column组合号 = base.Columns["组合号"];
                this.column委托编号 = base.Columns["委托编号"];
                this.column成交编号 = base.Columns["成交编号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column委托编号 = new global::System.Data.DataColumn("委托编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托编号);
                this.column成交编号 = new global::System.Data.DataColumn("成交编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交编号);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交Row New已处理成交Row() {
                return ((已处理成交Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 已处理成交Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(已处理成交Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.已处理成交RowChanged != null)) {
                    this.已处理成交RowChanged(this, new 已处理成交RowChangeEvent(((已处理成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.已处理成交RowChanging != null)) {
                    this.已处理成交RowChanging(this, new 已处理成交RowChangeEvent(((已处理成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.已处理成交RowDeleted != null)) {
                    this.已处理成交RowDeleted(this, new 已处理成交RowChangeEvent(((已处理成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.已处理成交RowDeleting != null)) {
                    this.已处理成交RowDeleting(this, new 已处理成交RowChangeEvent(((已处理成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove已处理成交Row(已处理成交Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "已处理成交DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 券商帐户DataTable : global::System.Data.TypedTableBase<券商帐户Row> {
            
            private global::System.Data.DataColumn column名称;
            
            private global::System.Data.DataColumn column启用;
            
            private global::System.Data.DataColumn column券商;
            
            private global::System.Data.DataColumn column类型;
            
            private global::System.Data.DataColumn column交易服务器;
            
            private global::System.Data.DataColumn column版本号;
            
            private global::System.Data.DataColumn column营业部代码;
            
            private global::System.Data.DataColumn column登录帐号;
            
            private global::System.Data.DataColumn column交易帐号;
            
            private global::System.Data.DataColumn column交易密码;
            
            private global::System.Data.DataColumn column通讯密码;
            
            private global::System.Data.DataColumn column上海股东代码;
            
            private global::System.Data.DataColumn column深圳股东代码;
            
            private global::System.Data.DataColumn column查询间隔时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户DataTable() {
                this.TableName = "券商帐户";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 券商帐户DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 券商帐户DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 名称Column {
                get {
                    return this.column名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 启用Column {
                get {
                    return this.column启用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 券商Column {
                get {
                    return this.column券商;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 类型Column {
                get {
                    return this.column类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易服务器Column {
                get {
                    return this.column交易服务器;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 版本号Column {
                get {
                    return this.column版本号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 营业部代码Column {
                get {
                    return this.column营业部代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 登录帐号Column {
                get {
                    return this.column登录帐号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易帐号Column {
                get {
                    return this.column交易帐号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易密码Column {
                get {
                    return this.column交易密码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 通讯密码Column {
                get {
                    return this.column通讯密码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 上海股东代码Column {
                get {
                    return this.column上海股东代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 深圳股东代码Column {
                get {
                    return this.column深圳股东代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 查询间隔时间Column {
                get {
                    return this.column查询间隔时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户Row this[int index] {
                get {
                    return ((券商帐户Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 券商帐户RowChangeEventHandler 券商帐户RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 券商帐户RowChangeEventHandler 券商帐户RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 券商帐户RowChangeEventHandler 券商帐户RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 券商帐户RowChangeEventHandler 券商帐户RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add券商帐户Row(券商帐户Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户Row Add券商帐户Row(string 名称, bool 启用, string 券商, string 类型, string 交易服务器, string 版本号, short 营业部代码, string 登录帐号, string 交易帐号, string 交易密码, string 通讯密码, string 上海股东代码, string 深圳股东代码, int 查询间隔时间) {
                券商帐户Row row券商帐户Row = ((券商帐户Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        名称,
                        启用,
                        券商,
                        类型,
                        交易服务器,
                        版本号,
                        营业部代码,
                        登录帐号,
                        交易帐号,
                        交易密码,
                        通讯密码,
                        上海股东代码,
                        深圳股东代码,
                        查询间隔时间};
                row券商帐户Row.ItemArray = columnValuesArray;
                this.Rows.Add(row券商帐户Row);
                return row券商帐户Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                券商帐户DataTable cln = ((券商帐户DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 券商帐户DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column名称 = base.Columns["名称"];
                this.column启用 = base.Columns["启用"];
                this.column券商 = base.Columns["券商"];
                this.column类型 = base.Columns["类型"];
                this.column交易服务器 = base.Columns["交易服务器"];
                this.column版本号 = base.Columns["版本号"];
                this.column营业部代码 = base.Columns["营业部代码"];
                this.column登录帐号 = base.Columns["登录帐号"];
                this.column交易帐号 = base.Columns["交易帐号"];
                this.column交易密码 = base.Columns["交易密码"];
                this.column通讯密码 = base.Columns["通讯密码"];
                this.column上海股东代码 = base.Columns["上海股东代码"];
                this.column深圳股东代码 = base.Columns["深圳股东代码"];
                this.column查询间隔时间 = base.Columns["查询间隔时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column名称 = new global::System.Data.DataColumn("名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column名称);
                this.column启用 = new global::System.Data.DataColumn("启用", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column启用);
                this.column券商 = new global::System.Data.DataColumn("券商", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column券商);
                this.column类型 = new global::System.Data.DataColumn("类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column类型);
                this.column交易服务器 = new global::System.Data.DataColumn("交易服务器", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易服务器);
                this.column版本号 = new global::System.Data.DataColumn("版本号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column版本号);
                this.column营业部代码 = new global::System.Data.DataColumn("营业部代码", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column营业部代码);
                this.column登录帐号 = new global::System.Data.DataColumn("登录帐号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登录帐号);
                this.column交易帐号 = new global::System.Data.DataColumn("交易帐号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易帐号);
                this.column交易密码 = new global::System.Data.DataColumn("交易密码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易密码);
                this.column通讯密码 = new global::System.Data.DataColumn("通讯密码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通讯密码);
                this.column上海股东代码 = new global::System.Data.DataColumn("上海股东代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上海股东代码);
                this.column深圳股东代码 = new global::System.Data.DataColumn("深圳股东代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column深圳股东代码);
                this.column查询间隔时间 = new global::System.Data.DataColumn("查询间隔时间", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column查询间隔时间);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户Row New券商帐户Row() {
                return ((券商帐户Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 券商帐户Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(券商帐户Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.券商帐户RowChanged != null)) {
                    this.券商帐户RowChanged(this, new 券商帐户RowChangeEvent(((券商帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.券商帐户RowChanging != null)) {
                    this.券商帐户RowChanging(this, new 券商帐户RowChangeEvent(((券商帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.券商帐户RowDeleted != null)) {
                    this.券商帐户RowDeleted(this, new 券商帐户RowChangeEvent(((券商帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.券商帐户RowDeleting != null)) {
                    this.券商帐户RowDeleting(this, new 券商帐户RowChangeEvent(((券商帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove券商帐户Row(券商帐户Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "券商帐户DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 订单DataTable : global::System.Data.TypedTableBase<订单Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column开仓类别;
            
            private global::System.Data.DataColumn column已开数量;
            
            private global::System.Data.DataColumn column已开金额;
            
            private global::System.Data.DataColumn column浮动盈亏;
            
            private global::System.Data.DataColumn column开仓价位;
            
            private global::System.Data.DataColumn column当前价位;
            
            private global::System.Data.DataColumn column开仓时间;
            
            private global::System.Data.DataColumn column平仓时间;
            
            private global::System.Data.DataColumn column平仓类别;
            
            private global::System.Data.DataColumn column已平数量;
            
            private global::System.Data.DataColumn column已平金额;
            
            private global::System.Data.DataColumn column平仓价位;
            
            private global::System.Data.DataColumn column市场代码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单DataTable() {
                this.TableName = "订单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 订单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 订单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓类别Column {
                get {
                    return this.column开仓类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已开数量Column {
                get {
                    return this.column已开数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已开金额Column {
                get {
                    return this.column已开金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 浮动盈亏Column {
                get {
                    return this.column浮动盈亏;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓价位Column {
                get {
                    return this.column开仓价位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 当前价位Column {
                get {
                    return this.column当前价位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓时间Column {
                get {
                    return this.column开仓时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓时间Column {
                get {
                    return this.column平仓时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓类别Column {
                get {
                    return this.column平仓类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已平数量Column {
                get {
                    return this.column已平数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已平金额Column {
                get {
                    return this.column已平金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓价位Column {
                get {
                    return this.column平仓价位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 市场代码Column {
                get {
                    return this.column市场代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单Row this[int index] {
                get {
                    return ((订单Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 订单RowChangeEventHandler 订单RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 订单RowChangeEventHandler 订单RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 订单RowChangeEventHandler 订单RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 订单RowChangeEventHandler 订单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add订单Row(订单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单Row Add订单Row(
                        string 交易员, 
                        string 组合号, 
                        string 证券代码, 
                        string 证券名称, 
                        int 开仓类别, 
                        decimal 已开数量, 
                        decimal 已开金额, 
                        decimal 浮动盈亏, 
                        decimal 开仓价位, 
                        decimal 当前价位, 
                        System.DateTime 开仓时间, 
                        System.DateTime 平仓时间, 
                        int 平仓类别, 
                        decimal 已平数量, 
                        decimal 已平金额, 
                        decimal 平仓价位, 
                        byte 市场代码) {
                订单Row row订单Row = ((订单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        开仓类别,
                        已开数量,
                        已开金额,
                        浮动盈亏,
                        开仓价位,
                        当前价位,
                        开仓时间,
                        平仓时间,
                        平仓类别,
                        已平数量,
                        已平金额,
                        平仓价位,
                        市场代码};
                row订单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row订单Row);
                return row订单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                订单DataTable cln = ((订单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 订单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column开仓类别 = base.Columns["开仓类别"];
                this.column已开数量 = base.Columns["已开数量"];
                this.column已开金额 = base.Columns["已开金额"];
                this.column浮动盈亏 = base.Columns["浮动盈亏"];
                this.column开仓价位 = base.Columns["开仓价位"];
                this.column当前价位 = base.Columns["当前价位"];
                this.column开仓时间 = base.Columns["开仓时间"];
                this.column平仓时间 = base.Columns["平仓时间"];
                this.column平仓类别 = base.Columns["平仓类别"];
                this.column已平数量 = base.Columns["已平数量"];
                this.column已平金额 = base.Columns["已平金额"];
                this.column平仓价位 = base.Columns["平仓价位"];
                this.column市场代码 = base.Columns["市场代码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column开仓类别 = new global::System.Data.DataColumn("开仓类别", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓类别);
                this.column已开数量 = new global::System.Data.DataColumn("已开数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已开数量);
                this.column已开金额 = new global::System.Data.DataColumn("已开金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已开金额);
                this.column浮动盈亏 = new global::System.Data.DataColumn("浮动盈亏", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column浮动盈亏);
                this.column开仓价位 = new global::System.Data.DataColumn("开仓价位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓价位);
                this.column当前价位 = new global::System.Data.DataColumn("当前价位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column当前价位);
                this.column开仓时间 = new global::System.Data.DataColumn("开仓时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓时间);
                this.column平仓时间 = new global::System.Data.DataColumn("平仓时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓时间);
                this.column平仓类别 = new global::System.Data.DataColumn("平仓类别", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓类别);
                this.column已平数量 = new global::System.Data.DataColumn("已平数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已平数量);
                this.column已平金额 = new global::System.Data.DataColumn("已平金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已平金额);
                this.column平仓价位 = new global::System.Data.DataColumn("平仓价位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓价位);
                this.column市场代码 = new global::System.Data.DataColumn("市场代码", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column市场代码);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单Row New订单Row() {
                return ((订单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 订单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(订单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.订单RowChanged != null)) {
                    this.订单RowChanged(this, new 订单RowChangeEvent(((订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.订单RowChanging != null)) {
                    this.订单RowChanging(this, new 订单RowChangeEvent(((订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.订单RowDeleted != null)) {
                    this.订单RowDeleted(this, new 订单RowChangeEvent(((订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.订单RowDeleting != null)) {
                    this.订单RowDeleting(this, new 订单RowChangeEvent(((订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove订单Row(订单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "订单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 平台用户DataTable : global::System.Data.TypedTableBase<平台用户Row> {
            
            private global::System.Data.DataColumn column用户名;
            
            private global::System.Data.DataColumn column密码;
            
            private global::System.Data.DataColumn column角色;
            
            private global::System.Data.DataColumn column仓位限制;
            
            private global::System.Data.DataColumn column亏损限制;
            
            private global::System.Data.DataColumn column手续费率;
            
            private global::System.Data.DataColumn column允许删除碎股订单;
            
            private global::System.Data.DataColumn column分组;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户DataTable() {
                this.TableName = "平台用户";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 平台用户DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 平台用户DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 用户名Column {
                get {
                    return this.column用户名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 密码Column {
                get {
                    return this.column密码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 角色Column {
                get {
                    return this.column角色;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 仓位限制Column {
                get {
                    return this.column仓位限制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 亏损限制Column {
                get {
                    return this.column亏损限制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 手续费率Column {
                get {
                    return this.column手续费率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 允许删除碎股订单Column {
                get {
                    return this.column允许删除碎股订单;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 分组Column {
                get {
                    return this.column分组;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户Row this[int index] {
                get {
                    return ((平台用户Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 平台用户RowChangeEventHandler 平台用户RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 平台用户RowChangeEventHandler 平台用户RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 平台用户RowChangeEventHandler 平台用户RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 平台用户RowChangeEventHandler 平台用户RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add平台用户Row(平台用户Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户Row Add平台用户Row(string 用户名, string 密码, int 角色, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, int 分组) {
                平台用户Row row平台用户Row = ((平台用户Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        用户名,
                        密码,
                        角色,
                        仓位限制,
                        亏损限制,
                        手续费率,
                        允许删除碎股订单,
                        分组};
                row平台用户Row.ItemArray = columnValuesArray;
                this.Rows.Add(row平台用户Row);
                return row平台用户Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                平台用户DataTable cln = ((平台用户DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 平台用户DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column用户名 = base.Columns["用户名"];
                this.column密码 = base.Columns["密码"];
                this.column角色 = base.Columns["角色"];
                this.column仓位限制 = base.Columns["仓位限制"];
                this.column亏损限制 = base.Columns["亏损限制"];
                this.column手续费率 = base.Columns["手续费率"];
                this.column允许删除碎股订单 = base.Columns["允许删除碎股订单"];
                this.column分组 = base.Columns["分组"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column用户名 = new global::System.Data.DataColumn("用户名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用户名);
                this.column密码 = new global::System.Data.DataColumn("密码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column密码);
                this.column角色 = new global::System.Data.DataColumn("角色", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column角色);
                this.column仓位限制 = new global::System.Data.DataColumn("仓位限制", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仓位限制);
                this.column亏损限制 = new global::System.Data.DataColumn("亏损限制", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column亏损限制);
                this.column手续费率 = new global::System.Data.DataColumn("手续费率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column手续费率);
                this.column允许删除碎股订单 = new global::System.Data.DataColumn("允许删除碎股订单", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许删除碎股订单);
                this.column分组 = new global::System.Data.DataColumn("分组", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分组);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户Row New平台用户Row() {
                return ((平台用户Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 平台用户Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(平台用户Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.平台用户RowChanged != null)) {
                    this.平台用户RowChanged(this, new 平台用户RowChangeEvent(((平台用户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.平台用户RowChanging != null)) {
                    this.平台用户RowChanging(this, new 平台用户RowChangeEvent(((平台用户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.平台用户RowDeleted != null)) {
                    this.平台用户RowDeleted(this, new 平台用户RowChangeEvent(((平台用户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.平台用户RowDeleting != null)) {
                    this.平台用户RowDeleting(this, new 平台用户RowChangeEvent(((平台用户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove平台用户Row(平台用户Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "平台用户DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAC地址分配DataTable : global::System.Data.TypedTableBase<MAC地址分配Row> {
            
            private global::System.Data.DataColumn column用户名;
            
            private global::System.Data.DataColumn columnMAC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配DataTable() {
                this.TableName = "MAC地址分配";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MAC地址分配DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected MAC地址分配DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 用户名Column {
                get {
                    return this.column用户名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MACColumn {
                get {
                    return this.columnMAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配Row this[int index] {
                get {
                    return ((MAC地址分配Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAC地址分配RowChangeEventHandler MAC地址分配RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAC地址分配RowChangeEventHandler MAC地址分配RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAC地址分配RowChangeEventHandler MAC地址分配RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAC地址分配RowChangeEventHandler MAC地址分配RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddMAC地址分配Row(MAC地址分配Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配Row AddMAC地址分配Row(string 用户名, string MAC) {
                MAC地址分配Row rowMAC地址分配Row = ((MAC地址分配Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        用户名,
                        MAC};
                rowMAC地址分配Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAC地址分配Row);
                return rowMAC地址分配Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MAC地址分配DataTable cln = ((MAC地址分配DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MAC地址分配DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column用户名 = base.Columns["用户名"];
                this.columnMAC = base.Columns["MAC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column用户名 = new global::System.Data.DataColumn("用户名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用户名);
                this.columnMAC = new global::System.Data.DataColumn("MAC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAC);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配Row NewMAC地址分配Row() {
                return ((MAC地址分配Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MAC地址分配Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MAC地址分配Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAC地址分配RowChanged != null)) {
                    this.MAC地址分配RowChanged(this, new MAC地址分配RowChangeEvent(((MAC地址分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAC地址分配RowChanging != null)) {
                    this.MAC地址分配RowChanging(this, new MAC地址分配RowChangeEvent(((MAC地址分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAC地址分配RowDeleted != null)) {
                    this.MAC地址分配RowDeleted(this, new MAC地址分配RowChangeEvent(((MAC地址分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAC地址分配RowDeleting != null)) {
                    this.MAC地址分配RowDeleting(this, new MAC地址分配RowChangeEvent(((MAC地址分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveMAC地址分配Row(MAC地址分配Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAC地址分配DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 风控分配DataTable : global::System.Data.TypedTableBase<风控分配Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column风控员;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配DataTable() {
                this.TableName = "风控分配";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 风控分配DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 风控分配DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 风控员Column {
                get {
                    return this.column风控员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配Row this[int index] {
                get {
                    return ((风控分配Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 风控分配RowChangeEventHandler 风控分配RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 风控分配RowChangeEventHandler 风控分配RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 风控分配RowChangeEventHandler 风控分配RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 风控分配RowChangeEventHandler 风控分配RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add风控分配Row(风控分配Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配Row Add风控分配Row(string 交易员, string 风控员) {
                风控分配Row row风控分配Row = ((风控分配Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        风控员};
                row风控分配Row.ItemArray = columnValuesArray;
                this.Rows.Add(row风控分配Row);
                return row风控分配Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                风控分配DataTable cln = ((风控分配DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 风控分配DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column风控员 = base.Columns["风控员"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column风控员 = new global::System.Data.DataColumn("风控员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column风控员);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配Row New风控分配Row() {
                return ((风控分配Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 风控分配Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(风控分配Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.风控分配RowChanged != null)) {
                    this.风控分配RowChanged(this, new 风控分配RowChangeEvent(((风控分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.风控分配RowChanging != null)) {
                    this.风控分配RowChanging(this, new 风控分配RowChangeEvent(((风控分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.风控分配RowDeleted != null)) {
                    this.风控分配RowDeleted(this, new 风控分配RowChangeEvent(((风控分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.风控分配RowDeleting != null)) {
                    this.风控分配RowDeleting(this, new 风控分配RowChangeEvent(((风控分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove风控分配Row(风控分配Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "风控分配DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 已平仓订单DataTable : global::System.Data.TypedTableBase<已平仓订单Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column毛利;
            
            private global::System.Data.DataColumn column开仓类别;
            
            private global::System.Data.DataColumn column已开数量;
            
            private global::System.Data.DataColumn column已开金额;
            
            private global::System.Data.DataColumn column开仓价位;
            
            private global::System.Data.DataColumn column平仓类别;
            
            private global::System.Data.DataColumn column已平数量;
            
            private global::System.Data.DataColumn column已平金额;
            
            private global::System.Data.DataColumn column平仓价位;
            
            private global::System.Data.DataColumn column开仓时间;
            
            private global::System.Data.DataColumn column平仓时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单DataTable() {
                this.TableName = "已平仓订单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已平仓订单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 已平仓订单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 毛利Column {
                get {
                    return this.column毛利;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓类别Column {
                get {
                    return this.column开仓类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已开数量Column {
                get {
                    return this.column已开数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已开金额Column {
                get {
                    return this.column已开金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓价位Column {
                get {
                    return this.column开仓价位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓类别Column {
                get {
                    return this.column平仓类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已平数量Column {
                get {
                    return this.column已平数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 已平金额Column {
                get {
                    return this.column已平金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓价位Column {
                get {
                    return this.column平仓价位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 开仓时间Column {
                get {
                    return this.column开仓时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 平仓时间Column {
                get {
                    return this.column平仓时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单Row this[int index] {
                get {
                    return ((已平仓订单Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已平仓订单RowChangeEventHandler 已平仓订单RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已平仓订单RowChangeEventHandler 已平仓订单RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已平仓订单RowChangeEventHandler 已平仓订单RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 已平仓订单RowChangeEventHandler 已平仓订单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add已平仓订单Row(已平仓订单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单Row Add已平仓订单Row(string 交易员, string 组合号, string 证券代码, string 证券名称, decimal 毛利, int 开仓类别, decimal 已开数量, decimal 已开金额, decimal 开仓价位, int 平仓类别, decimal 已平数量, decimal 已平金额, decimal 平仓价位, System.DateTime 开仓时间, System.DateTime 平仓时间) {
                已平仓订单Row row已平仓订单Row = ((已平仓订单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        毛利,
                        开仓类别,
                        已开数量,
                        已开金额,
                        开仓价位,
                        平仓类别,
                        已平数量,
                        已平金额,
                        平仓价位,
                        开仓时间,
                        平仓时间};
                row已平仓订单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row已平仓订单Row);
                return row已平仓订单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                已平仓订单DataTable cln = ((已平仓订单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 已平仓订单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column毛利 = base.Columns["毛利"];
                this.column开仓类别 = base.Columns["开仓类别"];
                this.column已开数量 = base.Columns["已开数量"];
                this.column已开金额 = base.Columns["已开金额"];
                this.column开仓价位 = base.Columns["开仓价位"];
                this.column平仓类别 = base.Columns["平仓类别"];
                this.column已平数量 = base.Columns["已平数量"];
                this.column已平金额 = base.Columns["已平金额"];
                this.column平仓价位 = base.Columns["平仓价位"];
                this.column开仓时间 = base.Columns["开仓时间"];
                this.column平仓时间 = base.Columns["平仓时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column毛利 = new global::System.Data.DataColumn("毛利", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毛利);
                this.column开仓类别 = new global::System.Data.DataColumn("开仓类别", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓类别);
                this.column已开数量 = new global::System.Data.DataColumn("已开数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已开数量);
                this.column已开金额 = new global::System.Data.DataColumn("已开金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已开金额);
                this.column开仓价位 = new global::System.Data.DataColumn("开仓价位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓价位);
                this.column平仓类别 = new global::System.Data.DataColumn("平仓类别", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓类别);
                this.column已平数量 = new global::System.Data.DataColumn("已平数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已平数量);
                this.column已平金额 = new global::System.Data.DataColumn("已平金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column已平金额);
                this.column平仓价位 = new global::System.Data.DataColumn("平仓价位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓价位);
                this.column开仓时间 = new global::System.Data.DataColumn("开仓时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开仓时间);
                this.column平仓时间 = new global::System.Data.DataColumn("平仓时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column平仓时间);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单Row New已平仓订单Row() {
                return ((已平仓订单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 已平仓订单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(已平仓订单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.已平仓订单RowChanged != null)) {
                    this.已平仓订单RowChanged(this, new 已平仓订单RowChangeEvent(((已平仓订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.已平仓订单RowChanging != null)) {
                    this.已平仓订单RowChanging(this, new 已平仓订单RowChangeEvent(((已平仓订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.已平仓订单RowDeleted != null)) {
                    this.已平仓订单RowDeleted(this, new 已平仓订单RowChangeEvent(((已平仓订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.已平仓订单RowDeleting != null)) {
                    this.已平仓订单RowDeleting(this, new 已平仓订单RowChangeEvent(((已平仓订单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove已平仓订单Row(已平仓订单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "已平仓订单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 交易日志DataTable : global::System.Data.TypedTableBase<交易日志Row> {
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column委托编号;
            
            private global::System.Data.DataColumn column信息;
            
            private global::System.Data.DataColumn column委托数量;
            
            private global::System.Data.DataColumn column委托价格;
            
            private global::System.Data.DataColumn column买卖方向;
            
            private global::System.Data.DataColumn column时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志DataTable() {
                this.TableName = "交易日志";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 交易日志DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 交易日志DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托编号Column {
                get {
                    return this.column委托编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 信息Column {
                get {
                    return this.column信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托数量Column {
                get {
                    return this.column委托数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托价格Column {
                get {
                    return this.column委托价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买卖方向Column {
                get {
                    return this.column买卖方向;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 时间Column {
                get {
                    return this.column时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志Row this[int index] {
                get {
                    return ((交易日志Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易日志RowChangeEventHandler 交易日志RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易日志RowChangeEventHandler 交易日志RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易日志RowChangeEventHandler 交易日志RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易日志RowChangeEventHandler 交易日志RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add交易日志Row(交易日志Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志Row Add交易日志Row(System.DateTime 日期, string 交易员, string 组合号, string 证券代码, string 证券名称, string 委托编号, string 信息, decimal 委托数量, decimal 委托价格, int 买卖方向, string 时间) {
                交易日志Row row交易日志Row = ((交易日志Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        日期,
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        委托编号,
                        信息,
                        委托数量,
                        委托价格,
                        买卖方向,
                        时间};
                row交易日志Row.ItemArray = columnValuesArray;
                this.Rows.Add(row交易日志Row);
                return row交易日志Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                交易日志DataTable cln = ((交易日志DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 交易日志DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column日期 = base.Columns["日期"];
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column委托编号 = base.Columns["委托编号"];
                this.column信息 = base.Columns["信息"];
                this.column委托数量 = base.Columns["委托数量"];
                this.column委托价格 = base.Columns["委托价格"];
                this.column买卖方向 = base.Columns["买卖方向"];
                this.column时间 = base.Columns["时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column委托编号 = new global::System.Data.DataColumn("委托编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托编号);
                this.column信息 = new global::System.Data.DataColumn("信息", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column信息);
                this.column委托数量 = new global::System.Data.DataColumn("委托数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托数量);
                this.column委托价格 = new global::System.Data.DataColumn("委托价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托价格);
                this.column买卖方向 = new global::System.Data.DataColumn("买卖方向", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买卖方向);
                this.column时间 = new global::System.Data.DataColumn("时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column时间);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志Row New交易日志Row() {
                return ((交易日志Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 交易日志Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(交易日志Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.交易日志RowChanged != null)) {
                    this.交易日志RowChanged(this, new 交易日志RowChangeEvent(((交易日志Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.交易日志RowChanging != null)) {
                    this.交易日志RowChanging(this, new 交易日志RowChangeEvent(((交易日志Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.交易日志RowDeleted != null)) {
                    this.交易日志RowDeleted(this, new 交易日志RowChangeEvent(((交易日志Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.交易日志RowDeleting != null)) {
                    this.交易日志RowDeleting(this, new 交易日志RowChangeEvent(((交易日志Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove交易日志Row(交易日志Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "交易日志DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 额度分配DataTable : global::System.Data.TypedTableBase<额度分配Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column市场;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column拼音缩写;
            
            private global::System.Data.DataColumn column买模式;
            
            private global::System.Data.DataColumn column卖模式;
            
            private global::System.Data.DataColumn column交易额度;
            
            private global::System.Data.DataColumn column手续费率;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配DataTable() {
                this.TableName = "额度分配";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 额度分配DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 额度分配DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 市场Column {
                get {
                    return this.column市场;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 拼音缩写Column {
                get {
                    return this.column拼音缩写;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买模式Column {
                get {
                    return this.column买模式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 卖模式Column {
                get {
                    return this.column卖模式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易额度Column {
                get {
                    return this.column交易额度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 手续费率Column {
                get {
                    return this.column手续费率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配Row this[int index] {
                get {
                    return ((额度分配Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 额度分配RowChangeEventHandler 额度分配RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 额度分配RowChangeEventHandler 额度分配RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 额度分配RowChangeEventHandler 额度分配RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 额度分配RowChangeEventHandler 额度分配RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add额度分配Row(额度分配Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配Row Add额度分配Row(string 交易员, string 证券代码, string 组合号, byte 市场, string 证券名称, string 拼音缩写, int 买模式, int 卖模式, decimal 交易额度, decimal 手续费率) {
                额度分配Row row额度分配Row = ((额度分配Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        证券代码,
                        组合号,
                        市场,
                        证券名称,
                        拼音缩写,
                        买模式,
                        卖模式,
                        交易额度,
                        手续费率};
                row额度分配Row.ItemArray = columnValuesArray;
                this.Rows.Add(row额度分配Row);
                return row额度分配Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                额度分配DataTable cln = ((额度分配DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 额度分配DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column组合号 = base.Columns["组合号"];
                this.column市场 = base.Columns["市场"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column拼音缩写 = base.Columns["拼音缩写"];
                this.column买模式 = base.Columns["买模式"];
                this.column卖模式 = base.Columns["卖模式"];
                this.column交易额度 = base.Columns["交易额度"];
                this.column手续费率 = base.Columns["手续费率"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column市场 = new global::System.Data.DataColumn("市场", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column市场);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column拼音缩写 = new global::System.Data.DataColumn("拼音缩写", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column拼音缩写);
                this.column买模式 = new global::System.Data.DataColumn("买模式", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买模式);
                this.column卖模式 = new global::System.Data.DataColumn("卖模式", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卖模式);
                this.column交易额度 = new global::System.Data.DataColumn("交易额度", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易额度);
                this.column手续费率 = new global::System.Data.DataColumn("手续费率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column手续费率);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配Row New额度分配Row() {
                return ((额度分配Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 额度分配Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(额度分配Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.额度分配RowChanged != null)) {
                    this.额度分配RowChanged(this, new 额度分配RowChangeEvent(((额度分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.额度分配RowChanging != null)) {
                    this.额度分配RowChanging(this, new 额度分配RowChangeEvent(((额度分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.额度分配RowDeleted != null)) {
                    this.额度分配RowDeleted(this, new 额度分配RowChangeEvent(((额度分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.额度分配RowDeleting != null)) {
                    this.额度分配RowDeleting(this, new 额度分配RowChangeEvent(((额度分配Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove额度分配Row(额度分配Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "额度分配DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 电子币帐户DataTable : global::System.Data.TypedTableBase<电子币帐户Row> {
            
            private global::System.Data.DataColumn column名称;
            
            private global::System.Data.DataColumn column启用;
            
            private global::System.Data.DataColumn column交易平台;
            
            private global::System.Data.DataColumn column登录帐号;
            
            private global::System.Data.DataColumn columnApiKey;
            
            private global::System.Data.DataColumn columnSecretKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户DataTable() {
                this.TableName = "电子币帐户";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 电子币帐户DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 电子币帐户DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 名称Column {
                get {
                    return this.column名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 启用Column {
                get {
                    return this.column启用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易平台Column {
                get {
                    return this.column交易平台;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 登录帐号Column {
                get {
                    return this.column登录帐号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ApiKeyColumn {
                get {
                    return this.columnApiKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SecretKeyColumn {
                get {
                    return this.columnSecretKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户Row this[int index] {
                get {
                    return ((电子币帐户Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 电子币帐户RowChangeEventHandler 电子币帐户RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 电子币帐户RowChangeEventHandler 电子币帐户RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 电子币帐户RowChangeEventHandler 电子币帐户RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 电子币帐户RowChangeEventHandler 电子币帐户RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add电子币帐户Row(电子币帐户Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户Row Add电子币帐户Row(string 名称, bool 启用, string 交易平台, string 登录帐号, string ApiKey, string SecretKey) {
                电子币帐户Row row电子币帐户Row = ((电子币帐户Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        名称,
                        启用,
                        交易平台,
                        登录帐号,
                        ApiKey,
                        SecretKey};
                row电子币帐户Row.ItemArray = columnValuesArray;
                this.Rows.Add(row电子币帐户Row);
                return row电子币帐户Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                电子币帐户DataTable cln = ((电子币帐户DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 电子币帐户DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column名称 = base.Columns["名称"];
                this.column启用 = base.Columns["启用"];
                this.column交易平台 = base.Columns["交易平台"];
                this.column登录帐号 = base.Columns["登录帐号"];
                this.columnApiKey = base.Columns["ApiKey"];
                this.columnSecretKey = base.Columns["SecretKey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column名称 = new global::System.Data.DataColumn("名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column名称);
                this.column启用 = new global::System.Data.DataColumn("启用", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column启用);
                this.column交易平台 = new global::System.Data.DataColumn("交易平台", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易平台);
                this.column登录帐号 = new global::System.Data.DataColumn("登录帐号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登录帐号);
                this.columnApiKey = new global::System.Data.DataColumn("ApiKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApiKey);
                this.columnSecretKey = new global::System.Data.DataColumn("SecretKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecretKey);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户Row New电子币帐户Row() {
                return ((电子币帐户Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 电子币帐户Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(电子币帐户Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.电子币帐户RowChanged != null)) {
                    this.电子币帐户RowChanged(this, new 电子币帐户RowChangeEvent(((电子币帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.电子币帐户RowChanging != null)) {
                    this.电子币帐户RowChanging(this, new 电子币帐户RowChangeEvent(((电子币帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.电子币帐户RowDeleted != null)) {
                    this.电子币帐户RowDeleted(this, new 电子币帐户RowChangeEvent(((电子币帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.电子币帐户RowDeleting != null)) {
                    this.电子币帐户RowDeleting(this, new 电子币帐户RowChangeEvent(((电子币帐户Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove电子币帐户Row(电子币帐户Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "电子币帐户DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 可用资金DataTable : global::System.Data.TypedTableBase<可用资金Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column币种;
            
            private global::System.Data.DataColumn column可用数量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金DataTable() {
                this.TableName = "可用资金";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 可用资金DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 可用资金DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 币种Column {
                get {
                    return this.column币种;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 可用数量Column {
                get {
                    return this.column可用数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金Row this[int index] {
                get {
                    return ((可用资金Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 可用资金RowChangeEventHandler 可用资金RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 可用资金RowChangeEventHandler 可用资金RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 可用资金RowChangeEventHandler 可用资金RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 可用资金RowChangeEventHandler 可用资金RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add可用资金Row(可用资金Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金Row Add可用资金Row(string 交易员, string 币种, decimal 可用数量) {
                可用资金Row row可用资金Row = ((可用资金Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        币种,
                        可用数量};
                row可用资金Row.ItemArray = columnValuesArray;
                this.Rows.Add(row可用资金Row);
                return row可用资金Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                可用资金DataTable cln = ((可用资金DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 可用资金DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column币种 = base.Columns["币种"];
                this.column可用数量 = base.Columns["可用数量"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column币种 = new global::System.Data.DataColumn("币种", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column币种);
                this.column可用数量 = new global::System.Data.DataColumn("可用数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column可用数量);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金Row New可用资金Row() {
                return ((可用资金Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 可用资金Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(可用资金Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.可用资金RowChanged != null)) {
                    this.可用资金RowChanged(this, new 可用资金RowChangeEvent(((可用资金Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.可用资金RowChanging != null)) {
                    this.可用资金RowChanging(this, new 可用资金RowChangeEvent(((可用资金Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.可用资金RowDeleted != null)) {
                    this.可用资金RowDeleted(this, new 可用资金RowChangeEvent(((可用资金Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.可用资金RowDeleting != null)) {
                    this.可用资金RowDeleting(this, new 可用资金RowChangeEvent(((可用资金Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove可用资金Row(可用资金Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "可用资金DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 交易账户关联DataTable : global::System.Data.TypedTableBase<交易账户关联Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column电子币账户;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联DataTable() {
                this.TableName = "交易账户关联";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 交易账户关联DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 交易账户关联DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 电子币账户Column {
                get {
                    return this.column电子币账户;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联Row this[int index] {
                get {
                    return ((交易账户关联Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易账户关联RowChangeEventHandler 交易账户关联RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易账户关联RowChangeEventHandler 交易账户关联RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易账户关联RowChangeEventHandler 交易账户关联RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 交易账户关联RowChangeEventHandler 交易账户关联RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add交易账户关联Row(交易账户关联Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联Row Add交易账户关联Row(string 交易员, string 电子币账户) {
                交易账户关联Row row交易账户关联Row = ((交易账户关联Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        电子币账户};
                row交易账户关联Row.ItemArray = columnValuesArray;
                this.Rows.Add(row交易账户关联Row);
                return row交易账户关联Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                交易账户关联DataTable cln = ((交易账户关联DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 交易账户关联DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column电子币账户 = base.Columns["电子币账户"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column电子币账户 = new global::System.Data.DataColumn("电子币账户", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电子币账户);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联Row New交易账户关联Row() {
                return ((交易账户关联Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 交易账户关联Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(交易账户关联Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.交易账户关联RowChanged != null)) {
                    this.交易账户关联RowChanged(this, new 交易账户关联RowChangeEvent(((交易账户关联Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.交易账户关联RowChanging != null)) {
                    this.交易账户关联RowChanging(this, new 交易账户关联RowChangeEvent(((交易账户关联Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.交易账户关联RowDeleted != null)) {
                    this.交易账户关联RowDeleted(this, new 交易账户关联RowChangeEvent(((交易账户关联Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.交易账户关联RowDeleting != null)) {
                    this.交易账户关联RowDeleting(this, new 交易账户关联RowChangeEvent(((交易账户关联Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove交易账户关联Row(交易账户关联Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DbDataSet ds = new DbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "交易账户关联DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 已发委托Row : global::System.Data.DataRow {
            
            private 已发委托DataTable table已发委托;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已发委托Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table已发委托 = ((已发委托DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table已发委托.日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托编号 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.委托编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“委托编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.委托编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 状态说明 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.状态说明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“状态说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.状态说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte 市场代码 {
                get {
                    try {
                        return ((byte)(this[this.table已发委托.市场代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“市场代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.市场代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table已发委托.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 买卖方向 {
                get {
                    try {
                        return ((int)(this[this.table已发委托.买卖方向Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“买卖方向”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.买卖方向Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交价格 {
                get {
                    try {
                        return ((decimal)(this[this.table已发委托.成交价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“成交价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.成交价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交数量 {
                get {
                    try {
                        return ((decimal)(this[this.table已发委托.成交数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“成交数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.成交数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托价格 {
                get {
                    try {
                        return ((decimal)(this[this.table已发委托.委托价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“委托价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.委托价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托数量 {
                get {
                    try {
                        return ((decimal)(this[this.table已发委托.委托数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“委托数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.委托数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 撤单数量 {
                get {
                    try {
                        return ((decimal)(this[this.table已发委托.撤单数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已发委托”中列“撤单数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已发委托.撤单数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is日期Null() {
                return this.IsNull(this.table已发委托.日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set日期Null() {
                this[this.table已发委托.日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table已发委托.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table已发委托.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托编号Null() {
                return this.IsNull(this.table已发委托.委托编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托编号Null() {
                this[this.table已发委托.委托编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table已发委托.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table已发委托.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is状态说明Null() {
                return this.IsNull(this.table已发委托.状态说明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set状态说明Null() {
                this[this.table已发委托.状态说明Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is市场代码Null() {
                return this.IsNull(this.table已发委托.市场代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set市场代码Null() {
                this[this.table已发委托.市场代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table已发委托.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table已发委托.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table已发委托.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table已发委托.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买卖方向Null() {
                return this.IsNull(this.table已发委托.买卖方向Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买卖方向Null() {
                this[this.table已发委托.买卖方向Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交价格Null() {
                return this.IsNull(this.table已发委托.成交价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交价格Null() {
                this[this.table已发委托.成交价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交数量Null() {
                return this.IsNull(this.table已发委托.成交数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交数量Null() {
                this[this.table已发委托.成交数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托价格Null() {
                return this.IsNull(this.table已发委托.委托价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托价格Null() {
                this[this.table已发委托.委托价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托数量Null() {
                return this.IsNull(this.table已发委托.委托数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托数量Null() {
                this[this.table已发委托.委托数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is撤单数量Null() {
                return this.IsNull(this.table已发委托.撤单数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set撤单数量Null() {
                this[this.table已发委托.撤单数量Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 已处理成交Row : global::System.Data.DataRow {
            
            private 已处理成交DataTable table已处理成交;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已处理成交Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table已处理成交 = ((已处理成交DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table已处理成交.日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已处理成交”中列“日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已处理成交.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table已处理成交.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已处理成交”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已处理成交.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托编号 {
                get {
                    try {
                        return ((string)(this[this.table已处理成交.委托编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已处理成交”中列“委托编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已处理成交.委托编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 成交编号 {
                get {
                    try {
                        return ((string)(this[this.table已处理成交.成交编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已处理成交”中列“成交编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已处理成交.成交编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is日期Null() {
                return this.IsNull(this.table已处理成交.日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set日期Null() {
                this[this.table已处理成交.日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table已处理成交.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table已处理成交.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托编号Null() {
                return this.IsNull(this.table已处理成交.委托编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托编号Null() {
                this[this.table已处理成交.委托编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交编号Null() {
                return this.IsNull(this.table已处理成交.成交编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交编号Null() {
                this[this.table已处理成交.成交编号Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 券商帐户Row : global::System.Data.DataRow {
            
            private 券商帐户DataTable table券商帐户;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 券商帐户Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table券商帐户 = ((券商帐户DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 名称 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool 启用 {
                get {
                    try {
                        return ((bool)(this[this.table券商帐户.启用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“启用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.启用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 券商 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.券商Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“券商”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.券商Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 类型 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易服务器 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.交易服务器Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“交易服务器”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.交易服务器Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 版本号 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.版本号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“版本号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.版本号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short 营业部代码 {
                get {
                    try {
                        return ((short)(this[this.table券商帐户.营业部代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“营业部代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.营业部代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 登录帐号 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.登录帐号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“登录帐号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.登录帐号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易帐号 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.交易帐号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“交易帐号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.交易帐号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易密码 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.交易密码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“交易密码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.交易密码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 通讯密码 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.通讯密码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“通讯密码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.通讯密码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 上海股东代码 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.上海股东代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“上海股东代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.上海股东代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 深圳股东代码 {
                get {
                    try {
                        return ((string)(this[this.table券商帐户.深圳股东代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“深圳股东代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.深圳股东代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 查询间隔时间 {
                get {
                    try {
                        return ((int)(this[this.table券商帐户.查询间隔时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“券商帐户”中列“查询间隔时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table券商帐户.查询间隔时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is名称Null() {
                return this.IsNull(this.table券商帐户.名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set名称Null() {
                this[this.table券商帐户.名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is启用Null() {
                return this.IsNull(this.table券商帐户.启用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set启用Null() {
                this[this.table券商帐户.启用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is券商Null() {
                return this.IsNull(this.table券商帐户.券商Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set券商Null() {
                this[this.table券商帐户.券商Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is类型Null() {
                return this.IsNull(this.table券商帐户.类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set类型Null() {
                this[this.table券商帐户.类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易服务器Null() {
                return this.IsNull(this.table券商帐户.交易服务器Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易服务器Null() {
                this[this.table券商帐户.交易服务器Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is版本号Null() {
                return this.IsNull(this.table券商帐户.版本号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set版本号Null() {
                this[this.table券商帐户.版本号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is营业部代码Null() {
                return this.IsNull(this.table券商帐户.营业部代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set营业部代码Null() {
                this[this.table券商帐户.营业部代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is登录帐号Null() {
                return this.IsNull(this.table券商帐户.登录帐号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set登录帐号Null() {
                this[this.table券商帐户.登录帐号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易帐号Null() {
                return this.IsNull(this.table券商帐户.交易帐号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易帐号Null() {
                this[this.table券商帐户.交易帐号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易密码Null() {
                return this.IsNull(this.table券商帐户.交易密码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易密码Null() {
                this[this.table券商帐户.交易密码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is通讯密码Null() {
                return this.IsNull(this.table券商帐户.通讯密码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set通讯密码Null() {
                this[this.table券商帐户.通讯密码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is上海股东代码Null() {
                return this.IsNull(this.table券商帐户.上海股东代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set上海股东代码Null() {
                this[this.table券商帐户.上海股东代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is深圳股东代码Null() {
                return this.IsNull(this.table券商帐户.深圳股东代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set深圳股东代码Null() {
                this[this.table券商帐户.深圳股东代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is查询间隔时间Null() {
                return this.IsNull(this.table券商帐户.查询间隔时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set查询间隔时间Null() {
                this[this.table券商帐户.查询间隔时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 订单Row : global::System.Data.DataRow {
            
            private 订单DataTable table订单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 订单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table订单 = ((订单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table订单.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table订单.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table订单.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table订单.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 开仓类别 {
                get {
                    try {
                        return ((int)(this[this.table订单.开仓类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“开仓类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.开仓类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已开数量 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.已开数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“已开数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.已开数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已开金额 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.已开金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“已开金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.已开金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 浮动盈亏 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.浮动盈亏Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“浮动盈亏”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.浮动盈亏Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 开仓价位 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.开仓价位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“开仓价位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.开仓价位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 当前价位 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.当前价位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“当前价位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.当前价位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 开仓时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table订单.开仓时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“开仓时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.开仓时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 平仓时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table订单.平仓时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“平仓时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.平仓时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 平仓类别 {
                get {
                    try {
                        return ((int)(this[this.table订单.平仓类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“平仓类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.平仓类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已平数量 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.已平数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“已平数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.已平数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已平金额 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.已平金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“已平金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.已平金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 平仓价位 {
                get {
                    try {
                        return ((decimal)(this[this.table订单.平仓价位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“平仓价位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.平仓价位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte 市场代码 {
                get {
                    try {
                        return ((byte)(this[this.table订单.市场代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“订单”中列“市场代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table订单.市场代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table订单.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table订单.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table订单.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table订单.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table订单.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table订单.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table订单.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table订单.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓类别Null() {
                return this.IsNull(this.table订单.开仓类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓类别Null() {
                this[this.table订单.开仓类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已开数量Null() {
                return this.IsNull(this.table订单.已开数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已开数量Null() {
                this[this.table订单.已开数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已开金额Null() {
                return this.IsNull(this.table订单.已开金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已开金额Null() {
                this[this.table订单.已开金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is浮动盈亏Null() {
                return this.IsNull(this.table订单.浮动盈亏Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set浮动盈亏Null() {
                this[this.table订单.浮动盈亏Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓价位Null() {
                return this.IsNull(this.table订单.开仓价位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓价位Null() {
                this[this.table订单.开仓价位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is当前价位Null() {
                return this.IsNull(this.table订单.当前价位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set当前价位Null() {
                this[this.table订单.当前价位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓时间Null() {
                return this.IsNull(this.table订单.开仓时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓时间Null() {
                this[this.table订单.开仓时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓时间Null() {
                return this.IsNull(this.table订单.平仓时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓时间Null() {
                this[this.table订单.平仓时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓类别Null() {
                return this.IsNull(this.table订单.平仓类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓类别Null() {
                this[this.table订单.平仓类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已平数量Null() {
                return this.IsNull(this.table订单.已平数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已平数量Null() {
                this[this.table订单.已平数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已平金额Null() {
                return this.IsNull(this.table订单.已平金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已平金额Null() {
                this[this.table订单.已平金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓价位Null() {
                return this.IsNull(this.table订单.平仓价位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓价位Null() {
                this[this.table订单.平仓价位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is市场代码Null() {
                return this.IsNull(this.table订单.市场代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set市场代码Null() {
                this[this.table订单.市场代码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 平台用户Row : global::System.Data.DataRow {
            
            private 平台用户DataTable table平台用户;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 平台用户Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table平台用户 = ((平台用户DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 用户名 {
                get {
                    try {
                        return ((string)(this[this.table平台用户.用户名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“用户名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.用户名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 密码 {
                get {
                    try {
                        return ((string)(this[this.table平台用户.密码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“密码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.密码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 角色 {
                get {
                    try {
                        return ((int)(this[this.table平台用户.角色Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“角色”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.角色Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 仓位限制 {
                get {
                    try {
                        return ((decimal)(this[this.table平台用户.仓位限制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“仓位限制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.仓位限制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 亏损限制 {
                get {
                    try {
                        return ((decimal)(this[this.table平台用户.亏损限制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“亏损限制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.亏损限制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 手续费率 {
                get {
                    try {
                        return ((decimal)(this[this.table平台用户.手续费率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“手续费率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.手续费率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool 允许删除碎股订单 {
                get {
                    try {
                        return ((bool)(this[this.table平台用户.允许删除碎股订单Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“允许删除碎股订单”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.允许删除碎股订单Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 分组 {
                get {
                    try {
                        return ((int)(this[this.table平台用户.分组Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“平台用户”中列“分组”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table平台用户.分组Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is用户名Null() {
                return this.IsNull(this.table平台用户.用户名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set用户名Null() {
                this[this.table平台用户.用户名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is密码Null() {
                return this.IsNull(this.table平台用户.密码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set密码Null() {
                this[this.table平台用户.密码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is角色Null() {
                return this.IsNull(this.table平台用户.角色Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set角色Null() {
                this[this.table平台用户.角色Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is仓位限制Null() {
                return this.IsNull(this.table平台用户.仓位限制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set仓位限制Null() {
                this[this.table平台用户.仓位限制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is亏损限制Null() {
                return this.IsNull(this.table平台用户.亏损限制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set亏损限制Null() {
                this[this.table平台用户.亏损限制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is手续费率Null() {
                return this.IsNull(this.table平台用户.手续费率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set手续费率Null() {
                this[this.table平台用户.手续费率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is允许删除碎股订单Null() {
                return this.IsNull(this.table平台用户.允许删除碎股订单Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set允许删除碎股订单Null() {
                this[this.table平台用户.允许删除碎股订单Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is分组Null() {
                return this.IsNull(this.table平台用户.分组Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set分组Null() {
                this[this.table平台用户.分组Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MAC地址分配Row : global::System.Data.DataRow {
            
            private MAC地址分配DataTable tableMAC地址分配;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MAC地址分配Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAC地址分配 = ((MAC地址分配DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 用户名 {
                get {
                    try {
                        return ((string)(this[this.tableMAC地址分配.用户名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MAC地址分配”中列“用户名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMAC地址分配.用户名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MAC {
                get {
                    try {
                        return ((string)(this[this.tableMAC地址分配.MACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MAC地址分配”中列“MAC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMAC地址分配.MACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is用户名Null() {
                return this.IsNull(this.tableMAC地址分配.用户名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set用户名Null() {
                this[this.tableMAC地址分配.用户名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMACNull() {
                return this.IsNull(this.tableMAC地址分配.MACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMACNull() {
                this[this.tableMAC地址分配.MACColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 风控分配Row : global::System.Data.DataRow {
            
            private 风控分配DataTable table风控分配;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 风控分配Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table风控分配 = ((风控分配DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table风控分配.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“风控分配”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table风控分配.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 风控员 {
                get {
                    try {
                        return ((string)(this[this.table风控分配.风控员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“风控分配”中列“风控员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table风控分配.风控员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table风控分配.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table风控分配.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is风控员Null() {
                return this.IsNull(this.table风控分配.风控员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set风控员Null() {
                this[this.table风控分配.风控员Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 已平仓订单Row : global::System.Data.DataRow {
            
            private 已平仓订单DataTable table已平仓订单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 已平仓订单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table已平仓订单 = ((已平仓订单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table已平仓订单.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table已平仓订单.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table已平仓订单.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table已平仓订单.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 毛利 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.毛利Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“毛利”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.毛利Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 开仓类别 {
                get {
                    try {
                        return ((int)(this[this.table已平仓订单.开仓类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“开仓类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.开仓类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已开数量 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.已开数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“已开数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.已开数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已开金额 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.已开金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“已开金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.已开金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 开仓价位 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.开仓价位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“开仓价位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.开仓价位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 平仓类别 {
                get {
                    try {
                        return ((int)(this[this.table已平仓订单.平仓类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“平仓类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.平仓类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已平数量 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.已平数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“已平数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.已平数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 已平金额 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.已平金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“已平金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.已平金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 平仓价位 {
                get {
                    try {
                        return ((decimal)(this[this.table已平仓订单.平仓价位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“平仓价位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.平仓价位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 开仓时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table已平仓订单.开仓时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“开仓时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.开仓时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 平仓时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table已平仓订单.平仓时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“已平仓订单”中列“平仓时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table已平仓订单.平仓时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table已平仓订单.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table已平仓订单.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table已平仓订单.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table已平仓订单.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table已平仓订单.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table已平仓订单.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table已平仓订单.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table已平仓订单.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is毛利Null() {
                return this.IsNull(this.table已平仓订单.毛利Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set毛利Null() {
                this[this.table已平仓订单.毛利Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓类别Null() {
                return this.IsNull(this.table已平仓订单.开仓类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓类别Null() {
                this[this.table已平仓订单.开仓类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已开数量Null() {
                return this.IsNull(this.table已平仓订单.已开数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已开数量Null() {
                this[this.table已平仓订单.已开数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已开金额Null() {
                return this.IsNull(this.table已平仓订单.已开金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已开金额Null() {
                this[this.table已平仓订单.已开金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓价位Null() {
                return this.IsNull(this.table已平仓订单.开仓价位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓价位Null() {
                this[this.table已平仓订单.开仓价位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓类别Null() {
                return this.IsNull(this.table已平仓订单.平仓类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓类别Null() {
                this[this.table已平仓订单.平仓类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已平数量Null() {
                return this.IsNull(this.table已平仓订单.已平数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已平数量Null() {
                this[this.table已平仓订单.已平数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is已平金额Null() {
                return this.IsNull(this.table已平仓订单.已平金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set已平金额Null() {
                this[this.table已平仓订单.已平金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓价位Null() {
                return this.IsNull(this.table已平仓订单.平仓价位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓价位Null() {
                this[this.table已平仓订单.平仓价位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is开仓时间Null() {
                return this.IsNull(this.table已平仓订单.开仓时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set开仓时间Null() {
                this[this.table已平仓订单.开仓时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is平仓时间Null() {
                return this.IsNull(this.table已平仓订单.平仓时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set平仓时间Null() {
                this[this.table已平仓订单.平仓时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 交易日志Row : global::System.Data.DataRow {
            
            private 交易日志DataTable table交易日志;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 交易日志Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table交易日志 = ((交易日志DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime 日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table交易日志.日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托编号 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.委托编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“委托编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.委托编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 信息 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托数量 {
                get {
                    try {
                        return ((decimal)(this[this.table交易日志.委托数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“委托数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.委托数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托价格 {
                get {
                    try {
                        return ((decimal)(this[this.table交易日志.委托价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“委托价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.委托价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 买卖方向 {
                get {
                    try {
                        return ((int)(this[this.table交易日志.买卖方向Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“买卖方向”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.买卖方向Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 时间 {
                get {
                    try {
                        return ((string)(this[this.table交易日志.时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易日志”中列“时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易日志.时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is日期Null() {
                return this.IsNull(this.table交易日志.日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set日期Null() {
                this[this.table交易日志.日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table交易日志.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table交易日志.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table交易日志.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table交易日志.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table交易日志.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table交易日志.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table交易日志.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table交易日志.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托编号Null() {
                return this.IsNull(this.table交易日志.委托编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托编号Null() {
                this[this.table交易日志.委托编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is信息Null() {
                return this.IsNull(this.table交易日志.信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set信息Null() {
                this[this.table交易日志.信息Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托数量Null() {
                return this.IsNull(this.table交易日志.委托数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托数量Null() {
                this[this.table交易日志.委托数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托价格Null() {
                return this.IsNull(this.table交易日志.委托价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托价格Null() {
                this[this.table交易日志.委托价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买卖方向Null() {
                return this.IsNull(this.table交易日志.买卖方向Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买卖方向Null() {
                this[this.table交易日志.买卖方向Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is时间Null() {
                return this.IsNull(this.table交易日志.时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set时间Null() {
                this[this.table交易日志.时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 额度分配Row : global::System.Data.DataRow {
            
            private 额度分配DataTable table额度分配;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 额度分配Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table额度分配 = ((额度分配DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table额度分配.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table额度分配.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table额度分配.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte 市场 {
                get {
                    try {
                        return ((byte)(this[this.table额度分配.市场Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“市场”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.市场Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table额度分配.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 拼音缩写 {
                get {
                    try {
                        return ((string)(this[this.table额度分配.拼音缩写Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“拼音缩写”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.拼音缩写Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 买模式 {
                get {
                    try {
                        return ((int)(this[this.table额度分配.买模式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“买模式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.买模式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 卖模式 {
                get {
                    try {
                        return ((int)(this[this.table额度分配.卖模式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“卖模式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.卖模式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 交易额度 {
                get {
                    try {
                        return ((decimal)(this[this.table额度分配.交易额度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“交易额度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.交易额度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 手续费率 {
                get {
                    try {
                        return ((decimal)(this[this.table额度分配.手续费率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“额度分配”中列“手续费率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table额度分配.手续费率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table额度分配.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table额度分配.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table额度分配.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table额度分配.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table额度分配.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table额度分配.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is市场Null() {
                return this.IsNull(this.table额度分配.市场Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set市场Null() {
                this[this.table额度分配.市场Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table额度分配.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table额度分配.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is拼音缩写Null() {
                return this.IsNull(this.table额度分配.拼音缩写Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set拼音缩写Null() {
                this[this.table额度分配.拼音缩写Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买模式Null() {
                return this.IsNull(this.table额度分配.买模式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买模式Null() {
                this[this.table额度分配.买模式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is卖模式Null() {
                return this.IsNull(this.table额度分配.卖模式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set卖模式Null() {
                this[this.table额度分配.卖模式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易额度Null() {
                return this.IsNull(this.table额度分配.交易额度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易额度Null() {
                this[this.table额度分配.交易额度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is手续费率Null() {
                return this.IsNull(this.table额度分配.手续费率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set手续费率Null() {
                this[this.table额度分配.手续费率Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 电子币帐户Row : global::System.Data.DataRow {
            
            private 电子币帐户DataTable table电子币帐户;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 电子币帐户Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table电子币帐户 = ((电子币帐户DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 名称 {
                get {
                    try {
                        return ((string)(this[this.table电子币帐户.名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool 启用 {
                get {
                    try {
                        return ((bool)(this[this.table电子币帐户.启用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“启用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.启用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易平台 {
                get {
                    try {
                        return ((string)(this[this.table电子币帐户.交易平台Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“交易平台”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.交易平台Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 登录帐号 {
                get {
                    try {
                        return ((string)(this[this.table电子币帐户.登录帐号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“登录帐号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.登录帐号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ApiKey {
                get {
                    try {
                        return ((string)(this[this.table电子币帐户.ApiKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“ApiKey”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.ApiKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SecretKey {
                get {
                    try {
                        return ((string)(this[this.table电子币帐户.SecretKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“电子币帐户”中列“SecretKey”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table电子币帐户.SecretKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is名称Null() {
                return this.IsNull(this.table电子币帐户.名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set名称Null() {
                this[this.table电子币帐户.名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is启用Null() {
                return this.IsNull(this.table电子币帐户.启用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set启用Null() {
                this[this.table电子币帐户.启用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易平台Null() {
                return this.IsNull(this.table电子币帐户.交易平台Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易平台Null() {
                this[this.table电子币帐户.交易平台Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is登录帐号Null() {
                return this.IsNull(this.table电子币帐户.登录帐号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set登录帐号Null() {
                this[this.table电子币帐户.登录帐号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsApiKeyNull() {
                return this.IsNull(this.table电子币帐户.ApiKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetApiKeyNull() {
                this[this.table电子币帐户.ApiKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSecretKeyNull() {
                return this.IsNull(this.table电子币帐户.SecretKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSecretKeyNull() {
                this[this.table电子币帐户.SecretKeyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 可用资金Row : global::System.Data.DataRow {
            
            private 可用资金DataTable table可用资金;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 可用资金Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table可用资金 = ((可用资金DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table可用资金.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可用资金”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可用资金.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 币种 {
                get {
                    try {
                        return ((string)(this[this.table可用资金.币种Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可用资金”中列“币种”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可用资金.币种Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 可用数量 {
                get {
                    try {
                        return ((decimal)(this[this.table可用资金.可用数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可用资金”中列“可用数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可用资金.可用数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table可用资金.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table可用资金.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is币种Null() {
                return this.IsNull(this.table可用资金.币种Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set币种Null() {
                this[this.table可用资金.币种Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is可用数量Null() {
                return this.IsNull(this.table可用资金.可用数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set可用数量Null() {
                this[this.table可用资金.可用数量Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 交易账户关联Row : global::System.Data.DataRow {
            
            private 交易账户关联DataTable table交易账户关联;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 交易账户关联Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table交易账户关联 = ((交易账户关联DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table交易账户关联.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易账户关联”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易账户关联.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 电子币账户 {
                get {
                    try {
                        return ((string)(this[this.table交易账户关联.电子币账户Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交易账户关联”中列“电子币账户”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交易账户关联.电子币账户Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table交易账户关联.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table交易账户关联.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is电子币账户Null() {
                return this.IsNull(this.table交易账户关联.电子币账户Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set电子币账户Null() {
                this[this.table交易账户关联.电子币账户Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 已发委托RowChangeEvent : global::System.EventArgs {
            
            private 已发委托Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托RowChangeEvent(已发委托Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已发委托Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 已处理成交RowChangeEvent : global::System.EventArgs {
            
            private 已处理成交Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交RowChangeEvent(已处理成交Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已处理成交Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 券商帐户RowChangeEvent : global::System.EventArgs {
            
            private 券商帐户Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户RowChangeEvent(券商帐户Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 券商帐户Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 订单RowChangeEvent : global::System.EventArgs {
            
            private 订单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单RowChangeEvent(订单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 订单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 平台用户RowChangeEvent : global::System.EventArgs {
            
            private 平台用户Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户RowChangeEvent(平台用户Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 平台用户Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class MAC地址分配RowChangeEvent : global::System.EventArgs {
            
            private MAC地址分配Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配RowChangeEvent(MAC地址分配Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAC地址分配Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 风控分配RowChangeEvent : global::System.EventArgs {
            
            private 风控分配Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配RowChangeEvent(风控分配Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 风控分配Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 已平仓订单RowChangeEvent : global::System.EventArgs {
            
            private 已平仓订单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单RowChangeEvent(已平仓订单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 已平仓订单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 交易日志RowChangeEvent : global::System.EventArgs {
            
            private 交易日志Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志RowChangeEvent(交易日志Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易日志Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 额度分配RowChangeEvent : global::System.EventArgs {
            
            private 额度分配Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配RowChangeEvent(额度分配Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 额度分配Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 电子币帐户RowChangeEvent : global::System.EventArgs {
            
            private 电子币帐户Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户RowChangeEvent(电子币帐户Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 电子币帐户Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 可用资金RowChangeEvent : global::System.EventArgs {
            
            private 可用资金Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金RowChangeEvent(可用资金Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 可用资金Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 交易账户关联RowChangeEvent : global::System.EventArgs {
            
            private 交易账户关联Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联RowChangeEvent(交易账户关联Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 交易账户关联Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query可用资金", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query可用资金Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string coinType;
        
        public Query可用资金Request() {
        }
        
        public Query可用资金Request(string userName, string coinType) {
            this.userName = userName;
            this.coinType = coinType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query可用资金Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query可用资金Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.可用资金DataTable Query可用资金Result;
        
        public Query可用资金Response() {
        }
        
        public Query可用资金Response(DbDataSet.可用资金DataTable Query可用资金Result) {
            this.Query可用资金Result = Query可用资金Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAll可用资金", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAll可用资金Request {
        
        public QueryAll可用资金Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAll可用资金Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAll可用资金Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.可用资金DataTable QueryAll可用资金Result;
        
        public QueryAll可用资金Response() {
        }
        
        public QueryAll可用资金Response(DbDataSet.可用资金DataTable QueryAll可用资金Result) {
            this.QueryAll可用资金Result = QueryAll可用资金Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAccountRelation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddAccountRelationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string trader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string account;
        
        public AddAccountRelationRequest() {
        }
        
        public AddAccountRelationRequest(string trader, string account) {
            this.trader = trader;
            this.account = account;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAccountRelationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddAccountRelationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddAccountRelationResult;
        
        public AddAccountRelationResponse() {
        }
        
        public AddAccountRelationResponse(string AddAccountRelationResult) {
            this.AddAccountRelationResult = AddAccountRelationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAccountRelation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteAccountRelationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string trader;
        
        public DeleteAccountRelationRequest() {
        }
        
        public DeleteAccountRelationRequest(string trader) {
            this.trader = trader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAccountRelationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteAccountRelationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteAccountRelationResult;
        
        public DeleteAccountRelationResponse() {
        }
        
        public DeleteAccountRelationResponse(string DeleteAccountRelationResult) {
            this.DeleteAccountRelationResult = DeleteAccountRelationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAccountRelation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAccountRelationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string trader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string account;
        
        public UpdateAccountRelationRequest() {
        }
        
        public UpdateAccountRelationRequest(string trader, string account) {
            this.trader = trader;
            this.account = account;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAccountRelationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAccountRelationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateAccountRelationResult;
        
        public UpdateAccountRelationResponse() {
        }
        
        public UpdateAccountRelationResponse(string UpdateAccountRelationResult) {
            this.UpdateAccountRelationResult = UpdateAccountRelationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAccountRelation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAccountRelationRequest {
        
        public QueryAccountRelationRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAccountRelationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAccountRelationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.交易账户关联DataTable QueryAccountRelationResult;
        
        public QueryAccountRelationResponse() {
        }
        
        public QueryAccountRelationResponse(DbDataSet.交易账户关联DataTable QueryAccountRelationResult) {
            this.QueryAccountRelationResult = QueryAccountRelationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QuerySingleUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QuerySingleUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientVersion;
        
        public QuerySingleUserRequest() {
        }
        
        public QuerySingleUserRequest(string ClientVersion) {
            this.ClientVersion = ClientVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QuerySingleUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QuerySingleUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QuerySingleUserResult;
        
        public QuerySingleUserResponse() {
        }
        
        public QuerySingleUserResponse(DbDataSet.平台用户DataTable QuerySingleUserResult) {
            this.QuerySingleUserResult = QuerySingleUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Decrypt", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DecryptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string string1;
        
        public DecryptRequest() {
        }
        
        public DecryptRequest(string string1) {
            this.string1 = string1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DecryptResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DecryptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DecryptResult;
        
        public DecryptResponse() {
        }
        
        public DecryptResponse(string DecryptResult) {
            this.DecryptResult = DecryptResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get交易服务器", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get交易服务器Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QS;
        
        public Get交易服务器Request() {
        }
        
        public Get交易服务器Request(string QS) {
            this.QS = QS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get交易服务器Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get交易服务器Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Get交易服务器Result;
        
        public Get交易服务器Response() {
        }
        
        public Get交易服务器Response(string[] Get交易服务器Result) {
            this.Get交易服务器Result = Get交易服务器Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get行情服务器", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get行情服务器Request {
        
        public Get行情服务器Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get行情服务器Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get行情服务器Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Get行情服务器Result;
        
        public Get行情服务器Response() {
        }
        
        public Get行情服务器Response(string[] Get行情服务器Result) {
            this.Get行情服务器Result = Get行情服务器Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataServerIP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDataServerIPRequest {
        
        public GetDataServerIPRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataServerIPResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDataServerIPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetDataServerIPResult;
        
        public GetDataServerIPResponse() {
        }
        
        public GetDataServerIPResponse(string GetDataServerIPResult) {
            this.GetDataServerIPResult = GetDataServerIPResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryClientIP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryClientIPRequest {
        
        public QueryClientIPRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryClientIPResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryClientIPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QueryClientIPResult;
        
        public QueryClientIPResponse() {
        }
        
        public QueryClientIPResponse(string QueryClientIPResult) {
            this.QueryClientIPResult = QueryClientIPResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryUserRequest {
        
        public QueryUserRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QueryUserResult;
        
        public QueryUserResponse() {
        }
        
        public QueryUserResponse(DbDataSet.平台用户DataTable QueryUserResult) {
            this.QueryUserResult = QueryUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetPassword", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResetPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password;
        
        public ResetPasswordRequest() {
        }
        
        public ResetPasswordRequest(string UserName, string Password) {
            this.UserName = UserName;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetPasswordResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResetPasswordResponse {
        
        public ResetPasswordResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum 角色 {
        
        /// <remarks/>
        超级管理员,
        
        /// <remarks/>
        普通管理员,
        
        /// <remarks/>
        超级风控员,
        
        /// <remarks/>
        普通风控员,
        
        /// <remarks/>
        交易员,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum 分组 {
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        XM,
        
        /// <remarks/>
        CQ,
        
        /// <remarks/>
        XA,
        
        /// <remarks/>
        SH,
        
        /// <remarks/>
        T1,
        
        /// <remarks/>
        BY1,
        
        /// <remarks/>
        BY2,
        
        /// <remarks/>
        FK,
        
        /// <remarks/>
        NB,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AASClient.AASServiceReference.角色 Role;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal 仓位限制;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal 亏损限制;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public decimal 手续费率;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public bool 允许删除碎股订单;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public AASClient.AASServiceReference.分组 Region;
        
        public AddUserRequest() {
        }
        
        public AddUserRequest(string UserName, string Password, AASClient.AASServiceReference.角色 Role, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 Region) {
            this.UserName = UserName;
            this.Password = Password;
            this.Role = Role;
            this.仓位限制 = 仓位限制;
            this.亏损限制 = 亏损限制;
            this.手续费率 = 手续费率;
            this.允许删除碎股订单 = 允许删除碎股订单;
            this.Region = Region;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddUserResponse {
        
        public AddUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal 仓位限制;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public decimal 亏损限制;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal 手续费率;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public bool 允许删除碎股订单;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public AASClient.AASServiceReference.分组 分组1;
        
        public UpdateUserRequest() {
        }
        
        public UpdateUserRequest(string UserName, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 分组1) {
            this.UserName = UserName;
            this.仓位限制 = 仓位限制;
            this.亏损限制 = 亏损限制;
            this.手续费率 = 手续费率;
            this.允许删除碎股订单 = 允许删除碎股订单;
            this.分组1 = 分组1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateUserResponse {
        
        public UpdateUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        public DeleteUserRequest() {
        }
        
        public DeleteUserRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteUserResponse {
        
        public DeleteUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryFK", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryFKRequest {
        
        public QueryFKRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryFKResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryFKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QueryFKResult;
        
        public QueryFKResponse() {
        }
        
        public QueryFKResponse(DbDataSet.平台用户DataTable QueryFKResult) {
            this.QueryFKResult = QueryFKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyBelongFK", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyBelongFKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FKUserName;
        
        public QueryJyBelongFKRequest() {
        }
        
        public QueryJyBelongFKRequest(string FKUserName) {
            this.FKUserName = FKUserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyBelongFKResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyBelongFKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QueryJyBelongFKResult;
        
        public QueryJyBelongFKResponse() {
        }
        
        public QueryJyBelongFKResponse(DbDataSet.平台用户DataTable QueryJyBelongFKResult) {
            this.QueryJyBelongFKResult = QueryJyBelongFKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyNotBelongFK", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyNotBelongFKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FKUserName;
        
        public QueryJyNotBelongFKRequest() {
        }
        
        public QueryJyNotBelongFKRequest(string FKUserName) {
            this.FKUserName = FKUserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyNotBelongFKResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyNotBelongFKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QueryJyNotBelongFKResult;
        
        public QueryJyNotBelongFKResponse() {
        }
        
        public QueryJyNotBelongFKResponse(DbDataSet.平台用户DataTable QueryJyNotBelongFKResult) {
            this.QueryJyNotBelongFKResult = QueryJyNotBelongFKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTraderToRC", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTraderToRCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Traders;
        
        public AddTraderToRCRequest() {
        }
        
        public AddTraderToRCRequest(string RC, string[] Traders) {
            this.RC = RC;
            this.Traders = Traders;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTraderToRCResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTraderToRCResponse {
        
        public AddTraderToRCResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTraderFromRC", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTraderFromRCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Traders;
        
        public DeleteTraderFromRCRequest() {
        }
        
        public DeleteTraderFromRCRequest(string RC, string[] Traders) {
            this.RC = RC;
            this.Traders = Traders;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTraderFromRCResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTraderFromRCResponse {
        
        public DeleteTraderFromRCResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryECoinQsAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryECoinQsAccountRequest {
        
        public QueryECoinQsAccountRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryECoinQsAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryECoinQsAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.电子币帐户DataTable QueryECoinQsAccountResult;
        
        public QueryECoinQsAccountResponse() {
        }
        
        public QueryECoinQsAccountResponse(DbDataSet.电子币帐户DataTable QueryECoinQsAccountResult) {
            this.QueryECoinQsAccountResult = QueryECoinQsAccountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableECoinQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EnableECoinQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool Enabled;
        
        public EnableECoinQSAccountRequest() {
        }
        
        public EnableECoinQSAccountRequest(string Name, bool Enabled) {
            this.Name = Name;
            this.Enabled = Enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableECoinQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EnableECoinQSAccountResponse {
        
        public EnableECoinQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddECoinQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddECoinQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Enabled;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易平台;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 登录帐号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string apiKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string secretKey;
        
        public AddECoinQSAccountRequest() {
        }
        
        public AddECoinQSAccountRequest(bool Enabled, string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            this.Enabled = Enabled;
            this.Name = Name;
            this.交易平台 = 交易平台;
            this.登录帐号 = 登录帐号;
            this.apiKey = apiKey;
            this.secretKey = secretKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddECoinQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddECoinQSAccountResponse {
        
        public AddECoinQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateECoinQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateECoinQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易平台;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 登录帐号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string apiKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string secretKey;
        
        public UpdateECoinQSAccountRequest() {
        }
        
        public UpdateECoinQSAccountRequest(string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            this.Name = Name;
            this.交易平台 = 交易平台;
            this.登录帐号 = 登录帐号;
            this.apiKey = apiKey;
            this.secretKey = secretKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateECoinQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateECoinQSAccountResponse {
        
        public UpdateECoinQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteECoinQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteECoinQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        public DeleteECoinQSAccountRequest() {
        }
        
        public DeleteECoinQSAccountRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteECoinQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteECoinQSAccountResponse {
        
        public DeleteECoinQSAccountResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server.Adapter")]
    public partial class AccounCoin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string assetk__BackingFieldField;
        
        private decimal freek__BackingFieldField;
        
        private decimal lockedk__BackingFieldField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("<Asset>k__BackingField", IsNullable=true, Order=0)]
        public string Assetk__BackingField {
            get {
                return this.assetk__BackingFieldField;
            }
            set {
                this.assetk__BackingFieldField = value;
                this.RaisePropertyChanged("Assetk__BackingField");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("<Free>k__BackingField", Order=1)]
        public decimal Freek__BackingField {
            get {
                return this.freek__BackingFieldField;
            }
            set {
                this.freek__BackingFieldField = value;
                this.RaisePropertyChanged("Freek__BackingField");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("<Locked>k__BackingField", Order=2)]
        public decimal Lockedk__BackingField {
            get {
                return this.lockedk__BackingFieldField;
            }
            set {
                this.lockedk__BackingFieldField = value;
                this.RaisePropertyChanged("Lockedk__BackingField");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public partial class LimitTrader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string traderAccountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string TraderAccount {
            get {
                return this.traderAccountField;
            }
            set {
                this.traderAccountField = value;
                this.RaisePropertyChanged("TraderAccount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public partial class StockLimitItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string buyTypeField;
        
        private string commissionField;
        
        private string groupAccountField;
        
        private string limitCountField;
        
        private string saleTypeField;
        
        private string stockIDField;
        
        private string stockNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string BuyType {
            get {
                return this.buyTypeField;
            }
            set {
                this.buyTypeField = value;
                this.RaisePropertyChanged("BuyType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Commission {
            get {
                return this.commissionField;
            }
            set {
                this.commissionField = value;
                this.RaisePropertyChanged("Commission");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string GroupAccount {
            get {
                return this.groupAccountField;
            }
            set {
                this.groupAccountField = value;
                this.RaisePropertyChanged("GroupAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string LimitCount {
            get {
                return this.limitCountField;
            }
            set {
                this.limitCountField = value;
                this.RaisePropertyChanged("LimitCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string SaleType {
            get {
                return this.saleTypeField;
            }
            set {
                this.saleTypeField = value;
                this.RaisePropertyChanged("SaleType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string StockID {
            get {
                return this.stockIDField;
            }
            set {
                this.stockIDField = value;
                this.RaisePropertyChanged("StockID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string StockName {
            get {
                return this.stockNameField;
            }
            set {
                this.stockNameField = value;
                this.RaisePropertyChanged("StockName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public partial class ShareLimitGroupItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string groupNameField;
        
        private StockLimitItem[] groupStockListField;
        
        private LimitTrader[] groupTraderListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
                this.RaisePropertyChanged("GroupName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public StockLimitItem[] GroupStockList {
            get {
                return this.groupStockListField;
            }
            set {
                this.groupStockListField = value;
                this.RaisePropertyChanged("GroupStockList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        public LimitTrader[] GroupTraderList {
            get {
                return this.groupTraderListField;
            }
            set {
                this.groupTraderListField = value;
                this.RaisePropertyChanged("GroupTraderList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAccountCoin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAccountCoinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] list;
        
        public QueryAccountCoinRequest() {
        }
        
        public QueryAccountCoinRequest(string 交易员, string[] list) {
            this.交易员 = 交易员;
            this.list = list;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAccountCoinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryAccountCoinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server.Adapter")]
        public AASClient.AASServiceReference.AccounCoin[] QueryAccountCoinResult;
        
        public QueryAccountCoinResponse() {
        }
        
        public QueryAccountCoinResponse(AASClient.AASServiceReference.AccounCoin[] QueryAccountCoinResult) {
            this.QueryAccountCoinResult = QueryAccountCoinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryCoinQty", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryCoinQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Coin;
        
        public QueryCoinQtyRequest() {
        }
        
        public QueryCoinQtyRequest(string 交易员, string Coin) {
            this.交易员 = 交易员;
            this.Coin = Coin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryCoinQtyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryCoinQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public decimal QueryCoinQtyResult;
        
        public QueryCoinQtyResponse() {
        }
        
        public QueryCoinQtyResponse(decimal QueryCoinQtyResult) {
            this.QueryCoinQtyResult = QueryCoinQtyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryQsAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryQsAccountRequest {
        
        public QueryQsAccountRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryQsAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryQsAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.券商帐户DataTable QueryQsAccountResult;
        
        public QueryQsAccountResponse() {
        }
        
        public QueryQsAccountResponse(DbDataSet.券商帐户DataTable QueryQsAccountResult) {
            this.QueryQsAccountResult = QueryQsAccountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EnableQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool Enabled;
        
        public EnableQSAccountRequest() {
        }
        
        public EnableQSAccountRequest(string Name, bool Enabled) {
            this.Name = Name;
            this.Enabled = Enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EnableQSAccountResponse {
        
        public EnableQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Enabled;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易服务器;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public short YybID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Account;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TradeAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string JyPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TxPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SHGDDM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SZGDDM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public int 查询间隔时间;
        
        public AddQSAccountRequest() {
        }
        
        public AddQSAccountRequest(bool Enabled, string Name, string QS, string Type, string 交易服务器, string Version, short YybID, string Account, string TradeAccount, string JyPassword, string TxPassword, string SHGDDM, string SZGDDM, int 查询间隔时间) {
            this.Enabled = Enabled;
            this.Name = Name;
            this.QS = QS;
            this.Type = Type;
            this.交易服务器 = 交易服务器;
            this.Version = Version;
            this.YybID = YybID;
            this.Account = Account;
            this.TradeAccount = TradeAccount;
            this.JyPassword = JyPassword;
            this.TxPassword = TxPassword;
            this.SHGDDM = SHGDDM;
            this.SZGDDM = SZGDDM;
            this.查询间隔时间 = 查询间隔时间;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddQSAccountResponse {
        
        public AddQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易服务器;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易密码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 通讯密码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int 查询间隔时间;
        
        public UpdateQSAccountRequest() {
        }
        
        public UpdateQSAccountRequest(string Name, string 交易服务器, string Version, string 交易密码, string 通讯密码, int 查询间隔时间) {
            this.Name = Name;
            this.交易服务器 = 交易服务器;
            this.Version = Version;
            this.交易密码 = 交易密码;
            this.通讯密码 = 通讯密码;
            this.查询间隔时间 = 查询间隔时间;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateQSAccountResponse {
        
        public UpdateQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteQSAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteQSAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
        
        public DeleteQSAccountRequest() {
        }
        
        public DeleteQSAccountRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteQSAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteQSAccountResponse {
        
        public DeleteQSAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Test", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public short Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public short YybID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TradeAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string JyPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TxPassword;
        
        public TestRequest() {
        }
        
        public TestRequest(string IP, short Port, string Version, short YybID, string AccountNo, string TradeAccount, string JyPassword, string TxPassword) {
            this.IP = IP;
            this.Port = Port;
            this.Version = Version;
            this.YybID = YybID;
            this.AccountNo = AccountNo;
            this.TradeAccount = TradeAccount;
            this.JyPassword = JyPassword;
            this.TxPassword = TxPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestResult;
        
        public TestResponse() {
        }
        
        public TestResponse(string TestResult) {
            this.TestResult = TestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountRepay", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AccountRepayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal amount;
        
        public AccountRepayRequest() {
        }
        
        public AccountRepayRequest(string group, decimal amount) {
            this.group = group;
            this.amount = amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountRepayResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AccountRepayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountRepayResult;
        
        public AccountRepayResponse() {
        }
        
        public AccountRepayResponse(string AccountRepayResult) {
            this.AccountRepayResult = AccountRepayResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJY", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJYRequest {
        
        public QueryJYRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJYResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJYResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable QueryJYResult;
        
        public QueryJYResponse() {
        }
        
        public QueryJYResponse(DbDataSet.平台用户DataTable QueryJYResult) {
            this.QueryJYResult = QueryJYResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryTradeLimit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryTradeLimitRequest {
        
        public QueryTradeLimitRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryTradeLimitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryTradeLimitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.额度分配DataTable QueryTradeLimitResult;
        
        public QueryTradeLimitResponse() {
        }
        
        public QueryTradeLimitResponse(DbDataSet.额度分配DataTable QueryTradeLimitResult) {
            this.QueryTradeLimitResult = QueryTradeLimitResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum 买模式 {
        
        /// <remarks/>
        现金买入,
        
        /// <remarks/>
        融资买入,
        
        /// <remarks/>
        买券还券,
        
        /// <remarks/>
        担保品买入,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum 卖模式 {
        
        /// <remarks/>
        现券卖出,
        
        /// <remarks/>
        融券卖出,
        
        /// <remarks/>
        卖券还款,
        
        /// <remarks/>
        担保品卖出,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTradeLimit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTradeLimitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 组合号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public byte 市场代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券名称;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 拼音缩写;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public AASClient.AASServiceReference.买模式 买模式1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public AASClient.AASServiceReference.卖模式 卖模式1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal 交易额度;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public decimal 手续费率;
        
        public AddTradeLimitRequest() {
        }
        
        public AddTradeLimitRequest(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            this.交易员 = 交易员;
            this.证券代码 = 证券代码;
            this.组合号 = 组合号;
            this.市场代码 = 市场代码;
            this.证券名称 = 证券名称;
            this.拼音缩写 = 拼音缩写;
            this.买模式1 = 买模式1;
            this.卖模式1 = 卖模式1;
            this.交易额度 = 交易额度;
            this.手续费率 = 手续费率;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTradeLimitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTradeLimitResponse {
        
        public AddTradeLimitResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeLimit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeLimitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 组合号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public byte 市场代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券名称;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 拼音缩写;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public AASClient.AASServiceReference.买模式 买模式1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public AASClient.AASServiceReference.卖模式 卖模式1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal 交易额度;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public decimal 手续费率;
        
        public UpdateTradeLimitRequest() {
        }
        
        public UpdateTradeLimitRequest(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            this.交易员 = 交易员;
            this.证券代码 = 证券代码;
            this.组合号 = 组合号;
            this.市场代码 = 市场代码;
            this.证券名称 = 证券名称;
            this.拼音缩写 = 拼音缩写;
            this.买模式1 = 买模式1;
            this.卖模式1 = 卖模式1;
            this.交易额度 = 交易额度;
            this.手续费率 = 手续费率;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeLimitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeLimitResponse {
        
        public UpdateTradeLimitResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTradeLimit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTradeLimitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        public DeleteTradeLimitRequest() {
        }
        
        public DeleteTradeLimitRequest(string 交易员, string 证券代码) {
            this.交易员 = 交易员;
            this.证券代码 = 证券代码;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTradeLimitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTradeLimitResponse {
        
        public DeleteTradeLimitResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query普通用户", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query普通用户Request {
        
        public Query普通用户Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query普通用户Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query普通用户Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable Query普通用户Result;
        
        public Query普通用户Response() {
        }
        
        public Query普通用户Response(DbDataSet.平台用户DataTable Query普通用户Result) {
            this.Query普通用户Result = Query普通用户Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryMACBelongUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryMACBelongUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        public QueryMACBelongUserRequest() {
        }
        
        public QueryMACBelongUserRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryMACBelongUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryMACBelongUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.MAC地址分配DataTable QueryMACBelongUserResult;
        
        public QueryMACBelongUserResponse() {
        }
        
        public QueryMACBelongUserResponse(DbDataSet.MAC地址分配DataTable QueryMACBelongUserResult) {
            this.QueryMACBelongUserResult = QueryMACBelongUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMAC", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddMACRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MAC;
        
        public AddMACRequest() {
        }
        
        public AddMACRequest(string UserName, string MAC) {
            this.UserName = UserName;
            this.MAC = MAC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMACResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddMACResponse {
        
        public AddMACResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMAC", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteMACRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MAC;
        
        public DeleteMACRequest() {
        }
        
        public DeleteMACRequest(string UserName, string MAC) {
            this.UserName = UserName;
            this.MAC = MAC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMACResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteMACResponse {
        
        public DeleteMACResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FectchAllTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FectchAllTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        public FectchAllTableRequest() {
        }
        
        public FectchAllTableRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FectchAllTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FectchAllTableResponse {
        
        public FectchAllTableResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int 买卖方向;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal 委托数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal 委托价格;
        
        public SendOrderRequest() {
        }
        
        public SendOrderRequest(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            this.UserName = UserName;
            this.证券代码 = 证券代码;
            this.买卖方向 = 买卖方向;
            this.委托数量 = 委托数量;
            this.委托价格 = 委托价格;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendOrderResult;
        
        public SendOrderResponse() {
        }
        
        public SendOrderResponse(string SendOrderResult) {
            this.SendOrderResult = SendOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendECoinOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendECoinOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int 买卖方向;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal 委托数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal 委托价格;
        
        public SendECoinOrderRequest() {
        }
        
        public SendECoinOrderRequest(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            this.UserName = UserName;
            this.证券代码 = 证券代码;
            this.买卖方向 = 买卖方向;
            this.委托数量 = 委托数量;
            this.委托价格 = 委托价格;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendECoinOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendECoinOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendECoinOrderResult;
        
        public SendECoinOrderResponse() {
        }
        
        public SendECoinOrderResponse(string SendECoinOrderResult) {
            this.SendECoinOrderResult = SendECoinOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CancelOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 组合号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券名称;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public byte 市场代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 委托编号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int 买卖方向;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public decimal 委托数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal 委托价格;
        
        public CancelOrderRequest() {
        }
        
        public CancelOrderRequest(string UserName, string 组合号, string 证券代码, string 证券名称, byte 市场代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            this.UserName = UserName;
            this.组合号 = 组合号;
            this.证券代码 = 证券代码;
            this.证券名称 = 证券名称;
            this.市场代码 = 市场代码;
            this.委托编号 = 委托编号;
            this.买卖方向 = 买卖方向;
            this.委托数量 = 委托数量;
            this.委托价格 = 委托价格;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CancelOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CancelOrderResult;
        
        public CancelOrderResponse() {
        }
        
        public CancelOrderResponse(string CancelOrderResult) {
            this.CancelOrderResult = CancelOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelECoinOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CancelECoinOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 组合号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 委托编号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int 买卖方向;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public decimal 委托数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public decimal 委托价格;
        
        public CancelECoinOrderRequest() {
        }
        
        public CancelECoinOrderRequest(string UserName, string 组合号, string 证券代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            this.UserName = UserName;
            this.组合号 = 组合号;
            this.证券代码 = 证券代码;
            this.委托编号 = 委托编号;
            this.买卖方向 = 买卖方向;
            this.委托数量 = 委托数量;
            this.委托价格 = 委托价格;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelECoinOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CancelECoinOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CancelECoinOrderResult;
        
        public CancelECoinOrderResponse() {
        }
        
        public CancelECoinOrderResponse(string CancelECoinOrderResult) {
            this.CancelECoinOrderResult = CancelECoinOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshOrderTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RefreshOrderTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        public RefreshOrderTableRequest() {
        }
        
        public RefreshOrderTableRequest(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshOrderTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RefreshOrderTableResponse {
        
        public RefreshOrderTableResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CloseOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 交易员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 组合号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal 平仓数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal 平仓价格;
        
        public CloseOrderRequest() {
        }
        
        public CloseOrderRequest(string 交易员, string 组合号, string 证券代码, decimal 平仓数量, decimal 平仓价格) {
            this.交易员 = 交易员;
            this.组合号 = 组合号;
            this.证券代码 = 证券代码;
            this.平仓数量 = 平仓数量;
            this.平仓价格 = 平仓价格;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CloseOrderResponse {
        
        public CloseOrderResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyLogBelongFK", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyLogBelongFKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        public QueryJyLogBelongFKRequest() {
        }
        
        public QueryJyLogBelongFKRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryJyLogBelongFKResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryJyLogBelongFKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.交易日志DataTable QueryJyLogBelongFKResult;
        
        public QueryJyLogBelongFKResponse() {
        }
        
        public QueryJyLogBelongFKResponse(DbDataSet.交易日志DataTable QueryJyLogBelongFKResult) {
            this.QueryJyLogBelongFKResult = QueryJyLogBelongFKResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("JyDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class JyDataSet : global::System.Data.DataSet {
        
        private 成交DataTable table成交;
        
        private 委托DataTable table委托;
        
        private 业绩统计DataTable table业绩统计;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public JyDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected JyDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["成交"] != null)) {
                    base.Tables.Add(new 成交DataTable(ds.Tables["成交"]));
                }
                if ((ds.Tables["委托"] != null)) {
                    base.Tables.Add(new 委托DataTable(ds.Tables["委托"]));
                }
                if ((ds.Tables["业绩统计"] != null)) {
                    base.Tables.Add(new 业绩统计DataTable(ds.Tables["业绩统计"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 成交DataTable 成交 {
            get {
                return this.table成交;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 委托DataTable 委托 {
            get {
                return this.table委托;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 业绩统计DataTable 业绩统计 {
            get {
                return this.table业绩统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            JyDataSet cln = ((JyDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["成交"] != null)) {
                    base.Tables.Add(new 成交DataTable(ds.Tables["成交"]));
                }
                if ((ds.Tables["委托"] != null)) {
                    base.Tables.Add(new 委托DataTable(ds.Tables["委托"]));
                }
                if ((ds.Tables["业绩统计"] != null)) {
                    base.Tables.Add(new 业绩统计DataTable(ds.Tables["业绩统计"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table成交 = ((成交DataTable)(base.Tables["成交"]));
            if ((initTable == true)) {
                if ((this.table成交 != null)) {
                    this.table成交.InitVars();
                }
            }
            this.table委托 = ((委托DataTable)(base.Tables["委托"]));
            if ((initTable == true)) {
                if ((this.table委托 != null)) {
                    this.table委托.InitVars();
                }
            }
            this.table业绩统计 = ((业绩统计DataTable)(base.Tables["业绩统计"]));
            if ((initTable == true)) {
                if ((this.table业绩统计 != null)) {
                    this.table业绩统计.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "JyDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/JyDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table成交 = new 成交DataTable();
            base.Tables.Add(this.table成交);
            this.table委托 = new 委托DataTable();
            base.Tables.Add(this.table委托);
            this.table业绩统计 = new 业绩统计DataTable();
            base.Tables.Add(this.table业绩统计);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize成交() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize委托() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerialize业绩统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            JyDataSet ds = new JyDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 成交RowChangeEventHandler(object sender, 成交RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 委托RowChangeEventHandler(object sender, 委托RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void 业绩统计RowChangeEventHandler(object sender, 业绩统计RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 成交DataTable : global::System.Data.TypedTableBase<成交Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column买卖方向;
            
            private global::System.Data.DataColumn column成交价格;
            
            private global::System.Data.DataColumn column成交数量;
            
            private global::System.Data.DataColumn column成交金额;
            
            private global::System.Data.DataColumn column成交编号;
            
            private global::System.Data.DataColumn column委托编号;
            
            private global::System.Data.DataColumn column市场代码;
            
            private global::System.Data.DataColumn column成交时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交DataTable() {
                this.TableName = "成交";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 成交DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 成交DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买卖方向Column {
                get {
                    return this.column买卖方向;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交价格Column {
                get {
                    return this.column成交价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交数量Column {
                get {
                    return this.column成交数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交金额Column {
                get {
                    return this.column成交金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交编号Column {
                get {
                    return this.column成交编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托编号Column {
                get {
                    return this.column委托编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 市场代码Column {
                get {
                    return this.column市场代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交时间Column {
                get {
                    return this.column成交时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交Row this[int index] {
                get {
                    return ((成交Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 成交RowChangeEventHandler 成交RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 成交RowChangeEventHandler 成交RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 成交RowChangeEventHandler 成交RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 成交RowChangeEventHandler 成交RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add成交Row(成交Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交Row Add成交Row(string 交易员, string 组合号, string 证券代码, string 证券名称, int 买卖方向, decimal 成交价格, decimal 成交数量, decimal 成交金额, string 成交编号, string 委托编号, byte 市场代码, string 成交时间) {
                成交Row row成交Row = ((成交Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        买卖方向,
                        成交价格,
                        成交数量,
                        成交金额,
                        成交编号,
                        委托编号,
                        市场代码,
                        成交时间};
                row成交Row.ItemArray = columnValuesArray;
                this.Rows.Add(row成交Row);
                return row成交Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                成交DataTable cln = ((成交DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 成交DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column买卖方向 = base.Columns["买卖方向"];
                this.column成交价格 = base.Columns["成交价格"];
                this.column成交数量 = base.Columns["成交数量"];
                this.column成交金额 = base.Columns["成交金额"];
                this.column成交编号 = base.Columns["成交编号"];
                this.column委托编号 = base.Columns["委托编号"];
                this.column市场代码 = base.Columns["市场代码"];
                this.column成交时间 = base.Columns["成交时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column买卖方向 = new global::System.Data.DataColumn("买卖方向", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买卖方向);
                this.column成交价格 = new global::System.Data.DataColumn("成交价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交价格);
                this.column成交数量 = new global::System.Data.DataColumn("成交数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交数量);
                this.column成交金额 = new global::System.Data.DataColumn("成交金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交金额);
                this.column成交编号 = new global::System.Data.DataColumn("成交编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交编号);
                this.column委托编号 = new global::System.Data.DataColumn("委托编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托编号);
                this.column市场代码 = new global::System.Data.DataColumn("市场代码", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column市场代码);
                this.column成交时间 = new global::System.Data.DataColumn("成交时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交时间);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交Row New成交Row() {
                return ((成交Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 成交Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(成交Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.成交RowChanged != null)) {
                    this.成交RowChanged(this, new 成交RowChangeEvent(((成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.成交RowChanging != null)) {
                    this.成交RowChanging(this, new 成交RowChangeEvent(((成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.成交RowDeleted != null)) {
                    this.成交RowDeleted(this, new 成交RowChangeEvent(((成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.成交RowDeleting != null)) {
                    this.成交RowDeleting(this, new 成交RowChangeEvent(((成交Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove成交Row(成交Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JyDataSet ds = new JyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "成交DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 委托DataTable : global::System.Data.TypedTableBase<委托Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column买卖方向;
            
            private global::System.Data.DataColumn column委托价格;
            
            private global::System.Data.DataColumn column委托数量;
            
            private global::System.Data.DataColumn column成交价格;
            
            private global::System.Data.DataColumn column成交数量;
            
            private global::System.Data.DataColumn column撤单数量;
            
            private global::System.Data.DataColumn column状态说明;
            
            private global::System.Data.DataColumn column委托编号;
            
            private global::System.Data.DataColumn column市场代码;
            
            private global::System.Data.DataColumn column委托时间;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托DataTable() {
                this.TableName = "委托";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 委托DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 委托DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买卖方向Column {
                get {
                    return this.column买卖方向;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托价格Column {
                get {
                    return this.column委托价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托数量Column {
                get {
                    return this.column委托数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交价格Column {
                get {
                    return this.column成交价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 成交数量Column {
                get {
                    return this.column成交数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 撤单数量Column {
                get {
                    return this.column撤单数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 状态说明Column {
                get {
                    return this.column状态说明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托编号Column {
                get {
                    return this.column委托编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 市场代码Column {
                get {
                    return this.column市场代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 委托时间Column {
                get {
                    return this.column委托时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托Row this[int index] {
                get {
                    return ((委托Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 委托RowChangeEventHandler 委托RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 委托RowChangeEventHandler 委托RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 委托RowChangeEventHandler 委托RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 委托RowChangeEventHandler 委托RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add委托Row(委托Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托Row Add委托Row(string 交易员, string 组合号, string 证券代码, string 证券名称, int 买卖方向, decimal 委托价格, decimal 委托数量, decimal 成交价格, decimal 成交数量, decimal 撤单数量, string 状态说明, string 委托编号, byte 市场代码, string 委托时间) {
                委托Row row委托Row = ((委托Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        买卖方向,
                        委托价格,
                        委托数量,
                        成交价格,
                        成交数量,
                        撤单数量,
                        状态说明,
                        委托编号,
                        市场代码,
                        委托时间};
                row委托Row.ItemArray = columnValuesArray;
                this.Rows.Add(row委托Row);
                return row委托Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                委托DataTable cln = ((委托DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 委托DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column买卖方向 = base.Columns["买卖方向"];
                this.column委托价格 = base.Columns["委托价格"];
                this.column委托数量 = base.Columns["委托数量"];
                this.column成交价格 = base.Columns["成交价格"];
                this.column成交数量 = base.Columns["成交数量"];
                this.column撤单数量 = base.Columns["撤单数量"];
                this.column状态说明 = base.Columns["状态说明"];
                this.column委托编号 = base.Columns["委托编号"];
                this.column市场代码 = base.Columns["市场代码"];
                this.column委托时间 = base.Columns["委托时间"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column买卖方向 = new global::System.Data.DataColumn("买卖方向", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买卖方向);
                this.column委托价格 = new global::System.Data.DataColumn("委托价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托价格);
                this.column委托数量 = new global::System.Data.DataColumn("委托数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托数量);
                this.column成交价格 = new global::System.Data.DataColumn("成交价格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交价格);
                this.column成交数量 = new global::System.Data.DataColumn("成交数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成交数量);
                this.column撤单数量 = new global::System.Data.DataColumn("撤单数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column撤单数量);
                this.column状态说明 = new global::System.Data.DataColumn("状态说明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column状态说明);
                this.column委托编号 = new global::System.Data.DataColumn("委托编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托编号);
                this.column市场代码 = new global::System.Data.DataColumn("市场代码", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column市场代码);
                this.column委托时间 = new global::System.Data.DataColumn("委托时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column委托时间);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托Row New委托Row() {
                return ((委托Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 委托Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(委托Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.委托RowChanged != null)) {
                    this.委托RowChanged(this, new 委托RowChangeEvent(((委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.委托RowChanging != null)) {
                    this.委托RowChanging(this, new 委托RowChangeEvent(((委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.委托RowDeleted != null)) {
                    this.委托RowDeleted(this, new 委托RowChangeEvent(((委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.委托RowDeleting != null)) {
                    this.委托RowDeleting(this, new 委托RowChangeEvent(((委托Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove委托Row(委托Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JyDataSet ds = new JyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "委托DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 业绩统计DataTable : global::System.Data.TypedTableBase<业绩统计Row> {
            
            private global::System.Data.DataColumn column交易员;
            
            private global::System.Data.DataColumn column组合号;
            
            private global::System.Data.DataColumn column证券代码;
            
            private global::System.Data.DataColumn column证券名称;
            
            private global::System.Data.DataColumn column毛利;
            
            private global::System.Data.DataColumn column交易费用;
            
            private global::System.Data.DataColumn column净利润;
            
            private global::System.Data.DataColumn column买入数量;
            
            private global::System.Data.DataColumn column买入金额;
            
            private global::System.Data.DataColumn column买入均价;
            
            private global::System.Data.DataColumn column卖出数量;
            
            private global::System.Data.DataColumn column卖出金额;
            
            private global::System.Data.DataColumn column卖出均价;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计DataTable() {
                this.TableName = "业绩统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 业绩统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected 业绩统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易员Column {
                get {
                    return this.column交易员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 组合号Column {
                get {
                    return this.column组合号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券代码Column {
                get {
                    return this.column证券代码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 证券名称Column {
                get {
                    return this.column证券名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 毛利Column {
                get {
                    return this.column毛利;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 交易费用Column {
                get {
                    return this.column交易费用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 净利润Column {
                get {
                    return this.column净利润;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买入数量Column {
                get {
                    return this.column买入数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买入金额Column {
                get {
                    return this.column买入金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 买入均价Column {
                get {
                    return this.column买入均价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 卖出数量Column {
                get {
                    return this.column卖出数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 卖出金额Column {
                get {
                    return this.column卖出金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn 卖出均价Column {
                get {
                    return this.column卖出均价;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计Row this[int index] {
                get {
                    return ((业绩统计Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 业绩统计RowChangeEventHandler 业绩统计RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 业绩统计RowChangeEventHandler 业绩统计RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 业绩统计RowChangeEventHandler 业绩统计RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event 业绩统计RowChangeEventHandler 业绩统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Add业绩统计Row(业绩统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计Row Add业绩统计Row(string 交易员, string 组合号, string 证券代码, string 证券名称, decimal 毛利, decimal 交易费用, decimal 净利润, decimal 买入数量, decimal 买入金额, decimal 买入均价, decimal 卖出数量, decimal 卖出金额, decimal 卖出均价) {
                业绩统计Row row业绩统计Row = ((业绩统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        交易员,
                        组合号,
                        证券代码,
                        证券名称,
                        毛利,
                        交易费用,
                        净利润,
                        买入数量,
                        买入金额,
                        买入均价,
                        卖出数量,
                        卖出金额,
                        卖出均价};
                row业绩统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row业绩统计Row);
                return row业绩统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                业绩统计DataTable cln = ((业绩统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 业绩统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.column交易员 = base.Columns["交易员"];
                this.column组合号 = base.Columns["组合号"];
                this.column证券代码 = base.Columns["证券代码"];
                this.column证券名称 = base.Columns["证券名称"];
                this.column毛利 = base.Columns["毛利"];
                this.column交易费用 = base.Columns["交易费用"];
                this.column净利润 = base.Columns["净利润"];
                this.column买入数量 = base.Columns["买入数量"];
                this.column买入金额 = base.Columns["买入金额"];
                this.column买入均价 = base.Columns["买入均价"];
                this.column卖出数量 = base.Columns["卖出数量"];
                this.column卖出金额 = base.Columns["卖出金额"];
                this.column卖出均价 = base.Columns["卖出均价"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.column交易员 = new global::System.Data.DataColumn("交易员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易员);
                this.column组合号 = new global::System.Data.DataColumn("组合号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合号);
                this.column证券代码 = new global::System.Data.DataColumn("证券代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券代码);
                this.column证券名称 = new global::System.Data.DataColumn("证券名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证券名称);
                this.column毛利 = new global::System.Data.DataColumn("毛利", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column毛利);
                this.column交易费用 = new global::System.Data.DataColumn("交易费用", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易费用);
                this.column净利润 = new global::System.Data.DataColumn("净利润", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column净利润);
                this.column买入数量 = new global::System.Data.DataColumn("买入数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买入数量);
                this.column买入金额 = new global::System.Data.DataColumn("买入金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买入金额);
                this.column买入均价 = new global::System.Data.DataColumn("买入均价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column买入均价);
                this.column卖出数量 = new global::System.Data.DataColumn("卖出数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卖出数量);
                this.column卖出金额 = new global::System.Data.DataColumn("卖出金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卖出金额);
                this.column卖出均价 = new global::System.Data.DataColumn("卖出均价", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卖出均价);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计Row New业绩统计Row() {
                return ((业绩统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 业绩统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(业绩统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.业绩统计RowChanged != null)) {
                    this.业绩统计RowChanged(this, new 业绩统计RowChangeEvent(((业绩统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.业绩统计RowChanging != null)) {
                    this.业绩统计RowChanging(this, new 业绩统计RowChangeEvent(((业绩统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.业绩统计RowDeleted != null)) {
                    this.业绩统计RowDeleted(this, new 业绩统计RowChangeEvent(((业绩统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.业绩统计RowDeleting != null)) {
                    this.业绩统计RowDeleting(this, new 业绩统计RowChangeEvent(((业绩统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Remove业绩统计Row(业绩统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JyDataSet ds = new JyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "业绩统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 成交Row : global::System.Data.DataRow {
            
            private 成交DataTable table成交;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 成交Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table成交 = ((成交DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table成交.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table成交.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table成交.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table成交.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 买卖方向 {
                get {
                    try {
                        return ((int)(this[this.table成交.买卖方向Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“买卖方向”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.买卖方向Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交价格 {
                get {
                    try {
                        return ((decimal)(this[this.table成交.成交价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“成交价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.成交价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交数量 {
                get {
                    try {
                        return ((decimal)(this[this.table成交.成交数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“成交数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.成交数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交金额 {
                get {
                    try {
                        return ((decimal)(this[this.table成交.成交金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“成交金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.成交金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 成交编号 {
                get {
                    try {
                        return ((string)(this[this.table成交.成交编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“成交编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.成交编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托编号 {
                get {
                    try {
                        return ((string)(this[this.table成交.委托编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“委托编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.委托编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte 市场代码 {
                get {
                    try {
                        return ((byte)(this[this.table成交.市场代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“市场代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.市场代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 成交时间 {
                get {
                    try {
                        return ((string)(this[this.table成交.成交时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“成交”中列“成交时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table成交.成交时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table成交.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table成交.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table成交.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table成交.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table成交.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table成交.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table成交.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table成交.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买卖方向Null() {
                return this.IsNull(this.table成交.买卖方向Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买卖方向Null() {
                this[this.table成交.买卖方向Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交价格Null() {
                return this.IsNull(this.table成交.成交价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交价格Null() {
                this[this.table成交.成交价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交数量Null() {
                return this.IsNull(this.table成交.成交数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交数量Null() {
                this[this.table成交.成交数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交金额Null() {
                return this.IsNull(this.table成交.成交金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交金额Null() {
                this[this.table成交.成交金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交编号Null() {
                return this.IsNull(this.table成交.成交编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交编号Null() {
                this[this.table成交.成交编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托编号Null() {
                return this.IsNull(this.table成交.委托编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托编号Null() {
                this[this.table成交.委托编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is市场代码Null() {
                return this.IsNull(this.table成交.市场代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set市场代码Null() {
                this[this.table成交.市场代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交时间Null() {
                return this.IsNull(this.table成交.成交时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交时间Null() {
                this[this.table成交.成交时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 委托Row : global::System.Data.DataRow {
            
            private 委托DataTable table委托;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 委托Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table委托 = ((委托DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table委托.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table委托.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table委托.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table委托.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int 买卖方向 {
                get {
                    try {
                        return ((int)(this[this.table委托.买卖方向Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“买卖方向”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.买卖方向Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托价格 {
                get {
                    try {
                        return ((decimal)(this[this.table委托.委托价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“委托价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.委托价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 委托数量 {
                get {
                    try {
                        return ((decimal)(this[this.table委托.委托数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“委托数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.委托数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交价格 {
                get {
                    try {
                        return ((decimal)(this[this.table委托.成交价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“成交价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.成交价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 成交数量 {
                get {
                    try {
                        return ((decimal)(this[this.table委托.成交数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“成交数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.成交数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 撤单数量 {
                get {
                    try {
                        return ((decimal)(this[this.table委托.撤单数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“撤单数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.撤单数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 状态说明 {
                get {
                    try {
                        return ((string)(this[this.table委托.状态说明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“状态说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.状态说明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托编号 {
                get {
                    try {
                        return ((string)(this[this.table委托.委托编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“委托编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.委托编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte 市场代码 {
                get {
                    try {
                        return ((byte)(this[this.table委托.市场代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“市场代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.市场代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 委托时间 {
                get {
                    try {
                        return ((string)(this[this.table委托.委托时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“委托”中列“委托时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table委托.委托时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table委托.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table委托.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table委托.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table委托.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table委托.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table委托.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table委托.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table委托.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买卖方向Null() {
                return this.IsNull(this.table委托.买卖方向Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买卖方向Null() {
                this[this.table委托.买卖方向Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托价格Null() {
                return this.IsNull(this.table委托.委托价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托价格Null() {
                this[this.table委托.委托价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托数量Null() {
                return this.IsNull(this.table委托.委托数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托数量Null() {
                this[this.table委托.委托数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交价格Null() {
                return this.IsNull(this.table委托.成交价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交价格Null() {
                this[this.table委托.成交价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is成交数量Null() {
                return this.IsNull(this.table委托.成交数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set成交数量Null() {
                this[this.table委托.成交数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is撤单数量Null() {
                return this.IsNull(this.table委托.撤单数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set撤单数量Null() {
                this[this.table委托.撤单数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is状态说明Null() {
                return this.IsNull(this.table委托.状态说明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set状态说明Null() {
                this[this.table委托.状态说明Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托编号Null() {
                return this.IsNull(this.table委托.委托编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托编号Null() {
                this[this.table委托.委托编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is市场代码Null() {
                return this.IsNull(this.table委托.市场代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set市场代码Null() {
                this[this.table委托.市场代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is委托时间Null() {
                return this.IsNull(this.table委托.委托时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set委托时间Null() {
                this[this.table委托.委托时间Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 业绩统计Row : global::System.Data.DataRow {
            
            private 业绩统计DataTable table业绩统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal 业绩统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table业绩统计 = ((业绩统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 交易员 {
                get {
                    try {
                        return ((string)(this[this.table业绩统计.交易员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“交易员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.交易员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 组合号 {
                get {
                    try {
                        return ((string)(this[this.table业绩统计.组合号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“组合号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.组合号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券代码 {
                get {
                    try {
                        return ((string)(this[this.table业绩统计.证券代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“证券代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.证券代码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string 证券名称 {
                get {
                    try {
                        return ((string)(this[this.table业绩统计.证券名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“证券名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.证券名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 毛利 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.毛利Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“毛利”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.毛利Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 交易费用 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.交易费用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“交易费用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.交易费用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 净利润 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.净利润Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“净利润”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.净利润Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 买入数量 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.买入数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“买入数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.买入数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 买入金额 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.买入金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“买入金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.买入金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 买入均价 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.买入均价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“买入均价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.买入均价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 卖出数量 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.卖出数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“卖出数量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.卖出数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 卖出金额 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.卖出金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“卖出金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.卖出金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal 卖出均价 {
                get {
                    try {
                        return ((decimal)(this[this.table业绩统计.卖出均价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“业绩统计”中列“卖出均价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table业绩统计.卖出均价Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易员Null() {
                return this.IsNull(this.table业绩统计.交易员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易员Null() {
                this[this.table业绩统计.交易员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is组合号Null() {
                return this.IsNull(this.table业绩统计.组合号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set组合号Null() {
                this[this.table业绩统计.组合号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券代码Null() {
                return this.IsNull(this.table业绩统计.证券代码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券代码Null() {
                this[this.table业绩统计.证券代码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is证券名称Null() {
                return this.IsNull(this.table业绩统计.证券名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set证券名称Null() {
                this[this.table业绩统计.证券名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is毛利Null() {
                return this.IsNull(this.table业绩统计.毛利Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set毛利Null() {
                this[this.table业绩统计.毛利Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is交易费用Null() {
                return this.IsNull(this.table业绩统计.交易费用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set交易费用Null() {
                this[this.table业绩统计.交易费用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is净利润Null() {
                return this.IsNull(this.table业绩统计.净利润Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set净利润Null() {
                this[this.table业绩统计.净利润Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买入数量Null() {
                return this.IsNull(this.table业绩统计.买入数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买入数量Null() {
                this[this.table业绩统计.买入数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买入金额Null() {
                return this.IsNull(this.table业绩统计.买入金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买入金额Null() {
                this[this.table业绩统计.买入金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is买入均价Null() {
                return this.IsNull(this.table业绩统计.买入均价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set买入均价Null() {
                this[this.table业绩统计.买入均价Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is卖出数量Null() {
                return this.IsNull(this.table业绩统计.卖出数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set卖出数量Null() {
                this[this.table业绩统计.卖出数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is卖出金额Null() {
                return this.IsNull(this.table业绩统计.卖出金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set卖出金额Null() {
                this[this.table业绩统计.卖出金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is卖出均价Null() {
                return this.IsNull(this.table业绩统计.卖出均价Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set卖出均价Null() {
                this[this.table业绩统计.卖出均价Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 成交RowChangeEvent : global::System.EventArgs {
            
            private 成交Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交RowChangeEvent(成交Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 成交Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 委托RowChangeEvent : global::System.EventArgs {
            
            private 委托Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托RowChangeEvent(委托Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 委托Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class 业绩统计RowChangeEvent : global::System.EventArgs {
            
            private 业绩统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计RowChangeEvent(业绩统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public 业绩统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query业绩BelongFK", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query业绩BelongFKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime EndDate;
        
        public Query业绩BelongFKRequest() {
        }
        
        public Query业绩BelongFKRequest(string UserName, System.DateTime StartDate, System.DateTime EndDate) {
            this.UserName = UserName;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Query业绩BelongFKResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Query业绩BelongFKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JyDataSet.业绩统计DataTable Query业绩BelongFKResult;
        
        public Query业绩BelongFKResponse() {
        }
        
        public Query业绩BelongFKResponse(JyDataSet.业绩统计DataTable Query业绩BelongFKResult) {
            this.Query业绩BelongFKResult = Query业绩BelongFKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShareLimitDocumentQuery", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ShareLimitDocumentQueryRequest {
        
        public ShareLimitDocumentQueryRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShareLimitDocumentQueryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ShareLimitDocumentQueryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShareLimitDocumentQueryResult;
        
        public ShareLimitDocumentQueryResponse() {
        }
        
        public ShareLimitDocumentQueryResponse(string ShareLimitDocumentQueryResult) {
            this.ShareLimitDocumentQueryResult = ShareLimitDocumentQueryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShareGroupQuery", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ShareGroupQueryRequest {
        
        public ShareGroupQueryRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShareGroupQueryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ShareGroupQueryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
        public AASClient.AASServiceReference.ShareLimitGroupItem[] ShareGroupQueryResult;
        
        public ShareGroupQueryResponse() {
        }
        
        public ShareGroupQueryResponse(AASClient.AASServiceReference.ShareLimitGroupItem[] ShareGroupQueryResult) {
            this.ShareGroupQueryResult = ShareGroupQueryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTrader", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTraderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string trader;
        
        public AddTraderRequest() {
        }
        
        public AddTraderRequest(string group, string trader) {
            this.group = group;
            this.trader = trader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTraderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddTraderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddTraderResult;
        
        public AddTraderResponse() {
        }
        
        public AddTraderResponse(string AddTraderResult) {
            this.AddTraderResult = AddTraderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupTrader", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveGroupTraderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string trader;
        
        public RemoveGroupTraderRequest() {
        }
        
        public RemoveGroupTraderRequest(string group, string trader) {
            this.group = group;
            this.trader = trader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupTraderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveGroupTraderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RemoveGroupTraderResult;
        
        public RemoveGroupTraderResponse() {
        }
        
        public RemoveGroupTraderResponse(bool RemoveGroupTraderResult) {
            this.RemoveGroupTraderResult = RemoveGroupTraderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AASClient.AASServiceReference.StockLimitItem limitItem;
        
        public AddStockRequest() {
        }
        
        public AddStockRequest(string group, AASClient.AASServiceReference.StockLimitItem limitItem) {
            this.group = group;
            this.limitItem = limitItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddStockResult;
        
        public AddStockResponse() {
        }
        
        public AddStockResponse(string AddStockResult) {
            this.AddStockResult = AddStockResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AASClient.AASServiceReference.StockLimitItem stockLimit;
        
        public UpdateStockRequest() {
        }
        
        public UpdateStockRequest(string group, AASClient.AASServiceReference.StockLimitItem stockLimit) {
            this.group = group;
            this.stockLimit = stockLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateStockResult;
        
        public UpdateStockResponse() {
        }
        
        public UpdateStockResponse(string UpdateStockResult) {
            this.UpdateStockResult = UpdateStockResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockID;
        
        public RemoveStockRequest() {
        }
        
        public RemoveStockRequest(string group, string stockID) {
            this.group = group;
            this.stockID = stockID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RemoveStockResult;
        
        public RemoveStockResponse() {
        }
        
        public RemoveStockResponse(string RemoveStockResult) {
            this.RemoveStockResult = RemoveStockResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryNotGroupedTrader", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryNotGroupedTraderRequest {
        
        public QueryNotGroupedTraderRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryNotGroupedTraderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueryNotGroupedTraderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Server")]
        public AASClient.AASServiceReference.LimitTrader[] QueryNotGroupedTraderResult;
        
        public QueryNotGroupedTraderResponse() {
        }
        
        public QueryNotGroupedTraderResponse(AASClient.AASServiceReference.LimitTrader[] QueryNotGroupedTraderResult) {
            this.QueryNotGroupedTraderResult = QueryNotGroupedTraderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add可用资金", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Add可用资金Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string coinType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public decimal limit;
        
        public Add可用资金Request() {
        }
        
        public Add可用资金Request(string userName, string coinType, decimal limit) {
            this.userName = userName;
            this.coinType = coinType;
            this.limit = limit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add可用资金Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Add可用资金Response {
        
        public Add可用资金Response() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete可用资金", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Delete可用资金Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string coinType;
        
        public Delete可用资金Request() {
        }
        
        public Delete可用资金Request(string userName, string coinType) {
            this.userName = userName;
            this.coinType = coinType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete可用资金Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Delete可用资金Response {
        
        public Delete可用资金Response() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update可用资金", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Update可用资金Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string coinType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public decimal limit;
        
        public Update可用资金Request() {
        }
        
        public Update可用资金Request(string userName, string coinType, decimal limit) {
            this.userName = userName;
            this.coinType = coinType;
            this.limit = limit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update可用资金Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Update可用资金Response {
        
        public Update可用资金Response() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Notify", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Notify {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 操作员;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券代码;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 证券名称;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 委托编号;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int 买卖方向;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public decimal 委托数量;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public decimal 委托价格;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string 信息;
        
        public Notify() {
        }
        
        public Notify(string 操作员, string 证券代码, string 证券名称, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格, string 信息) {
            this.操作员 = 操作员;
            this.证券代码 = 证券代码;
            this.证券名称 = 证券名称;
            this.委托编号 = 委托编号;
            this.买卖方向 = 买卖方向;
            this.委托数量 = 委托数量;
            this.委托价格 = 委托价格;
            this.信息 = 信息;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="风控分配DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 风控分配DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable 名下交易员DataTable;
        
        public 风控分配DataTableChanged() {
        }
        
        public 风控分配DataTableChanged(DbDataSet.平台用户DataTable 名下交易员DataTable) {
            this.名下交易员DataTable = 名下交易员DataTable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="成交DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 成交DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JyDataSet.成交DataTable TableChanged;
        
        public 成交DataTableChanged() {
        }
        
        public 成交DataTableChanged(string UserName, JyDataSet.成交DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="委托DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 委托DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JyDataSet.委托DataTable TableChanged;
        
        public 委托DataTableChanged() {
        }
        
        public 委托DataTableChanged(string UserName, JyDataSet.委托DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="平台用户DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 平台用户DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.平台用户DataTable TableChanged;
        
        public 平台用户DataTableChanged() {
        }
        
        public 平台用户DataTableChanged(string UserName, DbDataSet.平台用户DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="额度分配DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 额度分配DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.额度分配DataTable TableChanged;
        
        public 额度分配DataTableChanged() {
        }
        
        public 额度分配DataTableChanged(string UserName, DbDataSet.额度分配DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="订单DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 订单DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.订单DataTable TableChanged;
        
        public 订单DataTableChanged() {
        }
        
        public 订单DataTableChanged(string UserName, DbDataSet.订单DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="已平仓订单DataTableChanged", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class 已平仓订单DataTableChanged {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DbDataSet.已平仓订单DataTable TableChanged;
        
        public 已平仓订单DataTableChanged() {
        }
        
        public 已平仓订单DataTableChanged(string UserName, DbDataSet.已平仓订单DataTable TableChanged) {
            this.UserName = UserName;
            this.TableChanged = TableChanged;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AASServiceChannel : AASClient.AASServiceReference.AASService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AASServiceClient : System.ServiceModel.DuplexClientBase<AASClient.AASServiceReference.AASService>, AASClient.AASServiceReference.AASService {
        
        public AASServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AASServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AASServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AASServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AASServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Query可用资金Response AASClient.AASServiceReference.AASService.Query可用资金(AASClient.AASServiceReference.Query可用资金Request request) {
            return base.Channel.Query可用资金(request);
        }
        
        public DbDataSet.可用资金DataTable Query可用资金(string userName, string coinType) {
            AASClient.AASServiceReference.Query可用资金Request inValue = new AASClient.AASServiceReference.Query可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            AASClient.AASServiceReference.Query可用资金Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Query可用资金(inValue);
            return retVal.Query可用资金Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query可用资金Response> AASClient.AASServiceReference.AASService.Query可用资金Async(AASClient.AASServiceReference.Query可用资金Request request) {
            return base.Channel.Query可用资金Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Query可用资金Response> Query可用资金Async(string userName, string coinType) {
            AASClient.AASServiceReference.Query可用资金Request inValue = new AASClient.AASServiceReference.Query可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            return ((AASClient.AASServiceReference.AASService)(this)).Query可用资金Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryAll可用资金Response AASClient.AASServiceReference.AASService.QueryAll可用资金(AASClient.AASServiceReference.QueryAll可用资金Request request) {
            return base.Channel.QueryAll可用资金(request);
        }
        
        public DbDataSet.可用资金DataTable QueryAll可用资金() {
            AASClient.AASServiceReference.QueryAll可用资金Request inValue = new AASClient.AASServiceReference.QueryAll可用资金Request();
            AASClient.AASServiceReference.QueryAll可用资金Response retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryAll可用资金(inValue);
            return retVal.QueryAll可用资金Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAll可用资金Response> AASClient.AASServiceReference.AASService.QueryAll可用资金Async(AASClient.AASServiceReference.QueryAll可用资金Request request) {
            return base.Channel.QueryAll可用资金Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAll可用资金Response> QueryAll可用资金Async() {
            AASClient.AASServiceReference.QueryAll可用资金Request inValue = new AASClient.AASServiceReference.QueryAll可用资金Request();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryAll可用资金Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddAccountRelationResponse AASClient.AASServiceReference.AASService.AddAccountRelation(AASClient.AASServiceReference.AddAccountRelationRequest request) {
            return base.Channel.AddAccountRelation(request);
        }
        
        public string AddAccountRelation(string trader, string account) {
            AASClient.AASServiceReference.AddAccountRelationRequest inValue = new AASClient.AASServiceReference.AddAccountRelationRequest();
            inValue.trader = trader;
            inValue.account = account;
            AASClient.AASServiceReference.AddAccountRelationResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddAccountRelation(inValue);
            return retVal.AddAccountRelationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddAccountRelationResponse> AASClient.AASServiceReference.AASService.AddAccountRelationAsync(AASClient.AASServiceReference.AddAccountRelationRequest request) {
            return base.Channel.AddAccountRelationAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddAccountRelationResponse> AddAccountRelationAsync(string trader, string account) {
            AASClient.AASServiceReference.AddAccountRelationRequest inValue = new AASClient.AASServiceReference.AddAccountRelationRequest();
            inValue.trader = trader;
            inValue.account = account;
            return ((AASClient.AASServiceReference.AASService)(this)).AddAccountRelationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteAccountRelationResponse AASClient.AASServiceReference.AASService.DeleteAccountRelation(AASClient.AASServiceReference.DeleteAccountRelationRequest request) {
            return base.Channel.DeleteAccountRelation(request);
        }
        
        public string DeleteAccountRelation(string trader) {
            AASClient.AASServiceReference.DeleteAccountRelationRequest inValue = new AASClient.AASServiceReference.DeleteAccountRelationRequest();
            inValue.trader = trader;
            AASClient.AASServiceReference.DeleteAccountRelationResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteAccountRelation(inValue);
            return retVal.DeleteAccountRelationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteAccountRelationResponse> AASClient.AASServiceReference.AASService.DeleteAccountRelationAsync(AASClient.AASServiceReference.DeleteAccountRelationRequest request) {
            return base.Channel.DeleteAccountRelationAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteAccountRelationResponse> DeleteAccountRelationAsync(string trader) {
            AASClient.AASServiceReference.DeleteAccountRelationRequest inValue = new AASClient.AASServiceReference.DeleteAccountRelationRequest();
            inValue.trader = trader;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteAccountRelationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateAccountRelationResponse AASClient.AASServiceReference.AASService.UpdateAccountRelation(AASClient.AASServiceReference.UpdateAccountRelationRequest request) {
            return base.Channel.UpdateAccountRelation(request);
        }
        
        public string UpdateAccountRelation(string trader, string account) {
            AASClient.AASServiceReference.UpdateAccountRelationRequest inValue = new AASClient.AASServiceReference.UpdateAccountRelationRequest();
            inValue.trader = trader;
            inValue.account = account;
            AASClient.AASServiceReference.UpdateAccountRelationResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateAccountRelation(inValue);
            return retVal.UpdateAccountRelationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateAccountRelationResponse> AASClient.AASServiceReference.AASService.UpdateAccountRelationAsync(AASClient.AASServiceReference.UpdateAccountRelationRequest request) {
            return base.Channel.UpdateAccountRelationAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateAccountRelationResponse> UpdateAccountRelationAsync(string trader, string account) {
            AASClient.AASServiceReference.UpdateAccountRelationRequest inValue = new AASClient.AASServiceReference.UpdateAccountRelationRequest();
            inValue.trader = trader;
            inValue.account = account;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateAccountRelationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryAccountRelationResponse AASClient.AASServiceReference.AASService.QueryAccountRelation(AASClient.AASServiceReference.QueryAccountRelationRequest request) {
            return base.Channel.QueryAccountRelation(request);
        }
        
        public DbDataSet.交易账户关联DataTable QueryAccountRelation() {
            AASClient.AASServiceReference.QueryAccountRelationRequest inValue = new AASClient.AASServiceReference.QueryAccountRelationRequest();
            AASClient.AASServiceReference.QueryAccountRelationResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryAccountRelation(inValue);
            return retVal.QueryAccountRelationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountRelationResponse> AASClient.AASServiceReference.AASService.QueryAccountRelationAsync(AASClient.AASServiceReference.QueryAccountRelationRequest request) {
            return base.Channel.QueryAccountRelationAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountRelationResponse> QueryAccountRelationAsync() {
            AASClient.AASServiceReference.QueryAccountRelationRequest inValue = new AASClient.AASServiceReference.QueryAccountRelationRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryAccountRelationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QuerySingleUserResponse AASClient.AASServiceReference.AASService.QuerySingleUser(AASClient.AASServiceReference.QuerySingleUserRequest request) {
            return base.Channel.QuerySingleUser(request);
        }
        
        public DbDataSet.平台用户DataTable QuerySingleUser(string ClientVersion) {
            AASClient.AASServiceReference.QuerySingleUserRequest inValue = new AASClient.AASServiceReference.QuerySingleUserRequest();
            inValue.ClientVersion = ClientVersion;
            AASClient.AASServiceReference.QuerySingleUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QuerySingleUser(inValue);
            return retVal.QuerySingleUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QuerySingleUserResponse> AASClient.AASServiceReference.AASService.QuerySingleUserAsync(AASClient.AASServiceReference.QuerySingleUserRequest request) {
            return base.Channel.QuerySingleUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QuerySingleUserResponse> QuerySingleUserAsync(string ClientVersion) {
            AASClient.AASServiceReference.QuerySingleUserRequest inValue = new AASClient.AASServiceReference.QuerySingleUserRequest();
            inValue.ClientVersion = ClientVersion;
            return ((AASClient.AASServiceReference.AASService)(this)).QuerySingleUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DecryptResponse AASClient.AASServiceReference.AASService.Decrypt(AASClient.AASServiceReference.DecryptRequest request) {
            return base.Channel.Decrypt(request);
        }
        
        public string Decrypt(string string1) {
            AASClient.AASServiceReference.DecryptRequest inValue = new AASClient.AASServiceReference.DecryptRequest();
            inValue.string1 = string1;
            AASClient.AASServiceReference.DecryptResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).Decrypt(inValue);
            return retVal.DecryptResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DecryptResponse> AASClient.AASServiceReference.AASService.DecryptAsync(AASClient.AASServiceReference.DecryptRequest request) {
            return base.Channel.DecryptAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DecryptResponse> DecryptAsync(string string1) {
            AASClient.AASServiceReference.DecryptRequest inValue = new AASClient.AASServiceReference.DecryptRequest();
            inValue.string1 = string1;
            return ((AASClient.AASServiceReference.AASService)(this)).DecryptAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Get交易服务器Response AASClient.AASServiceReference.AASService.Get交易服务器(AASClient.AASServiceReference.Get交易服务器Request request) {
            return base.Channel.Get交易服务器(request);
        }
        
        public string[] Get交易服务器(string QS) {
            AASClient.AASServiceReference.Get交易服务器Request inValue = new AASClient.AASServiceReference.Get交易服务器Request();
            inValue.QS = QS;
            AASClient.AASServiceReference.Get交易服务器Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Get交易服务器(inValue);
            return retVal.Get交易服务器Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Get交易服务器Response> AASClient.AASServiceReference.AASService.Get交易服务器Async(AASClient.AASServiceReference.Get交易服务器Request request) {
            return base.Channel.Get交易服务器Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Get交易服务器Response> Get交易服务器Async(string QS) {
            AASClient.AASServiceReference.Get交易服务器Request inValue = new AASClient.AASServiceReference.Get交易服务器Request();
            inValue.QS = QS;
            return ((AASClient.AASServiceReference.AASService)(this)).Get交易服务器Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Get行情服务器Response AASClient.AASServiceReference.AASService.Get行情服务器(AASClient.AASServiceReference.Get行情服务器Request request) {
            return base.Channel.Get行情服务器(request);
        }
        
        public string[] Get行情服务器() {
            AASClient.AASServiceReference.Get行情服务器Request inValue = new AASClient.AASServiceReference.Get行情服务器Request();
            AASClient.AASServiceReference.Get行情服务器Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Get行情服务器(inValue);
            return retVal.Get行情服务器Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Get行情服务器Response> AASClient.AASServiceReference.AASService.Get行情服务器Async(AASClient.AASServiceReference.Get行情服务器Request request) {
            return base.Channel.Get行情服务器Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Get行情服务器Response> Get行情服务器Async() {
            AASClient.AASServiceReference.Get行情服务器Request inValue = new AASClient.AASServiceReference.Get行情服务器Request();
            return ((AASClient.AASServiceReference.AASService)(this)).Get行情服务器Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.GetDataServerIPResponse AASClient.AASServiceReference.AASService.GetDataServerIP(AASClient.AASServiceReference.GetDataServerIPRequest request) {
            return base.Channel.GetDataServerIP(request);
        }
        
        public string GetDataServerIP() {
            AASClient.AASServiceReference.GetDataServerIPRequest inValue = new AASClient.AASServiceReference.GetDataServerIPRequest();
            AASClient.AASServiceReference.GetDataServerIPResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).GetDataServerIP(inValue);
            return retVal.GetDataServerIPResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.GetDataServerIPResponse> AASClient.AASServiceReference.AASService.GetDataServerIPAsync(AASClient.AASServiceReference.GetDataServerIPRequest request) {
            return base.Channel.GetDataServerIPAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.GetDataServerIPResponse> GetDataServerIPAsync() {
            AASClient.AASServiceReference.GetDataServerIPRequest inValue = new AASClient.AASServiceReference.GetDataServerIPRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).GetDataServerIPAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryClientIPResponse AASClient.AASServiceReference.AASService.QueryClientIP(AASClient.AASServiceReference.QueryClientIPRequest request) {
            return base.Channel.QueryClientIP(request);
        }
        
        public string QueryClientIP() {
            AASClient.AASServiceReference.QueryClientIPRequest inValue = new AASClient.AASServiceReference.QueryClientIPRequest();
            AASClient.AASServiceReference.QueryClientIPResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryClientIP(inValue);
            return retVal.QueryClientIPResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryClientIPResponse> AASClient.AASServiceReference.AASService.QueryClientIPAsync(AASClient.AASServiceReference.QueryClientIPRequest request) {
            return base.Channel.QueryClientIPAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryClientIPResponse> QueryClientIPAsync() {
            AASClient.AASServiceReference.QueryClientIPRequest inValue = new AASClient.AASServiceReference.QueryClientIPRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryClientIPAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryUserResponse AASClient.AASServiceReference.AASService.QueryUser(AASClient.AASServiceReference.QueryUserRequest request) {
            return base.Channel.QueryUser(request);
        }
        
        public DbDataSet.平台用户DataTable QueryUser() {
            AASClient.AASServiceReference.QueryUserRequest inValue = new AASClient.AASServiceReference.QueryUserRequest();
            AASClient.AASServiceReference.QueryUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryUser(inValue);
            return retVal.QueryUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryUserResponse> AASClient.AASServiceReference.AASService.QueryUserAsync(AASClient.AASServiceReference.QueryUserRequest request) {
            return base.Channel.QueryUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryUserResponse> QueryUserAsync() {
            AASClient.AASServiceReference.QueryUserRequest inValue = new AASClient.AASServiceReference.QueryUserRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.ResetPasswordResponse AASClient.AASServiceReference.AASService.ResetPassword(AASClient.AASServiceReference.ResetPasswordRequest request) {
            return base.Channel.ResetPassword(request);
        }
        
        public void ResetPassword(string UserName, string Password) {
            AASClient.AASServiceReference.ResetPasswordRequest inValue = new AASClient.AASServiceReference.ResetPasswordRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            AASClient.AASServiceReference.ResetPasswordResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).ResetPassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ResetPasswordResponse> AASClient.AASServiceReference.AASService.ResetPasswordAsync(AASClient.AASServiceReference.ResetPasswordRequest request) {
            return base.Channel.ResetPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.ResetPasswordResponse> ResetPasswordAsync(string UserName, string Password) {
            AASClient.AASServiceReference.ResetPasswordRequest inValue = new AASClient.AASServiceReference.ResetPasswordRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            return ((AASClient.AASServiceReference.AASService)(this)).ResetPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddUserResponse AASClient.AASServiceReference.AASService.AddUser(AASClient.AASServiceReference.AddUserRequest request) {
            return base.Channel.AddUser(request);
        }
        
        public void AddUser(string UserName, string Password, AASClient.AASServiceReference.角色 Role, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 Region) {
            AASClient.AASServiceReference.AddUserRequest inValue = new AASClient.AASServiceReference.AddUserRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.Role = Role;
            inValue.仓位限制 = 仓位限制;
            inValue.亏损限制 = 亏损限制;
            inValue.手续费率 = 手续费率;
            inValue.允许删除碎股订单 = 允许删除碎股订单;
            inValue.Region = Region;
            AASClient.AASServiceReference.AddUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddUserResponse> AASClient.AASServiceReference.AASService.AddUserAsync(AASClient.AASServiceReference.AddUserRequest request) {
            return base.Channel.AddUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddUserResponse> AddUserAsync(string UserName, string Password, AASClient.AASServiceReference.角色 Role, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 Region) {
            AASClient.AASServiceReference.AddUserRequest inValue = new AASClient.AASServiceReference.AddUserRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.Role = Role;
            inValue.仓位限制 = 仓位限制;
            inValue.亏损限制 = 亏损限制;
            inValue.手续费率 = 手续费率;
            inValue.允许删除碎股订单 = 允许删除碎股订单;
            inValue.Region = Region;
            return ((AASClient.AASServiceReference.AASService)(this)).AddUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateUserResponse AASClient.AASServiceReference.AASService.UpdateUser(AASClient.AASServiceReference.UpdateUserRequest request) {
            return base.Channel.UpdateUser(request);
        }
        
        public void UpdateUser(string UserName, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 分组1) {
            AASClient.AASServiceReference.UpdateUserRequest inValue = new AASClient.AASServiceReference.UpdateUserRequest();
            inValue.UserName = UserName;
            inValue.仓位限制 = 仓位限制;
            inValue.亏损限制 = 亏损限制;
            inValue.手续费率 = 手续费率;
            inValue.允许删除碎股订单 = 允许删除碎股订单;
            inValue.分组1 = 分组1;
            AASClient.AASServiceReference.UpdateUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateUserResponse> AASClient.AASServiceReference.AASService.UpdateUserAsync(AASClient.AASServiceReference.UpdateUserRequest request) {
            return base.Channel.UpdateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateUserResponse> UpdateUserAsync(string UserName, decimal 仓位限制, decimal 亏损限制, decimal 手续费率, bool 允许删除碎股订单, AASClient.AASServiceReference.分组 分组1) {
            AASClient.AASServiceReference.UpdateUserRequest inValue = new AASClient.AASServiceReference.UpdateUserRequest();
            inValue.UserName = UserName;
            inValue.仓位限制 = 仓位限制;
            inValue.亏损限制 = 亏损限制;
            inValue.手续费率 = 手续费率;
            inValue.允许删除碎股订单 = 允许删除碎股订单;
            inValue.分组1 = 分组1;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteUserResponse AASClient.AASServiceReference.AASService.DeleteUser(AASClient.AASServiceReference.DeleteUserRequest request) {
            return base.Channel.DeleteUser(request);
        }
        
        public void DeleteUser(string UserName) {
            AASClient.AASServiceReference.DeleteUserRequest inValue = new AASClient.AASServiceReference.DeleteUserRequest();
            inValue.UserName = UserName;
            AASClient.AASServiceReference.DeleteUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteUserResponse> AASClient.AASServiceReference.AASService.DeleteUserAsync(AASClient.AASServiceReference.DeleteUserRequest request) {
            return base.Channel.DeleteUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteUserResponse> DeleteUserAsync(string UserName) {
            AASClient.AASServiceReference.DeleteUserRequest inValue = new AASClient.AASServiceReference.DeleteUserRequest();
            inValue.UserName = UserName;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryFKResponse AASClient.AASServiceReference.AASService.QueryFK(AASClient.AASServiceReference.QueryFKRequest request) {
            return base.Channel.QueryFK(request);
        }
        
        public DbDataSet.平台用户DataTable QueryFK() {
            AASClient.AASServiceReference.QueryFKRequest inValue = new AASClient.AASServiceReference.QueryFKRequest();
            AASClient.AASServiceReference.QueryFKResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryFK(inValue);
            return retVal.QueryFKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryFKResponse> AASClient.AASServiceReference.AASService.QueryFKAsync(AASClient.AASServiceReference.QueryFKRequest request) {
            return base.Channel.QueryFKAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryFKResponse> QueryFKAsync() {
            AASClient.AASServiceReference.QueryFKRequest inValue = new AASClient.AASServiceReference.QueryFKRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryFKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryJyBelongFKResponse AASClient.AASServiceReference.AASService.QueryJyBelongFK(AASClient.AASServiceReference.QueryJyBelongFKRequest request) {
            return base.Channel.QueryJyBelongFK(request);
        }
        
        public DbDataSet.平台用户DataTable QueryJyBelongFK(string FKUserName) {
            AASClient.AASServiceReference.QueryJyBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyBelongFKRequest();
            inValue.FKUserName = FKUserName;
            AASClient.AASServiceReference.QueryJyBelongFKResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryJyBelongFK(inValue);
            return retVal.QueryJyBelongFKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyBelongFKResponse> AASClient.AASServiceReference.AASService.QueryJyBelongFKAsync(AASClient.AASServiceReference.QueryJyBelongFKRequest request) {
            return base.Channel.QueryJyBelongFKAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyBelongFKResponse> QueryJyBelongFKAsync(string FKUserName) {
            AASClient.AASServiceReference.QueryJyBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyBelongFKRequest();
            inValue.FKUserName = FKUserName;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryJyBelongFKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryJyNotBelongFKResponse AASClient.AASServiceReference.AASService.QueryJyNotBelongFK(AASClient.AASServiceReference.QueryJyNotBelongFKRequest request) {
            return base.Channel.QueryJyNotBelongFK(request);
        }
        
        public DbDataSet.平台用户DataTable QueryJyNotBelongFK(string FKUserName) {
            AASClient.AASServiceReference.QueryJyNotBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyNotBelongFKRequest();
            inValue.FKUserName = FKUserName;
            AASClient.AASServiceReference.QueryJyNotBelongFKResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryJyNotBelongFK(inValue);
            return retVal.QueryJyNotBelongFKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyNotBelongFKResponse> AASClient.AASServiceReference.AASService.QueryJyNotBelongFKAsync(AASClient.AASServiceReference.QueryJyNotBelongFKRequest request) {
            return base.Channel.QueryJyNotBelongFKAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyNotBelongFKResponse> QueryJyNotBelongFKAsync(string FKUserName) {
            AASClient.AASServiceReference.QueryJyNotBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyNotBelongFKRequest();
            inValue.FKUserName = FKUserName;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryJyNotBelongFKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddTraderToRCResponse AASClient.AASServiceReference.AASService.AddTraderToRC(AASClient.AASServiceReference.AddTraderToRCRequest request) {
            return base.Channel.AddTraderToRC(request);
        }
        
        public void AddTraderToRC(string RC, string[] Traders) {
            AASClient.AASServiceReference.AddTraderToRCRequest inValue = new AASClient.AASServiceReference.AddTraderToRCRequest();
            inValue.RC = RC;
            inValue.Traders = Traders;
            AASClient.AASServiceReference.AddTraderToRCResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddTraderToRC(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderToRCResponse> AASClient.AASServiceReference.AASService.AddTraderToRCAsync(AASClient.AASServiceReference.AddTraderToRCRequest request) {
            return base.Channel.AddTraderToRCAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderToRCResponse> AddTraderToRCAsync(string RC, string[] Traders) {
            AASClient.AASServiceReference.AddTraderToRCRequest inValue = new AASClient.AASServiceReference.AddTraderToRCRequest();
            inValue.RC = RC;
            inValue.Traders = Traders;
            return ((AASClient.AASServiceReference.AASService)(this)).AddTraderToRCAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteTraderFromRCResponse AASClient.AASServiceReference.AASService.DeleteTraderFromRC(AASClient.AASServiceReference.DeleteTraderFromRCRequest request) {
            return base.Channel.DeleteTraderFromRC(request);
        }
        
        public void DeleteTraderFromRC(string RC, string[] Traders) {
            AASClient.AASServiceReference.DeleteTraderFromRCRequest inValue = new AASClient.AASServiceReference.DeleteTraderFromRCRequest();
            inValue.RC = RC;
            inValue.Traders = Traders;
            AASClient.AASServiceReference.DeleteTraderFromRCResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteTraderFromRC(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTraderFromRCResponse> AASClient.AASServiceReference.AASService.DeleteTraderFromRCAsync(AASClient.AASServiceReference.DeleteTraderFromRCRequest request) {
            return base.Channel.DeleteTraderFromRCAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTraderFromRCResponse> DeleteTraderFromRCAsync(string RC, string[] Traders) {
            AASClient.AASServiceReference.DeleteTraderFromRCRequest inValue = new AASClient.AASServiceReference.DeleteTraderFromRCRequest();
            inValue.RC = RC;
            inValue.Traders = Traders;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteTraderFromRCAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryECoinQsAccountResponse AASClient.AASServiceReference.AASService.QueryECoinQsAccount(AASClient.AASServiceReference.QueryECoinQsAccountRequest request) {
            return base.Channel.QueryECoinQsAccount(request);
        }
        
        public DbDataSet.电子币帐户DataTable QueryECoinQsAccount() {
            AASClient.AASServiceReference.QueryECoinQsAccountRequest inValue = new AASClient.AASServiceReference.QueryECoinQsAccountRequest();
            AASClient.AASServiceReference.QueryECoinQsAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryECoinQsAccount(inValue);
            return retVal.QueryECoinQsAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryECoinQsAccountResponse> AASClient.AASServiceReference.AASService.QueryECoinQsAccountAsync(AASClient.AASServiceReference.QueryECoinQsAccountRequest request) {
            return base.Channel.QueryECoinQsAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryECoinQsAccountResponse> QueryECoinQsAccountAsync() {
            AASClient.AASServiceReference.QueryECoinQsAccountRequest inValue = new AASClient.AASServiceReference.QueryECoinQsAccountRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryECoinQsAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.EnableECoinQSAccountResponse AASClient.AASServiceReference.AASService.EnableECoinQSAccount(AASClient.AASServiceReference.EnableECoinQSAccountRequest request) {
            return base.Channel.EnableECoinQSAccount(request);
        }
        
        public void EnableECoinQSAccount(string Name, bool Enabled) {
            AASClient.AASServiceReference.EnableECoinQSAccountRequest inValue = new AASClient.AASServiceReference.EnableECoinQSAccountRequest();
            inValue.Name = Name;
            inValue.Enabled = Enabled;
            AASClient.AASServiceReference.EnableECoinQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).EnableECoinQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableECoinQSAccountResponse> AASClient.AASServiceReference.AASService.EnableECoinQSAccountAsync(AASClient.AASServiceReference.EnableECoinQSAccountRequest request) {
            return base.Channel.EnableECoinQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableECoinQSAccountResponse> EnableECoinQSAccountAsync(string Name, bool Enabled) {
            AASClient.AASServiceReference.EnableECoinQSAccountRequest inValue = new AASClient.AASServiceReference.EnableECoinQSAccountRequest();
            inValue.Name = Name;
            inValue.Enabled = Enabled;
            return ((AASClient.AASServiceReference.AASService)(this)).EnableECoinQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddECoinQSAccountResponse AASClient.AASServiceReference.AASService.AddECoinQSAccount(AASClient.AASServiceReference.AddECoinQSAccountRequest request) {
            return base.Channel.AddECoinQSAccount(request);
        }
        
        public void AddECoinQSAccount(bool Enabled, string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            AASClient.AASServiceReference.AddECoinQSAccountRequest inValue = new AASClient.AASServiceReference.AddECoinQSAccountRequest();
            inValue.Enabled = Enabled;
            inValue.Name = Name;
            inValue.交易平台 = 交易平台;
            inValue.登录帐号 = 登录帐号;
            inValue.apiKey = apiKey;
            inValue.secretKey = secretKey;
            AASClient.AASServiceReference.AddECoinQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddECoinQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddECoinQSAccountResponse> AASClient.AASServiceReference.AASService.AddECoinQSAccountAsync(AASClient.AASServiceReference.AddECoinQSAccountRequest request) {
            return base.Channel.AddECoinQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddECoinQSAccountResponse> AddECoinQSAccountAsync(bool Enabled, string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            AASClient.AASServiceReference.AddECoinQSAccountRequest inValue = new AASClient.AASServiceReference.AddECoinQSAccountRequest();
            inValue.Enabled = Enabled;
            inValue.Name = Name;
            inValue.交易平台 = 交易平台;
            inValue.登录帐号 = 登录帐号;
            inValue.apiKey = apiKey;
            inValue.secretKey = secretKey;
            return ((AASClient.AASServiceReference.AASService)(this)).AddECoinQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateECoinQSAccountResponse AASClient.AASServiceReference.AASService.UpdateECoinQSAccount(AASClient.AASServiceReference.UpdateECoinQSAccountRequest request) {
            return base.Channel.UpdateECoinQSAccount(request);
        }
        
        public void UpdateECoinQSAccount(string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            AASClient.AASServiceReference.UpdateECoinQSAccountRequest inValue = new AASClient.AASServiceReference.UpdateECoinQSAccountRequest();
            inValue.Name = Name;
            inValue.交易平台 = 交易平台;
            inValue.登录帐号 = 登录帐号;
            inValue.apiKey = apiKey;
            inValue.secretKey = secretKey;
            AASClient.AASServiceReference.UpdateECoinQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateECoinQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateECoinQSAccountResponse> AASClient.AASServiceReference.AASService.UpdateECoinQSAccountAsync(AASClient.AASServiceReference.UpdateECoinQSAccountRequest request) {
            return base.Channel.UpdateECoinQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateECoinQSAccountResponse> UpdateECoinQSAccountAsync(string Name, string 交易平台, string 登录帐号, string apiKey, string secretKey) {
            AASClient.AASServiceReference.UpdateECoinQSAccountRequest inValue = new AASClient.AASServiceReference.UpdateECoinQSAccountRequest();
            inValue.Name = Name;
            inValue.交易平台 = 交易平台;
            inValue.登录帐号 = 登录帐号;
            inValue.apiKey = apiKey;
            inValue.secretKey = secretKey;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateECoinQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteECoinQSAccountResponse AASClient.AASServiceReference.AASService.DeleteECoinQSAccount(AASClient.AASServiceReference.DeleteECoinQSAccountRequest request) {
            return base.Channel.DeleteECoinQSAccount(request);
        }
        
        public void DeleteECoinQSAccount(string Name) {
            AASClient.AASServiceReference.DeleteECoinQSAccountRequest inValue = new AASClient.AASServiceReference.DeleteECoinQSAccountRequest();
            inValue.Name = Name;
            AASClient.AASServiceReference.DeleteECoinQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteECoinQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteECoinQSAccountResponse> AASClient.AASServiceReference.AASService.DeleteECoinQSAccountAsync(AASClient.AASServiceReference.DeleteECoinQSAccountRequest request) {
            return base.Channel.DeleteECoinQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteECoinQSAccountResponse> DeleteECoinQSAccountAsync(string Name) {
            AASClient.AASServiceReference.DeleteECoinQSAccountRequest inValue = new AASClient.AASServiceReference.DeleteECoinQSAccountRequest();
            inValue.Name = Name;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteECoinQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryAccountCoinResponse AASClient.AASServiceReference.AASService.QueryAccountCoin(AASClient.AASServiceReference.QueryAccountCoinRequest request) {
            return base.Channel.QueryAccountCoin(request);
        }
        
        public AASClient.AASServiceReference.AccounCoin[] QueryAccountCoin(string 交易员, string[] list) {
            AASClient.AASServiceReference.QueryAccountCoinRequest inValue = new AASClient.AASServiceReference.QueryAccountCoinRequest();
            inValue.交易员 = 交易员;
            inValue.list = list;
            AASClient.AASServiceReference.QueryAccountCoinResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryAccountCoin(inValue);
            return retVal.QueryAccountCoinResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountCoinResponse> AASClient.AASServiceReference.AASService.QueryAccountCoinAsync(AASClient.AASServiceReference.QueryAccountCoinRequest request) {
            return base.Channel.QueryAccountCoinAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryAccountCoinResponse> QueryAccountCoinAsync(string 交易员, string[] list) {
            AASClient.AASServiceReference.QueryAccountCoinRequest inValue = new AASClient.AASServiceReference.QueryAccountCoinRequest();
            inValue.交易员 = 交易员;
            inValue.list = list;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryAccountCoinAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryCoinQtyResponse AASClient.AASServiceReference.AASService.QueryCoinQty(AASClient.AASServiceReference.QueryCoinQtyRequest request) {
            return base.Channel.QueryCoinQty(request);
        }
        
        public decimal QueryCoinQty(string 交易员, string Coin) {
            AASClient.AASServiceReference.QueryCoinQtyRequest inValue = new AASClient.AASServiceReference.QueryCoinQtyRequest();
            inValue.交易员 = 交易员;
            inValue.Coin = Coin;
            AASClient.AASServiceReference.QueryCoinQtyResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryCoinQty(inValue);
            return retVal.QueryCoinQtyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryCoinQtyResponse> AASClient.AASServiceReference.AASService.QueryCoinQtyAsync(AASClient.AASServiceReference.QueryCoinQtyRequest request) {
            return base.Channel.QueryCoinQtyAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryCoinQtyResponse> QueryCoinQtyAsync(string 交易员, string Coin) {
            AASClient.AASServiceReference.QueryCoinQtyRequest inValue = new AASClient.AASServiceReference.QueryCoinQtyRequest();
            inValue.交易员 = 交易员;
            inValue.Coin = Coin;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryCoinQtyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryQsAccountResponse AASClient.AASServiceReference.AASService.QueryQsAccount(AASClient.AASServiceReference.QueryQsAccountRequest request) {
            return base.Channel.QueryQsAccount(request);
        }
        
        public DbDataSet.券商帐户DataTable QueryQsAccount() {
            AASClient.AASServiceReference.QueryQsAccountRequest inValue = new AASClient.AASServiceReference.QueryQsAccountRequest();
            AASClient.AASServiceReference.QueryQsAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryQsAccount(inValue);
            return retVal.QueryQsAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryQsAccountResponse> AASClient.AASServiceReference.AASService.QueryQsAccountAsync(AASClient.AASServiceReference.QueryQsAccountRequest request) {
            return base.Channel.QueryQsAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryQsAccountResponse> QueryQsAccountAsync() {
            AASClient.AASServiceReference.QueryQsAccountRequest inValue = new AASClient.AASServiceReference.QueryQsAccountRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryQsAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.EnableQSAccountResponse AASClient.AASServiceReference.AASService.EnableQSAccount(AASClient.AASServiceReference.EnableQSAccountRequest request) {
            return base.Channel.EnableQSAccount(request);
        }
        
        public void EnableQSAccount(string Name, bool Enabled) {
            AASClient.AASServiceReference.EnableQSAccountRequest inValue = new AASClient.AASServiceReference.EnableQSAccountRequest();
            inValue.Name = Name;
            inValue.Enabled = Enabled;
            AASClient.AASServiceReference.EnableQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).EnableQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableQSAccountResponse> AASClient.AASServiceReference.AASService.EnableQSAccountAsync(AASClient.AASServiceReference.EnableQSAccountRequest request) {
            return base.Channel.EnableQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.EnableQSAccountResponse> EnableQSAccountAsync(string Name, bool Enabled) {
            AASClient.AASServiceReference.EnableQSAccountRequest inValue = new AASClient.AASServiceReference.EnableQSAccountRequest();
            inValue.Name = Name;
            inValue.Enabled = Enabled;
            return ((AASClient.AASServiceReference.AASService)(this)).EnableQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddQSAccountResponse AASClient.AASServiceReference.AASService.AddQSAccount(AASClient.AASServiceReference.AddQSAccountRequest request) {
            return base.Channel.AddQSAccount(request);
        }
        
        public void AddQSAccount(bool Enabled, string Name, string QS, string Type, string 交易服务器, string Version, short YybID, string Account, string TradeAccount, string JyPassword, string TxPassword, string SHGDDM, string SZGDDM, int 查询间隔时间) {
            AASClient.AASServiceReference.AddQSAccountRequest inValue = new AASClient.AASServiceReference.AddQSAccountRequest();
            inValue.Enabled = Enabled;
            inValue.Name = Name;
            inValue.QS = QS;
            inValue.Type = Type;
            inValue.交易服务器 = 交易服务器;
            inValue.Version = Version;
            inValue.YybID = YybID;
            inValue.Account = Account;
            inValue.TradeAccount = TradeAccount;
            inValue.JyPassword = JyPassword;
            inValue.TxPassword = TxPassword;
            inValue.SHGDDM = SHGDDM;
            inValue.SZGDDM = SZGDDM;
            inValue.查询间隔时间 = 查询间隔时间;
            AASClient.AASServiceReference.AddQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddQSAccountResponse> AASClient.AASServiceReference.AASService.AddQSAccountAsync(AASClient.AASServiceReference.AddQSAccountRequest request) {
            return base.Channel.AddQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddQSAccountResponse> AddQSAccountAsync(bool Enabled, string Name, string QS, string Type, string 交易服务器, string Version, short YybID, string Account, string TradeAccount, string JyPassword, string TxPassword, string SHGDDM, string SZGDDM, int 查询间隔时间) {
            AASClient.AASServiceReference.AddQSAccountRequest inValue = new AASClient.AASServiceReference.AddQSAccountRequest();
            inValue.Enabled = Enabled;
            inValue.Name = Name;
            inValue.QS = QS;
            inValue.Type = Type;
            inValue.交易服务器 = 交易服务器;
            inValue.Version = Version;
            inValue.YybID = YybID;
            inValue.Account = Account;
            inValue.TradeAccount = TradeAccount;
            inValue.JyPassword = JyPassword;
            inValue.TxPassword = TxPassword;
            inValue.SHGDDM = SHGDDM;
            inValue.SZGDDM = SZGDDM;
            inValue.查询间隔时间 = 查询间隔时间;
            return ((AASClient.AASServiceReference.AASService)(this)).AddQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateQSAccountResponse AASClient.AASServiceReference.AASService.UpdateQSAccount(AASClient.AASServiceReference.UpdateQSAccountRequest request) {
            return base.Channel.UpdateQSAccount(request);
        }
        
        public void UpdateQSAccount(string Name, string 交易服务器, string Version, string 交易密码, string 通讯密码, int 查询间隔时间) {
            AASClient.AASServiceReference.UpdateQSAccountRequest inValue = new AASClient.AASServiceReference.UpdateQSAccountRequest();
            inValue.Name = Name;
            inValue.交易服务器 = 交易服务器;
            inValue.Version = Version;
            inValue.交易密码 = 交易密码;
            inValue.通讯密码 = 通讯密码;
            inValue.查询间隔时间 = 查询间隔时间;
            AASClient.AASServiceReference.UpdateQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateQSAccountResponse> AASClient.AASServiceReference.AASService.UpdateQSAccountAsync(AASClient.AASServiceReference.UpdateQSAccountRequest request) {
            return base.Channel.UpdateQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateQSAccountResponse> UpdateQSAccountAsync(string Name, string 交易服务器, string Version, string 交易密码, string 通讯密码, int 查询间隔时间) {
            AASClient.AASServiceReference.UpdateQSAccountRequest inValue = new AASClient.AASServiceReference.UpdateQSAccountRequest();
            inValue.Name = Name;
            inValue.交易服务器 = 交易服务器;
            inValue.Version = Version;
            inValue.交易密码 = 交易密码;
            inValue.通讯密码 = 通讯密码;
            inValue.查询间隔时间 = 查询间隔时间;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteQSAccountResponse AASClient.AASServiceReference.AASService.DeleteQSAccount(AASClient.AASServiceReference.DeleteQSAccountRequest request) {
            return base.Channel.DeleteQSAccount(request);
        }
        
        public void DeleteQSAccount(string Name) {
            AASClient.AASServiceReference.DeleteQSAccountRequest inValue = new AASClient.AASServiceReference.DeleteQSAccountRequest();
            inValue.Name = Name;
            AASClient.AASServiceReference.DeleteQSAccountResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteQSAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteQSAccountResponse> AASClient.AASServiceReference.AASService.DeleteQSAccountAsync(AASClient.AASServiceReference.DeleteQSAccountRequest request) {
            return base.Channel.DeleteQSAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteQSAccountResponse> DeleteQSAccountAsync(string Name) {
            AASClient.AASServiceReference.DeleteQSAccountRequest inValue = new AASClient.AASServiceReference.DeleteQSAccountRequest();
            inValue.Name = Name;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteQSAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.TestResponse AASClient.AASServiceReference.AASService.Test(AASClient.AASServiceReference.TestRequest request) {
            return base.Channel.Test(request);
        }
        
        public string Test(string IP, short Port, string Version, short YybID, string AccountNo, string TradeAccount, string JyPassword, string TxPassword) {
            AASClient.AASServiceReference.TestRequest inValue = new AASClient.AASServiceReference.TestRequest();
            inValue.IP = IP;
            inValue.Port = Port;
            inValue.Version = Version;
            inValue.YybID = YybID;
            inValue.AccountNo = AccountNo;
            inValue.TradeAccount = TradeAccount;
            inValue.JyPassword = JyPassword;
            inValue.TxPassword = TxPassword;
            AASClient.AASServiceReference.TestResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).Test(inValue);
            return retVal.TestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.TestResponse> AASClient.AASServiceReference.AASService.TestAsync(AASClient.AASServiceReference.TestRequest request) {
            return base.Channel.TestAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.TestResponse> TestAsync(string IP, short Port, string Version, short YybID, string AccountNo, string TradeAccount, string JyPassword, string TxPassword) {
            AASClient.AASServiceReference.TestRequest inValue = new AASClient.AASServiceReference.TestRequest();
            inValue.IP = IP;
            inValue.Port = Port;
            inValue.Version = Version;
            inValue.YybID = YybID;
            inValue.AccountNo = AccountNo;
            inValue.TradeAccount = TradeAccount;
            inValue.JyPassword = JyPassword;
            inValue.TxPassword = TxPassword;
            return ((AASClient.AASServiceReference.AASService)(this)).TestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AccountRepayResponse AASClient.AASServiceReference.AASService.AccountRepay(AASClient.AASServiceReference.AccountRepayRequest request) {
            return base.Channel.AccountRepay(request);
        }
        
        public string AccountRepay(string group, decimal amount) {
            AASClient.AASServiceReference.AccountRepayRequest inValue = new AASClient.AASServiceReference.AccountRepayRequest();
            inValue.group = group;
            inValue.amount = amount;
            AASClient.AASServiceReference.AccountRepayResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AccountRepay(inValue);
            return retVal.AccountRepayResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AccountRepayResponse> AASClient.AASServiceReference.AASService.AccountRepayAsync(AASClient.AASServiceReference.AccountRepayRequest request) {
            return base.Channel.AccountRepayAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AccountRepayResponse> AccountRepayAsync(string group, decimal amount) {
            AASClient.AASServiceReference.AccountRepayRequest inValue = new AASClient.AASServiceReference.AccountRepayRequest();
            inValue.group = group;
            inValue.amount = amount;
            return ((AASClient.AASServiceReference.AASService)(this)).AccountRepayAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryJYResponse AASClient.AASServiceReference.AASService.QueryJY(AASClient.AASServiceReference.QueryJYRequest request) {
            return base.Channel.QueryJY(request);
        }
        
        public DbDataSet.平台用户DataTable QueryJY() {
            AASClient.AASServiceReference.QueryJYRequest inValue = new AASClient.AASServiceReference.QueryJYRequest();
            AASClient.AASServiceReference.QueryJYResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryJY(inValue);
            return retVal.QueryJYResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJYResponse> AASClient.AASServiceReference.AASService.QueryJYAsync(AASClient.AASServiceReference.QueryJYRequest request) {
            return base.Channel.QueryJYAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJYResponse> QueryJYAsync() {
            AASClient.AASServiceReference.QueryJYRequest inValue = new AASClient.AASServiceReference.QueryJYRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryJYAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryTradeLimitResponse AASClient.AASServiceReference.AASService.QueryTradeLimit(AASClient.AASServiceReference.QueryTradeLimitRequest request) {
            return base.Channel.QueryTradeLimit(request);
        }
        
        public DbDataSet.额度分配DataTable QueryTradeLimit() {
            AASClient.AASServiceReference.QueryTradeLimitRequest inValue = new AASClient.AASServiceReference.QueryTradeLimitRequest();
            AASClient.AASServiceReference.QueryTradeLimitResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryTradeLimit(inValue);
            return retVal.QueryTradeLimitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryTradeLimitResponse> AASClient.AASServiceReference.AASService.QueryTradeLimitAsync(AASClient.AASServiceReference.QueryTradeLimitRequest request) {
            return base.Channel.QueryTradeLimitAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryTradeLimitResponse> QueryTradeLimitAsync() {
            AASClient.AASServiceReference.QueryTradeLimitRequest inValue = new AASClient.AASServiceReference.QueryTradeLimitRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryTradeLimitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddTradeLimitResponse AASClient.AASServiceReference.AASService.AddTradeLimit(AASClient.AASServiceReference.AddTradeLimitRequest request) {
            return base.Channel.AddTradeLimit(request);
        }
        
        public void AddTradeLimit(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            AASClient.AASServiceReference.AddTradeLimitRequest inValue = new AASClient.AASServiceReference.AddTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            inValue.组合号 = 组合号;
            inValue.市场代码 = 市场代码;
            inValue.证券名称 = 证券名称;
            inValue.拼音缩写 = 拼音缩写;
            inValue.买模式1 = 买模式1;
            inValue.卖模式1 = 卖模式1;
            inValue.交易额度 = 交易额度;
            inValue.手续费率 = 手续费率;
            AASClient.AASServiceReference.AddTradeLimitResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddTradeLimit(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTradeLimitResponse> AASClient.AASServiceReference.AASService.AddTradeLimitAsync(AASClient.AASServiceReference.AddTradeLimitRequest request) {
            return base.Channel.AddTradeLimitAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTradeLimitResponse> AddTradeLimitAsync(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            AASClient.AASServiceReference.AddTradeLimitRequest inValue = new AASClient.AASServiceReference.AddTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            inValue.组合号 = 组合号;
            inValue.市场代码 = 市场代码;
            inValue.证券名称 = 证券名称;
            inValue.拼音缩写 = 拼音缩写;
            inValue.买模式1 = 买模式1;
            inValue.卖模式1 = 卖模式1;
            inValue.交易额度 = 交易额度;
            inValue.手续费率 = 手续费率;
            return ((AASClient.AASServiceReference.AASService)(this)).AddTradeLimitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateTradeLimitResponse AASClient.AASServiceReference.AASService.UpdateTradeLimit(AASClient.AASServiceReference.UpdateTradeLimitRequest request) {
            return base.Channel.UpdateTradeLimit(request);
        }
        
        public void UpdateTradeLimit(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            AASClient.AASServiceReference.UpdateTradeLimitRequest inValue = new AASClient.AASServiceReference.UpdateTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            inValue.组合号 = 组合号;
            inValue.市场代码 = 市场代码;
            inValue.证券名称 = 证券名称;
            inValue.拼音缩写 = 拼音缩写;
            inValue.买模式1 = 买模式1;
            inValue.卖模式1 = 卖模式1;
            inValue.交易额度 = 交易额度;
            inValue.手续费率 = 手续费率;
            AASClient.AASServiceReference.UpdateTradeLimitResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateTradeLimit(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateTradeLimitResponse> AASClient.AASServiceReference.AASService.UpdateTradeLimitAsync(AASClient.AASServiceReference.UpdateTradeLimitRequest request) {
            return base.Channel.UpdateTradeLimitAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateTradeLimitResponse> UpdateTradeLimitAsync(string 交易员, string 证券代码, string 组合号, byte 市场代码, string 证券名称, string 拼音缩写, AASClient.AASServiceReference.买模式 买模式1, AASClient.AASServiceReference.卖模式 卖模式1, decimal 交易额度, decimal 手续费率) {
            AASClient.AASServiceReference.UpdateTradeLimitRequest inValue = new AASClient.AASServiceReference.UpdateTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            inValue.组合号 = 组合号;
            inValue.市场代码 = 市场代码;
            inValue.证券名称 = 证券名称;
            inValue.拼音缩写 = 拼音缩写;
            inValue.买模式1 = 买模式1;
            inValue.卖模式1 = 卖模式1;
            inValue.交易额度 = 交易额度;
            inValue.手续费率 = 手续费率;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateTradeLimitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteTradeLimitResponse AASClient.AASServiceReference.AASService.DeleteTradeLimit(AASClient.AASServiceReference.DeleteTradeLimitRequest request) {
            return base.Channel.DeleteTradeLimit(request);
        }
        
        public void DeleteTradeLimit(string 交易员, string 证券代码) {
            AASClient.AASServiceReference.DeleteTradeLimitRequest inValue = new AASClient.AASServiceReference.DeleteTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            AASClient.AASServiceReference.DeleteTradeLimitResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteTradeLimit(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTradeLimitResponse> AASClient.AASServiceReference.AASService.DeleteTradeLimitAsync(AASClient.AASServiceReference.DeleteTradeLimitRequest request) {
            return base.Channel.DeleteTradeLimitAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteTradeLimitResponse> DeleteTradeLimitAsync(string 交易员, string 证券代码) {
            AASClient.AASServiceReference.DeleteTradeLimitRequest inValue = new AASClient.AASServiceReference.DeleteTradeLimitRequest();
            inValue.交易员 = 交易员;
            inValue.证券代码 = 证券代码;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteTradeLimitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Query普通用户Response AASClient.AASServiceReference.AASService.Query普通用户(AASClient.AASServiceReference.Query普通用户Request request) {
            return base.Channel.Query普通用户(request);
        }
        
        public DbDataSet.平台用户DataTable Query普通用户() {
            AASClient.AASServiceReference.Query普通用户Request inValue = new AASClient.AASServiceReference.Query普通用户Request();
            AASClient.AASServiceReference.Query普通用户Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Query普通用户(inValue);
            return retVal.Query普通用户Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query普通用户Response> AASClient.AASServiceReference.AASService.Query普通用户Async(AASClient.AASServiceReference.Query普通用户Request request) {
            return base.Channel.Query普通用户Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Query普通用户Response> Query普通用户Async() {
            AASClient.AASServiceReference.Query普通用户Request inValue = new AASClient.AASServiceReference.Query普通用户Request();
            return ((AASClient.AASServiceReference.AASService)(this)).Query普通用户Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryMACBelongUserResponse AASClient.AASServiceReference.AASService.QueryMACBelongUser(AASClient.AASServiceReference.QueryMACBelongUserRequest request) {
            return base.Channel.QueryMACBelongUser(request);
        }
        
        public DbDataSet.MAC地址分配DataTable QueryMACBelongUser(string UserName) {
            AASClient.AASServiceReference.QueryMACBelongUserRequest inValue = new AASClient.AASServiceReference.QueryMACBelongUserRequest();
            inValue.UserName = UserName;
            AASClient.AASServiceReference.QueryMACBelongUserResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryMACBelongUser(inValue);
            return retVal.QueryMACBelongUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryMACBelongUserResponse> AASClient.AASServiceReference.AASService.QueryMACBelongUserAsync(AASClient.AASServiceReference.QueryMACBelongUserRequest request) {
            return base.Channel.QueryMACBelongUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryMACBelongUserResponse> QueryMACBelongUserAsync(string UserName) {
            AASClient.AASServiceReference.QueryMACBelongUserRequest inValue = new AASClient.AASServiceReference.QueryMACBelongUserRequest();
            inValue.UserName = UserName;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryMACBelongUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddMACResponse AASClient.AASServiceReference.AASService.AddMAC(AASClient.AASServiceReference.AddMACRequest request) {
            return base.Channel.AddMAC(request);
        }
        
        public void AddMAC(string UserName, string MAC) {
            AASClient.AASServiceReference.AddMACRequest inValue = new AASClient.AASServiceReference.AddMACRequest();
            inValue.UserName = UserName;
            inValue.MAC = MAC;
            AASClient.AASServiceReference.AddMACResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddMAC(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddMACResponse> AASClient.AASServiceReference.AASService.AddMACAsync(AASClient.AASServiceReference.AddMACRequest request) {
            return base.Channel.AddMACAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddMACResponse> AddMACAsync(string UserName, string MAC) {
            AASClient.AASServiceReference.AddMACRequest inValue = new AASClient.AASServiceReference.AddMACRequest();
            inValue.UserName = UserName;
            inValue.MAC = MAC;
            return ((AASClient.AASServiceReference.AASService)(this)).AddMACAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.DeleteMACResponse AASClient.AASServiceReference.AASService.DeleteMAC(AASClient.AASServiceReference.DeleteMACRequest request) {
            return base.Channel.DeleteMAC(request);
        }
        
        public void DeleteMAC(string UserName, string MAC) {
            AASClient.AASServiceReference.DeleteMACRequest inValue = new AASClient.AASServiceReference.DeleteMACRequest();
            inValue.UserName = UserName;
            inValue.MAC = MAC;
            AASClient.AASServiceReference.DeleteMACResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).DeleteMAC(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteMACResponse> AASClient.AASServiceReference.AASService.DeleteMACAsync(AASClient.AASServiceReference.DeleteMACRequest request) {
            return base.Channel.DeleteMACAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.DeleteMACResponse> DeleteMACAsync(string UserName, string MAC) {
            AASClient.AASServiceReference.DeleteMACRequest inValue = new AASClient.AASServiceReference.DeleteMACRequest();
            inValue.UserName = UserName;
            inValue.MAC = MAC;
            return ((AASClient.AASServiceReference.AASService)(this)).DeleteMACAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.FectchAllTableResponse AASClient.AASServiceReference.AASService.FectchAllTable(AASClient.AASServiceReference.FectchAllTableRequest request) {
            return base.Channel.FectchAllTable(request);
        }
        
        public void FectchAllTable(string UserName) {
            AASClient.AASServiceReference.FectchAllTableRequest inValue = new AASClient.AASServiceReference.FectchAllTableRequest();
            inValue.UserName = UserName;
            AASClient.AASServiceReference.FectchAllTableResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).FectchAllTable(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.FectchAllTableResponse> AASClient.AASServiceReference.AASService.FectchAllTableAsync(AASClient.AASServiceReference.FectchAllTableRequest request) {
            return base.Channel.FectchAllTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.FectchAllTableResponse> FectchAllTableAsync(string UserName) {
            AASClient.AASServiceReference.FectchAllTableRequest inValue = new AASClient.AASServiceReference.FectchAllTableRequest();
            inValue.UserName = UserName;
            return ((AASClient.AASServiceReference.AASService)(this)).FectchAllTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.SendOrderResponse AASClient.AASServiceReference.AASService.SendOrder(AASClient.AASServiceReference.SendOrderRequest request) {
            return base.Channel.SendOrder(request);
        }
        
        public string SendOrder(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.SendOrderRequest inValue = new AASClient.AASServiceReference.SendOrderRequest();
            inValue.UserName = UserName;
            inValue.证券代码 = 证券代码;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            AASClient.AASServiceReference.SendOrderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).SendOrder(inValue);
            return retVal.SendOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.SendOrderResponse> AASClient.AASServiceReference.AASService.SendOrderAsync(AASClient.AASServiceReference.SendOrderRequest request) {
            return base.Channel.SendOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.SendOrderResponse> SendOrderAsync(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.SendOrderRequest inValue = new AASClient.AASServiceReference.SendOrderRequest();
            inValue.UserName = UserName;
            inValue.证券代码 = 证券代码;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            return ((AASClient.AASServiceReference.AASService)(this)).SendOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.SendECoinOrderResponse AASClient.AASServiceReference.AASService.SendECoinOrder(AASClient.AASServiceReference.SendECoinOrderRequest request) {
            return base.Channel.SendECoinOrder(request);
        }
        
        public string SendECoinOrder(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.SendECoinOrderRequest inValue = new AASClient.AASServiceReference.SendECoinOrderRequest();
            inValue.UserName = UserName;
            inValue.证券代码 = 证券代码;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            AASClient.AASServiceReference.SendECoinOrderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).SendECoinOrder(inValue);
            return retVal.SendECoinOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.SendECoinOrderResponse> AASClient.AASServiceReference.AASService.SendECoinOrderAsync(AASClient.AASServiceReference.SendECoinOrderRequest request) {
            return base.Channel.SendECoinOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.SendECoinOrderResponse> SendECoinOrderAsync(string UserName, string 证券代码, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.SendECoinOrderRequest inValue = new AASClient.AASServiceReference.SendECoinOrderRequest();
            inValue.UserName = UserName;
            inValue.证券代码 = 证券代码;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            return ((AASClient.AASServiceReference.AASService)(this)).SendECoinOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.CancelOrderResponse AASClient.AASServiceReference.AASService.CancelOrder(AASClient.AASServiceReference.CancelOrderRequest request) {
            return base.Channel.CancelOrder(request);
        }
        
        public string CancelOrder(string UserName, string 组合号, string 证券代码, string 证券名称, byte 市场代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.CancelOrderRequest inValue = new AASClient.AASServiceReference.CancelOrderRequest();
            inValue.UserName = UserName;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.证券名称 = 证券名称;
            inValue.市场代码 = 市场代码;
            inValue.委托编号 = 委托编号;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            AASClient.AASServiceReference.CancelOrderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).CancelOrder(inValue);
            return retVal.CancelOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelOrderResponse> AASClient.AASServiceReference.AASService.CancelOrderAsync(AASClient.AASServiceReference.CancelOrderRequest request) {
            return base.Channel.CancelOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelOrderResponse> CancelOrderAsync(string UserName, string 组合号, string 证券代码, string 证券名称, byte 市场代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.CancelOrderRequest inValue = new AASClient.AASServiceReference.CancelOrderRequest();
            inValue.UserName = UserName;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.证券名称 = 证券名称;
            inValue.市场代码 = 市场代码;
            inValue.委托编号 = 委托编号;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            return ((AASClient.AASServiceReference.AASService)(this)).CancelOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.CancelECoinOrderResponse AASClient.AASServiceReference.AASService.CancelECoinOrder(AASClient.AASServiceReference.CancelECoinOrderRequest request) {
            return base.Channel.CancelECoinOrder(request);
        }
        
        public string CancelECoinOrder(string UserName, string 组合号, string 证券代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.CancelECoinOrderRequest inValue = new AASClient.AASServiceReference.CancelECoinOrderRequest();
            inValue.UserName = UserName;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.委托编号 = 委托编号;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            AASClient.AASServiceReference.CancelECoinOrderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).CancelECoinOrder(inValue);
            return retVal.CancelECoinOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelECoinOrderResponse> AASClient.AASServiceReference.AASService.CancelECoinOrderAsync(AASClient.AASServiceReference.CancelECoinOrderRequest request) {
            return base.Channel.CancelECoinOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.CancelECoinOrderResponse> CancelECoinOrderAsync(string UserName, string 组合号, string 证券代码, string 委托编号, int 买卖方向, decimal 委托数量, decimal 委托价格) {
            AASClient.AASServiceReference.CancelECoinOrderRequest inValue = new AASClient.AASServiceReference.CancelECoinOrderRequest();
            inValue.UserName = UserName;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.委托编号 = 委托编号;
            inValue.买卖方向 = 买卖方向;
            inValue.委托数量 = 委托数量;
            inValue.委托价格 = 委托价格;
            return ((AASClient.AASServiceReference.AASService)(this)).CancelECoinOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.RefreshOrderTableResponse AASClient.AASServiceReference.AASService.RefreshOrderTable(AASClient.AASServiceReference.RefreshOrderTableRequest request) {
            return base.Channel.RefreshOrderTable(request);
        }
        
        public void RefreshOrderTable(string userName) {
            AASClient.AASServiceReference.RefreshOrderTableRequest inValue = new AASClient.AASServiceReference.RefreshOrderTableRequest();
            inValue.userName = userName;
            AASClient.AASServiceReference.RefreshOrderTableResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).RefreshOrderTable(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RefreshOrderTableResponse> AASClient.AASServiceReference.AASService.RefreshOrderTableAsync(AASClient.AASServiceReference.RefreshOrderTableRequest request) {
            return base.Channel.RefreshOrderTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.RefreshOrderTableResponse> RefreshOrderTableAsync(string userName) {
            AASClient.AASServiceReference.RefreshOrderTableRequest inValue = new AASClient.AASServiceReference.RefreshOrderTableRequest();
            inValue.userName = userName;
            return ((AASClient.AASServiceReference.AASService)(this)).RefreshOrderTableAsync(inValue);
        }
        
        public void Fectch名下交易员Table() {
            base.Channel.Fectch名下交易员Table();
        }
        
        public System.Threading.Tasks.Task Fectch名下交易员TableAsync() {
            return base.Channel.Fectch名下交易员TableAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.CloseOrderResponse AASClient.AASServiceReference.AASService.CloseOrder(AASClient.AASServiceReference.CloseOrderRequest request) {
            return base.Channel.CloseOrder(request);
        }
        
        public void CloseOrder(string 交易员, string 组合号, string 证券代码, decimal 平仓数量, decimal 平仓价格) {
            AASClient.AASServiceReference.CloseOrderRequest inValue = new AASClient.AASServiceReference.CloseOrderRequest();
            inValue.交易员 = 交易员;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.平仓数量 = 平仓数量;
            inValue.平仓价格 = 平仓价格;
            AASClient.AASServiceReference.CloseOrderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).CloseOrder(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.CloseOrderResponse> AASClient.AASServiceReference.AASService.CloseOrderAsync(AASClient.AASServiceReference.CloseOrderRequest request) {
            return base.Channel.CloseOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.CloseOrderResponse> CloseOrderAsync(string 交易员, string 组合号, string 证券代码, decimal 平仓数量, decimal 平仓价格) {
            AASClient.AASServiceReference.CloseOrderRequest inValue = new AASClient.AASServiceReference.CloseOrderRequest();
            inValue.交易员 = 交易员;
            inValue.组合号 = 组合号;
            inValue.证券代码 = 证券代码;
            inValue.平仓数量 = 平仓数量;
            inValue.平仓价格 = 平仓价格;
            return ((AASClient.AASServiceReference.AASService)(this)).CloseOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryJyLogBelongFKResponse AASClient.AASServiceReference.AASService.QueryJyLogBelongFK(AASClient.AASServiceReference.QueryJyLogBelongFKRequest request) {
            return base.Channel.QueryJyLogBelongFK(request);
        }
        
        public DbDataSet.交易日志DataTable QueryJyLogBelongFK(string UserName) {
            AASClient.AASServiceReference.QueryJyLogBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyLogBelongFKRequest();
            inValue.UserName = UserName;
            AASClient.AASServiceReference.QueryJyLogBelongFKResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryJyLogBelongFK(inValue);
            return retVal.QueryJyLogBelongFKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyLogBelongFKResponse> AASClient.AASServiceReference.AASService.QueryJyLogBelongFKAsync(AASClient.AASServiceReference.QueryJyLogBelongFKRequest request) {
            return base.Channel.QueryJyLogBelongFKAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryJyLogBelongFKResponse> QueryJyLogBelongFKAsync(string UserName) {
            AASClient.AASServiceReference.QueryJyLogBelongFKRequest inValue = new AASClient.AASServiceReference.QueryJyLogBelongFKRequest();
            inValue.UserName = UserName;
            return ((AASClient.AASServiceReference.AASService)(this)).QueryJyLogBelongFKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Query业绩BelongFKResponse AASClient.AASServiceReference.AASService.Query业绩BelongFK(AASClient.AASServiceReference.Query业绩BelongFKRequest request) {
            return base.Channel.Query业绩BelongFK(request);
        }
        
        public JyDataSet.业绩统计DataTable Query业绩BelongFK(string UserName, System.DateTime StartDate, System.DateTime EndDate) {
            AASClient.AASServiceReference.Query业绩BelongFKRequest inValue = new AASClient.AASServiceReference.Query业绩BelongFKRequest();
            inValue.UserName = UserName;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            AASClient.AASServiceReference.Query业绩BelongFKResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).Query业绩BelongFK(inValue);
            return retVal.Query业绩BelongFKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Query业绩BelongFKResponse> AASClient.AASServiceReference.AASService.Query业绩BelongFKAsync(AASClient.AASServiceReference.Query业绩BelongFKRequest request) {
            return base.Channel.Query业绩BelongFKAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Query业绩BelongFKResponse> Query业绩BelongFKAsync(string UserName, System.DateTime StartDate, System.DateTime EndDate) {
            AASClient.AASServiceReference.Query业绩BelongFKRequest inValue = new AASClient.AASServiceReference.Query业绩BelongFKRequest();
            inValue.UserName = UserName;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((AASClient.AASServiceReference.AASService)(this)).Query业绩BelongFKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.ShareLimitDocumentQueryResponse AASClient.AASServiceReference.AASService.ShareLimitDocumentQuery(AASClient.AASServiceReference.ShareLimitDocumentQueryRequest request) {
            return base.Channel.ShareLimitDocumentQuery(request);
        }
        
        public string ShareLimitDocumentQuery() {
            AASClient.AASServiceReference.ShareLimitDocumentQueryRequest inValue = new AASClient.AASServiceReference.ShareLimitDocumentQueryRequest();
            AASClient.AASServiceReference.ShareLimitDocumentQueryResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).ShareLimitDocumentQuery(inValue);
            return retVal.ShareLimitDocumentQueryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareLimitDocumentQueryResponse> AASClient.AASServiceReference.AASService.ShareLimitDocumentQueryAsync(AASClient.AASServiceReference.ShareLimitDocumentQueryRequest request) {
            return base.Channel.ShareLimitDocumentQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareLimitDocumentQueryResponse> ShareLimitDocumentQueryAsync() {
            AASClient.AASServiceReference.ShareLimitDocumentQueryRequest inValue = new AASClient.AASServiceReference.ShareLimitDocumentQueryRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).ShareLimitDocumentQueryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.ShareGroupQueryResponse AASClient.AASServiceReference.AASService.ShareGroupQuery(AASClient.AASServiceReference.ShareGroupQueryRequest request) {
            return base.Channel.ShareGroupQuery(request);
        }
        
        public AASClient.AASServiceReference.ShareLimitGroupItem[] ShareGroupQuery() {
            AASClient.AASServiceReference.ShareGroupQueryRequest inValue = new AASClient.AASServiceReference.ShareGroupQueryRequest();
            AASClient.AASServiceReference.ShareGroupQueryResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).ShareGroupQuery(inValue);
            return retVal.ShareGroupQueryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareGroupQueryResponse> AASClient.AASServiceReference.AASService.ShareGroupQueryAsync(AASClient.AASServiceReference.ShareGroupQueryRequest request) {
            return base.Channel.ShareGroupQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.ShareGroupQueryResponse> ShareGroupQueryAsync() {
            AASClient.AASServiceReference.ShareGroupQueryRequest inValue = new AASClient.AASServiceReference.ShareGroupQueryRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).ShareGroupQueryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddTraderResponse AASClient.AASServiceReference.AASService.AddTrader(AASClient.AASServiceReference.AddTraderRequest request) {
            return base.Channel.AddTrader(request);
        }
        
        public string AddTrader(string group, string trader) {
            AASClient.AASServiceReference.AddTraderRequest inValue = new AASClient.AASServiceReference.AddTraderRequest();
            inValue.group = group;
            inValue.trader = trader;
            AASClient.AASServiceReference.AddTraderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddTrader(inValue);
            return retVal.AddTraderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderResponse> AASClient.AASServiceReference.AASService.AddTraderAsync(AASClient.AASServiceReference.AddTraderRequest request) {
            return base.Channel.AddTraderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddTraderResponse> AddTraderAsync(string group, string trader) {
            AASClient.AASServiceReference.AddTraderRequest inValue = new AASClient.AASServiceReference.AddTraderRequest();
            inValue.group = group;
            inValue.trader = trader;
            return ((AASClient.AASServiceReference.AASService)(this)).AddTraderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.RemoveGroupTraderResponse AASClient.AASServiceReference.AASService.RemoveGroupTrader(AASClient.AASServiceReference.RemoveGroupTraderRequest request) {
            return base.Channel.RemoveGroupTrader(request);
        }
        
        public bool RemoveGroupTrader(string group, string trader) {
            AASClient.AASServiceReference.RemoveGroupTraderRequest inValue = new AASClient.AASServiceReference.RemoveGroupTraderRequest();
            inValue.group = group;
            inValue.trader = trader;
            AASClient.AASServiceReference.RemoveGroupTraderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).RemoveGroupTrader(inValue);
            return retVal.RemoveGroupTraderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveGroupTraderResponse> AASClient.AASServiceReference.AASService.RemoveGroupTraderAsync(AASClient.AASServiceReference.RemoveGroupTraderRequest request) {
            return base.Channel.RemoveGroupTraderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveGroupTraderResponse> RemoveGroupTraderAsync(string group, string trader) {
            AASClient.AASServiceReference.RemoveGroupTraderRequest inValue = new AASClient.AASServiceReference.RemoveGroupTraderRequest();
            inValue.group = group;
            inValue.trader = trader;
            return ((AASClient.AASServiceReference.AASService)(this)).RemoveGroupTraderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.AddStockResponse AASClient.AASServiceReference.AASService.AddStock(AASClient.AASServiceReference.AddStockRequest request) {
            return base.Channel.AddStock(request);
        }
        
        public string AddStock(string group, AASClient.AASServiceReference.StockLimitItem limitItem) {
            AASClient.AASServiceReference.AddStockRequest inValue = new AASClient.AASServiceReference.AddStockRequest();
            inValue.group = group;
            inValue.limitItem = limitItem;
            AASClient.AASServiceReference.AddStockResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).AddStock(inValue);
            return retVal.AddStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.AddStockResponse> AASClient.AASServiceReference.AASService.AddStockAsync(AASClient.AASServiceReference.AddStockRequest request) {
            return base.Channel.AddStockAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.AddStockResponse> AddStockAsync(string group, AASClient.AASServiceReference.StockLimitItem limitItem) {
            AASClient.AASServiceReference.AddStockRequest inValue = new AASClient.AASServiceReference.AddStockRequest();
            inValue.group = group;
            inValue.limitItem = limitItem;
            return ((AASClient.AASServiceReference.AASService)(this)).AddStockAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.UpdateStockResponse AASClient.AASServiceReference.AASService.UpdateStock(AASClient.AASServiceReference.UpdateStockRequest request) {
            return base.Channel.UpdateStock(request);
        }
        
        public string UpdateStock(string group, AASClient.AASServiceReference.StockLimitItem stockLimit) {
            AASClient.AASServiceReference.UpdateStockRequest inValue = new AASClient.AASServiceReference.UpdateStockRequest();
            inValue.group = group;
            inValue.stockLimit = stockLimit;
            AASClient.AASServiceReference.UpdateStockResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).UpdateStock(inValue);
            return retVal.UpdateStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateStockResponse> AASClient.AASServiceReference.AASService.UpdateStockAsync(AASClient.AASServiceReference.UpdateStockRequest request) {
            return base.Channel.UpdateStockAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.UpdateStockResponse> UpdateStockAsync(string group, AASClient.AASServiceReference.StockLimitItem stockLimit) {
            AASClient.AASServiceReference.UpdateStockRequest inValue = new AASClient.AASServiceReference.UpdateStockRequest();
            inValue.group = group;
            inValue.stockLimit = stockLimit;
            return ((AASClient.AASServiceReference.AASService)(this)).UpdateStockAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.RemoveStockResponse AASClient.AASServiceReference.AASService.RemoveStock(AASClient.AASServiceReference.RemoveStockRequest request) {
            return base.Channel.RemoveStock(request);
        }
        
        public string RemoveStock(string group, string stockID) {
            AASClient.AASServiceReference.RemoveStockRequest inValue = new AASClient.AASServiceReference.RemoveStockRequest();
            inValue.group = group;
            inValue.stockID = stockID;
            AASClient.AASServiceReference.RemoveStockResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).RemoveStock(inValue);
            return retVal.RemoveStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveStockResponse> AASClient.AASServiceReference.AASService.RemoveStockAsync(AASClient.AASServiceReference.RemoveStockRequest request) {
            return base.Channel.RemoveStockAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.RemoveStockResponse> RemoveStockAsync(string group, string stockID) {
            AASClient.AASServiceReference.RemoveStockRequest inValue = new AASClient.AASServiceReference.RemoveStockRequest();
            inValue.group = group;
            inValue.stockID = stockID;
            return ((AASClient.AASServiceReference.AASService)(this)).RemoveStockAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.QueryNotGroupedTraderResponse AASClient.AASServiceReference.AASService.QueryNotGroupedTrader(AASClient.AASServiceReference.QueryNotGroupedTraderRequest request) {
            return base.Channel.QueryNotGroupedTrader(request);
        }
        
        public AASClient.AASServiceReference.LimitTrader[] QueryNotGroupedTrader() {
            AASClient.AASServiceReference.QueryNotGroupedTraderRequest inValue = new AASClient.AASServiceReference.QueryNotGroupedTraderRequest();
            AASClient.AASServiceReference.QueryNotGroupedTraderResponse retVal = ((AASClient.AASServiceReference.AASService)(this)).QueryNotGroupedTrader(inValue);
            return retVal.QueryNotGroupedTraderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryNotGroupedTraderResponse> AASClient.AASServiceReference.AASService.QueryNotGroupedTraderAsync(AASClient.AASServiceReference.QueryNotGroupedTraderRequest request) {
            return base.Channel.QueryNotGroupedTraderAsync(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.QueryNotGroupedTraderResponse> QueryNotGroupedTraderAsync() {
            AASClient.AASServiceReference.QueryNotGroupedTraderRequest inValue = new AASClient.AASServiceReference.QueryNotGroupedTraderRequest();
            return ((AASClient.AASServiceReference.AASService)(this)).QueryNotGroupedTraderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Add可用资金Response AASClient.AASServiceReference.AASService.Add可用资金(AASClient.AASServiceReference.Add可用资金Request request) {
            return base.Channel.Add可用资金(request);
        }
        
        public void Add可用资金(string userName, string coinType, decimal limit) {
            AASClient.AASServiceReference.Add可用资金Request inValue = new AASClient.AASServiceReference.Add可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            inValue.limit = limit;
            AASClient.AASServiceReference.Add可用资金Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Add可用资金(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Add可用资金Response> AASClient.AASServiceReference.AASService.Add可用资金Async(AASClient.AASServiceReference.Add可用资金Request request) {
            return base.Channel.Add可用资金Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Add可用资金Response> Add可用资金Async(string userName, string coinType, decimal limit) {
            AASClient.AASServiceReference.Add可用资金Request inValue = new AASClient.AASServiceReference.Add可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            inValue.limit = limit;
            return ((AASClient.AASServiceReference.AASService)(this)).Add可用资金Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Delete可用资金Response AASClient.AASServiceReference.AASService.Delete可用资金(AASClient.AASServiceReference.Delete可用资金Request request) {
            return base.Channel.Delete可用资金(request);
        }
        
        public void Delete可用资金(string userName, string coinType) {
            AASClient.AASServiceReference.Delete可用资金Request inValue = new AASClient.AASServiceReference.Delete可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            AASClient.AASServiceReference.Delete可用资金Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Delete可用资金(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Delete可用资金Response> AASClient.AASServiceReference.AASService.Delete可用资金Async(AASClient.AASServiceReference.Delete可用资金Request request) {
            return base.Channel.Delete可用资金Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Delete可用资金Response> Delete可用资金Async(string userName, string coinType) {
            AASClient.AASServiceReference.Delete可用资金Request inValue = new AASClient.AASServiceReference.Delete可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            return ((AASClient.AASServiceReference.AASService)(this)).Delete可用资金Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AASClient.AASServiceReference.Update可用资金Response AASClient.AASServiceReference.AASService.Update可用资金(AASClient.AASServiceReference.Update可用资金Request request) {
            return base.Channel.Update可用资金(request);
        }
        
        public void Update可用资金(string userName, string coinType, decimal limit) {
            AASClient.AASServiceReference.Update可用资金Request inValue = new AASClient.AASServiceReference.Update可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            inValue.limit = limit;
            AASClient.AASServiceReference.Update可用资金Response retVal = ((AASClient.AASServiceReference.AASService)(this)).Update可用资金(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AASClient.AASServiceReference.Update可用资金Response> AASClient.AASServiceReference.AASService.Update可用资金Async(AASClient.AASServiceReference.Update可用资金Request request) {
            return base.Channel.Update可用资金Async(request);
        }
        
        public System.Threading.Tasks.Task<AASClient.AASServiceReference.Update可用资金Response> Update可用资金Async(string userName, string coinType, decimal limit) {
            AASClient.AASServiceReference.Update可用资金Request inValue = new AASClient.AASServiceReference.Update可用资金Request();
            inValue.userName = userName;
            inValue.coinType = coinType;
            inValue.limit = limit;
            return ((AASClient.AASServiceReference.AASService)(this)).Update可用资金Async(inValue);
        }
    }
}
