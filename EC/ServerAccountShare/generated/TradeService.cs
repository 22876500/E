// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `TradeService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace PortServerIce
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceOrder : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int BatchId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PortServerIce.PSIceMarket Market;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PortServerIce.PSIceOrderType OrderType;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Code;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public long Price;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int Volume;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Node;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrder()
        {
            ClOrderId = "";
            Code = "";
            Node = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrder(int BatchId, string ClOrderId, PortServerIce.PSIceMarket Market, PortServerIce.PSIceOrderType OrderType, string Code, long Price, int Volume, string Node)
        {
            this.BatchId = BatchId;
            this.ClOrderId = ClOrderId;
            this.Market = Market;
            this.OrderType = OrderType;
            this.Code = Code;
            this.Price = Price;
            this.Volume = Volume;
            this.Node = Node;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceOrder");
            IceInternal.HashUtil.hashAdd(ref h__, BatchId);
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, Market);
            IceInternal.HashUtil.hashAdd(ref h__, OrderType);
            IceInternal.HashUtil.hashAdd(ref h__, Code);
            IceInternal.HashUtil.hashAdd(ref h__, Price);
            IceInternal.HashUtil.hashAdd(ref h__, Volume);
            IceInternal.HashUtil.hashAdd(ref h__, Node);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceOrder o__ = (PSIceOrder)other__;
            if(!BatchId.Equals(o__.BatchId))
            {
                return false;
            }
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(!Market.Equals(o__.Market))
            {
                return false;
            }
            if(!OrderType.Equals(o__.OrderType))
            {
                return false;
            }
            if(Code == null)
            {
                if(o__.Code != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Code.Equals(o__.Code))
                {
                    return false;
                }
            }
            if(!Price.Equals(o__.Price))
            {
                return false;
            }
            if(!Volume.Equals(o__.Volume))
            {
                return false;
            }
            if(Node == null)
            {
                if(o__.Node != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Node.Equals(o__.Node))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceOrder lhs__, PSIceOrder rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceOrder lhs__, PSIceOrder rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(BatchId);
            os__.writeString(ClOrderId);
            os__.writeEnum((int)Market, 1);
            os__.writeEnum((int)OrderType, 10);
            os__.writeString(Code);
            os__.writeLong(Price);
            os__.writeInt(Volume);
            os__.writeString(Node);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            BatchId = is__.readInt();
            ClOrderId = is__.readString();
            Market = (PortServerIce.PSIceMarket)is__.readEnum(1);
            OrderType = (PortServerIce.PSIceOrderType)is__.readEnum(10);
            Code = is__.readString();
            Price = is__.readLong();
            Volume = is__.readInt();
            Node = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceOrder v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceOrder read__(IceInternal.BasicStream is__, PSIceOrder v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceOrder();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceOrder nullMarshalValue__ = new PSIceOrder();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceOrderOut : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string OrderNo;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int BatchId;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderOut()
        {
            ClOrderId = "";
            OrderNo = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderOut(string ClOrderId, string OrderNo, int BatchId)
        {
            this.ClOrderId = ClOrderId;
            this.OrderNo = OrderNo;
            this.BatchId = BatchId;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceOrderOut");
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, OrderNo);
            IceInternal.HashUtil.hashAdd(ref h__, BatchId);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceOrderOut o__ = (PSIceOrderOut)other__;
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(OrderNo == null)
            {
                if(o__.OrderNo != null)
                {
                    return false;
                }
            }
            else
            {
                if(!OrderNo.Equals(o__.OrderNo))
                {
                    return false;
                }
            }
            if(!BatchId.Equals(o__.BatchId))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceOrderOut lhs__, PSIceOrderOut rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceOrderOut lhs__, PSIceOrderOut rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(ClOrderId);
            os__.writeString(OrderNo);
            os__.writeInt(BatchId);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            ClOrderId = is__.readString();
            OrderNo = is__.readString();
            BatchId = is__.readInt();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceOrderOut v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceOrderOut read__(IceInternal.BasicStream is__, PSIceOrderOut v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceOrderOut();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceOrderOut nullMarshalValue__ = new PSIceOrderOut();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceOrderCancel : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PortServerIce.PSIceOrderType OrderType;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int BatchId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string OrderNo;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PortServerIce.PSIceMarket Market;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Code;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int CancelVolume;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Node;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderCancel()
        {
            ClOrderId = "";
            OrderNo = "";
            Code = "";
            Node = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderCancel(PortServerIce.PSIceOrderType OrderType, string ClOrderId, int BatchId, string OrderNo, PortServerIce.PSIceMarket Market, string Code, int CancelVolume, string Node)
        {
            this.OrderType = OrderType;
            this.ClOrderId = ClOrderId;
            this.BatchId = BatchId;
            this.OrderNo = OrderNo;
            this.Market = Market;
            this.Code = Code;
            this.CancelVolume = CancelVolume;
            this.Node = Node;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceOrderCancel");
            IceInternal.HashUtil.hashAdd(ref h__, OrderType);
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, BatchId);
            IceInternal.HashUtil.hashAdd(ref h__, OrderNo);
            IceInternal.HashUtil.hashAdd(ref h__, Market);
            IceInternal.HashUtil.hashAdd(ref h__, Code);
            IceInternal.HashUtil.hashAdd(ref h__, CancelVolume);
            IceInternal.HashUtil.hashAdd(ref h__, Node);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceOrderCancel o__ = (PSIceOrderCancel)other__;
            if(!OrderType.Equals(o__.OrderType))
            {
                return false;
            }
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(!BatchId.Equals(o__.BatchId))
            {
                return false;
            }
            if(OrderNo == null)
            {
                if(o__.OrderNo != null)
                {
                    return false;
                }
            }
            else
            {
                if(!OrderNo.Equals(o__.OrderNo))
                {
                    return false;
                }
            }
            if(!Market.Equals(o__.Market))
            {
                return false;
            }
            if(Code == null)
            {
                if(o__.Code != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Code.Equals(o__.Code))
                {
                    return false;
                }
            }
            if(!CancelVolume.Equals(o__.CancelVolume))
            {
                return false;
            }
            if(Node == null)
            {
                if(o__.Node != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Node.Equals(o__.Node))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceOrderCancel lhs__, PSIceOrderCancel rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceOrderCancel lhs__, PSIceOrderCancel rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeEnum((int)OrderType, 10);
            os__.writeString(ClOrderId);
            os__.writeInt(BatchId);
            os__.writeString(OrderNo);
            os__.writeEnum((int)Market, 1);
            os__.writeString(Code);
            os__.writeInt(CancelVolume);
            os__.writeString(Node);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            OrderType = (PortServerIce.PSIceOrderType)is__.readEnum(10);
            ClOrderId = is__.readString();
            BatchId = is__.readInt();
            OrderNo = is__.readString();
            Market = (PortServerIce.PSIceMarket)is__.readEnum(1);
            Code = is__.readString();
            CancelVolume = is__.readInt();
            Node = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceOrderCancel v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceOrderCancel read__(IceInternal.BasicStream is__, PSIceOrderCancel v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceOrderCancel();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceOrderCancel nullMarshalValue__ = new PSIceOrderCancel();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceOrderCancelOut : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string OrderNo;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderCancelOut()
        {
            ClOrderId = "";
            OrderNo = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceOrderCancelOut(string ClOrderId, string OrderNo)
        {
            this.ClOrderId = ClOrderId;
            this.OrderNo = OrderNo;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceOrderCancelOut");
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, OrderNo);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceOrderCancelOut o__ = (PSIceOrderCancelOut)other__;
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(OrderNo == null)
            {
                if(o__.OrderNo != null)
                {
                    return false;
                }
            }
            else
            {
                if(!OrderNo.Equals(o__.OrderNo))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceOrderCancelOut lhs__, PSIceOrderCancelOut rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceOrderCancelOut lhs__, PSIceOrderCancelOut rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(ClOrderId);
            os__.writeString(OrderNo);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            ClOrderId = is__.readString();
            OrderNo = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceOrderCancelOut v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceOrderCancelOut read__(IceInternal.BasicStream is__, PSIceOrderCancelOut v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceOrderCancelOut();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceOrderCancelOut nullMarshalValue__ = new PSIceOrderCancelOut();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceCashRefund : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public long FundEffect;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Node;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceCashRefund()
        {
            Node = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceCashRefund(long FundEffect, string Node)
        {
            this.FundEffect = FundEffect;
            this.Node = Node;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceCashRefund");
            IceInternal.HashUtil.hashAdd(ref h__, FundEffect);
            IceInternal.HashUtil.hashAdd(ref h__, Node);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceCashRefund o__ = (PSIceCashRefund)other__;
            if(!FundEffect.Equals(o__.FundEffect))
            {
                return false;
            }
            if(Node == null)
            {
                if(o__.Node != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Node.Equals(o__.Node))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceCashRefund lhs__, PSIceCashRefund rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceCashRefund lhs__, PSIceCashRefund rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeLong(FundEffect);
            os__.writeString(Node);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            FundEffect = is__.readLong();
            Node = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceCashRefund v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceCashRefund read__(IceInternal.BasicStream is__, PSIceCashRefund v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceCashRefund();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceCashRefund nullMarshalValue__ = new PSIceCashRefund();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceCashRefundOut : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public long Effect;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceCashRefundOut()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceCashRefundOut(long Effect)
        {
            this.Effect = Effect;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceCashRefundOut");
            IceInternal.HashUtil.hashAdd(ref h__, Effect);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceCashRefundOut o__ = (PSIceCashRefundOut)other__;
            if(!Effect.Equals(o__.Effect))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceCashRefundOut lhs__, PSIceCashRefundOut rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceCashRefundOut lhs__, PSIceCashRefundOut rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeLong(Effect);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            Effect = is__.readLong();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceCashRefundOut v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceCashRefundOut read__(IceInternal.BasicStream is__, PSIceCashRefundOut v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceCashRefundOut();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceCashRefundOut nullMarshalValue__ = new PSIceCashRefundOut();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceShareRefund : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int BatchId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ContractNo;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PortServerIce.PSIceMarket Market;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Code;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int Volume;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string Node;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceShareRefund()
        {
            ClOrderId = "";
            ContractNo = "";
            Code = "";
            Node = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceShareRefund(string ClOrderId, int BatchId, string ContractNo, PortServerIce.PSIceMarket Market, string Code, int Volume, string Node)
        {
            this.ClOrderId = ClOrderId;
            this.BatchId = BatchId;
            this.ContractNo = ContractNo;
            this.Market = Market;
            this.Code = Code;
            this.Volume = Volume;
            this.Node = Node;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceShareRefund");
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, BatchId);
            IceInternal.HashUtil.hashAdd(ref h__, ContractNo);
            IceInternal.HashUtil.hashAdd(ref h__, Market);
            IceInternal.HashUtil.hashAdd(ref h__, Code);
            IceInternal.HashUtil.hashAdd(ref h__, Volume);
            IceInternal.HashUtil.hashAdd(ref h__, Node);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceShareRefund o__ = (PSIceShareRefund)other__;
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(!BatchId.Equals(o__.BatchId))
            {
                return false;
            }
            if(ContractNo == null)
            {
                if(o__.ContractNo != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ContractNo.Equals(o__.ContractNo))
                {
                    return false;
                }
            }
            if(!Market.Equals(o__.Market))
            {
                return false;
            }
            if(Code == null)
            {
                if(o__.Code != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Code.Equals(o__.Code))
                {
                    return false;
                }
            }
            if(!Volume.Equals(o__.Volume))
            {
                return false;
            }
            if(Node == null)
            {
                if(o__.Node != null)
                {
                    return false;
                }
            }
            else
            {
                if(!Node.Equals(o__.Node))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceShareRefund lhs__, PSIceShareRefund rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceShareRefund lhs__, PSIceShareRefund rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(ClOrderId);
            os__.writeInt(BatchId);
            os__.writeString(ContractNo);
            os__.writeEnum((int)Market, 1);
            os__.writeString(Code);
            os__.writeInt(Volume);
            os__.writeString(Node);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            ClOrderId = is__.readString();
            BatchId = is__.readInt();
            ContractNo = is__.readString();
            Market = (PortServerIce.PSIceMarket)is__.readEnum(1);
            Code = is__.readString();
            Volume = is__.readInt();
            Node = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceShareRefund v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceShareRefund read__(IceInternal.BasicStream is__, PSIceShareRefund v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceShareRefund();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceShareRefund nullMarshalValue__ = new PSIceShareRefund();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PSIceShareRefundOut : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string ClOrderId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public string OrderNo;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public int BatchId;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceShareRefundOut()
        {
            ClOrderId = "";
            OrderNo = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public PSIceShareRefundOut(string ClOrderId, string OrderNo, int BatchId)
        {
            this.ClOrderId = ClOrderId;
            this.OrderNo = OrderNo;
            this.BatchId = BatchId;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::PortServerIce::PSIceShareRefundOut");
            IceInternal.HashUtil.hashAdd(ref h__, ClOrderId);
            IceInternal.HashUtil.hashAdd(ref h__, OrderNo);
            IceInternal.HashUtil.hashAdd(ref h__, BatchId);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            PSIceShareRefundOut o__ = (PSIceShareRefundOut)other__;
            if(ClOrderId == null)
            {
                if(o__.ClOrderId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ClOrderId.Equals(o__.ClOrderId))
                {
                    return false;
                }
            }
            if(OrderNo == null)
            {
                if(o__.OrderNo != null)
                {
                    return false;
                }
            }
            else
            {
                if(!OrderNo.Equals(o__.OrderNo))
                {
                    return false;
                }
            }
            if(!BatchId.Equals(o__.BatchId))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator==(PSIceShareRefundOut lhs__, PSIceShareRefundOut rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static bool operator!=(PSIceShareRefundOut lhs__, PSIceShareRefundOut rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(ClOrderId);
            os__.writeString(OrderNo);
            os__.writeInt(BatchId);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            ClOrderId = is__.readString();
            OrderNo = is__.readString();
            BatchId = is__.readInt();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static void write__(IceInternal.BasicStream os__, PSIceShareRefundOut v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
        public static PSIceShareRefundOut read__(IceInternal.BasicStream is__, PSIceShareRefundOut v__)
        {
            if(v__ == null)
            {
                v__ = new PSIceShareRefundOut();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly PSIceShareRefundOut nullMarshalValue__ = new PSIceShareRefundOut();

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface TradeServant : Ice.Object, TradeServantOperations_, TradeServantOperationsNC_
    {
    }
}

namespace PortServerIce
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public delegate void Callback_TradeServant_SendOrder(int ret__, PortServerIce.PSIceOrderOut orderout, PortServerIce.PSIceErrorCode error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public delegate void Callback_TradeServant_CancelOrder(int ret__, PortServerIce.PSIceOrderCancelOut cancelout, PortServerIce.PSIceErrorCode error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public delegate void Callback_TradeServant_RefundShare(int ret__, PortServerIce.PSIceShareRefundOut refundout, PortServerIce.PSIceErrorCode error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public delegate void Callback_TradeServant_RefundCash(int ret__, PortServerIce.PSIceCashRefundOut refundout, PortServerIce.PSIceErrorCode error);
}

namespace PortServerIce
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public interface TradeServantPrx : Ice.ObjectPrx
    {
        int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error);

        int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_SendOrder> begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_SendOrder> begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_SendOrder(out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__);

        int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error);

        int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_CancelOrder> begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_CancelOrder> begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_CancelOrder(out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__);

        int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error);

        int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundShare> begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundShare> begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_RefundShare(out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__);

        int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error);

        int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundCash> begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash);

        Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundCash> begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_RefundCash(out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__);
    }
}

namespace PortServerIce
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public interface TradeServantOperations_
    {
        int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public interface TradeServantOperationsNC_
    {
        int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error);

        int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error);

        int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error);

        int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error);
    }
}

namespace PortServerIce
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public sealed class TradeServantPrxHelper : Ice.ObjectPrxHelperBase, TradeServantPrx
    {
        #region Synchronous operations

        public int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error)
        {
            return this.CancelOrder(account, cancel, out cancelout, out error, null, false);
        }

        public int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.CancelOrder(account, cancel, out cancelout, out error, ctx__, true);
        }

        private int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__CancelOrder_name);
            return end_CancelOrder(out cancelout, out error, begin_CancelOrder(account, cancel, context__, explicitCtx__, true, null, null));
        }

        public int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error)
        {
            return this.RefundCash(account, cash, out refundout, out error, null, false);
        }

        public int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.RefundCash(account, cash, out refundout, out error, ctx__, true);
        }

        private int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__RefundCash_name);
            return end_RefundCash(out refundout, out error, begin_RefundCash(account, cash, context__, explicitCtx__, true, null, null));
        }

        public int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error)
        {
            return this.RefundShare(account, share, out refundout, out error, null, false);
        }

        public int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.RefundShare(account, share, out refundout, out error, ctx__, true);
        }

        private int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__RefundShare_name);
            return end_RefundShare(out refundout, out error, begin_RefundShare(account, share, context__, explicitCtx__, true, null, null));
        }

        public int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error)
        {
            return this.SendOrder(account, order, out orderout, out error, null, false);
        }

        public int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.SendOrder(account, order, out orderout, out error, ctx__, true);
        }

        private int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__SendOrder_name);
            return end_SendOrder(out orderout, out error, begin_SendOrder(account, order, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_CancelOrder> begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel)
        {
            return begin_CancelOrder(account, cancel, null, false, false, null, null);
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_CancelOrder> begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_CancelOrder(account, cancel, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CancelOrder(account, cancel, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CancelOrder(account, cancel, ctx__, true, false, cb__, cookie__);
        }

        private const string __CancelOrder_name = "CancelOrder";

        public int end_CancelOrder(out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __CancelOrder_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                int ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                cancelout = null;
                error = null;
                cancelout = PortServerIce.PSIceOrderCancelOut.read__(is__, cancelout);
                error = PortServerIce.PSIceErrorCode.read__(is__, error);
                ret__ = is__.readInt();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<PortServerIce.Callback_TradeServant_CancelOrder> begin_CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__CancelOrder_name);
            IceInternal.TwowayOutgoingAsync<PortServerIce.Callback_TradeServant_CancelOrder> result__ =  getTwowayOutgoingAsync<PortServerIce.Callback_TradeServant_CancelOrder>(__CancelOrder_name, CancelOrder_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__CancelOrder_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                PortServerIce.PSIceAccount.write__(os__, account);
                PortServerIce.PSIceOrderCancel.write__(os__, cancel);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void CancelOrder_completed__(Ice.AsyncResult r__, PortServerIce.Callback_TradeServant_CancelOrder cb__, Ice.ExceptionCallback excb__)
        {
            PortServerIce.PSIceOrderCancelOut cancelout;
            PortServerIce.PSIceErrorCode error;
            int ret__;
            try
            {
                ret__ = end_CancelOrder(out cancelout, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, cancelout, error);
            }
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundCash> begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash)
        {
            return begin_RefundCash(account, cash, null, false, false, null, null);
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundCash> begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_RefundCash(account, cash, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_RefundCash(account, cash, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_RefundCash(account, cash, ctx__, true, false, cb__, cookie__);
        }

        private const string __RefundCash_name = "RefundCash";

        public int end_RefundCash(out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __RefundCash_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                int ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                refundout = null;
                error = null;
                refundout = PortServerIce.PSIceCashRefundOut.read__(is__, refundout);
                error = PortServerIce.PSIceErrorCode.read__(is__, error);
                ret__ = is__.readInt();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundCash> begin_RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__RefundCash_name);
            IceInternal.TwowayOutgoingAsync<PortServerIce.Callback_TradeServant_RefundCash> result__ =  getTwowayOutgoingAsync<PortServerIce.Callback_TradeServant_RefundCash>(__RefundCash_name, RefundCash_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__RefundCash_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                PortServerIce.PSIceAccount.write__(os__, account);
                PortServerIce.PSIceCashRefund.write__(os__, cash);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void RefundCash_completed__(Ice.AsyncResult r__, PortServerIce.Callback_TradeServant_RefundCash cb__, Ice.ExceptionCallback excb__)
        {
            PortServerIce.PSIceCashRefundOut refundout;
            PortServerIce.PSIceErrorCode error;
            int ret__;
            try
            {
                ret__ = end_RefundCash(out refundout, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, refundout, error);
            }
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundShare> begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share)
        {
            return begin_RefundShare(account, share, null, false, false, null, null);
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundShare> begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_RefundShare(account, share, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_RefundShare(account, share, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_RefundShare(account, share, ctx__, true, false, cb__, cookie__);
        }

        private const string __RefundShare_name = "RefundShare";

        public int end_RefundShare(out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __RefundShare_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                int ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                refundout = null;
                error = null;
                refundout = PortServerIce.PSIceShareRefundOut.read__(is__, refundout);
                error = PortServerIce.PSIceErrorCode.read__(is__, error);
                ret__ = is__.readInt();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<PortServerIce.Callback_TradeServant_RefundShare> begin_RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__RefundShare_name);
            IceInternal.TwowayOutgoingAsync<PortServerIce.Callback_TradeServant_RefundShare> result__ =  getTwowayOutgoingAsync<PortServerIce.Callback_TradeServant_RefundShare>(__RefundShare_name, RefundShare_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__RefundShare_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                PortServerIce.PSIceAccount.write__(os__, account);
                PortServerIce.PSIceShareRefund.write__(os__, share);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void RefundShare_completed__(Ice.AsyncResult r__, PortServerIce.Callback_TradeServant_RefundShare cb__, Ice.ExceptionCallback excb__)
        {
            PortServerIce.PSIceShareRefundOut refundout;
            PortServerIce.PSIceErrorCode error;
            int ret__;
            try
            {
                ret__ = end_RefundShare(out refundout, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, refundout, error);
            }
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_SendOrder> begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order)
        {
            return begin_SendOrder(account, order, null, false, false, null, null);
        }

        public Ice.AsyncResult<PortServerIce.Callback_TradeServant_SendOrder> begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_SendOrder(account, order, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_SendOrder(account, order, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_SendOrder(account, order, ctx__, true, false, cb__, cookie__);
        }

        private const string __SendOrder_name = "SendOrder";

        public int end_SendOrder(out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __SendOrder_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                int ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                orderout = null;
                error = null;
                orderout = PortServerIce.PSIceOrderOut.read__(is__, orderout);
                error = PortServerIce.PSIceErrorCode.read__(is__, error);
                ret__ = is__.readInt();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<PortServerIce.Callback_TradeServant_SendOrder> begin_SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__SendOrder_name);
            IceInternal.TwowayOutgoingAsync<PortServerIce.Callback_TradeServant_SendOrder> result__ =  getTwowayOutgoingAsync<PortServerIce.Callback_TradeServant_SendOrder>(__SendOrder_name, SendOrder_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__SendOrder_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                PortServerIce.PSIceAccount.write__(os__, account);
                PortServerIce.PSIceOrder.write__(os__, order);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void SendOrder_completed__(Ice.AsyncResult r__, PortServerIce.Callback_TradeServant_SendOrder cb__, Ice.ExceptionCallback excb__)
        {
            PortServerIce.PSIceOrderOut orderout;
            PortServerIce.PSIceErrorCode error;
            int ret__;
            try
            {
                ret__ = end_SendOrder(out orderout, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, orderout, error);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static TradeServantPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TradeServantPrx r = b as TradeServantPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                TradeServantPrxHelper h = new TradeServantPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TradeServantPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            TradeServantPrx r = b as TradeServantPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                TradeServantPrxHelper h = new TradeServantPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TradeServantPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    TradeServantPrxHelper h = new TradeServantPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TradeServantPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    TradeServantPrxHelper h = new TradeServantPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TradeServantPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TradeServantPrx r = b as TradeServantPrx;
            if(r == null)
            {
                TradeServantPrxHelper h = new TradeServantPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TradeServantPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            TradeServantPrxHelper h = new TradeServantPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::PortServerIce::TradeServant"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, TradeServantPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static TradeServantPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                TradeServantPrxHelper result = new TradeServantPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace PortServerIce
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.2")]
    public abstract class TradeServantDisp_ : Ice.ObjectImpl, TradeServant
    {
        #region Slice operations

        public int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error)
        {
            return SendOrder(account, order, out orderout, out error, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int SendOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrder order, out PortServerIce.PSIceOrderOut orderout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        public int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error)
        {
            return CancelOrder(account, cancel, out cancelout, out error, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int CancelOrder(PortServerIce.PSIceAccount account, PortServerIce.PSIceOrderCancel cancel, out PortServerIce.PSIceOrderCancelOut cancelout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        public int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error)
        {
            return RefundShare(account, share, out refundout, out error, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int RefundShare(PortServerIce.PSIceAccount account, PortServerIce.PSIceShareRefund share, out PortServerIce.PSIceShareRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        public int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error)
        {
            return RefundCash(account, cash, out refundout, out error, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int RefundCash(PortServerIce.PSIceAccount account, PortServerIce.PSIceCashRefund cash, out PortServerIce.PSIceCashRefundOut refundout, out PortServerIce.PSIceErrorCode error, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::PortServerIce::TradeServant"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus SendOrder___(TradeServant obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            PortServerIce.PSIceAccount account;
            account = null;
            PortServerIce.PSIceOrder order;
            order = null;
            account = PortServerIce.PSIceAccount.read__(is__, account);
            order = PortServerIce.PSIceOrder.read__(is__, order);
            inS__.endReadParams();
            PortServerIce.PSIceOrderOut orderout;
            PortServerIce.PSIceErrorCode error;
            int ret__ = obj__.SendOrder(account, order, out orderout, out error, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            PortServerIce.PSIceOrderOut.write__(os__, orderout);
            PortServerIce.PSIceErrorCode.write__(os__, error);
            os__.writeInt(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus CancelOrder___(TradeServant obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            PortServerIce.PSIceAccount account;
            account = null;
            PortServerIce.PSIceOrderCancel cancel;
            cancel = null;
            account = PortServerIce.PSIceAccount.read__(is__, account);
            cancel = PortServerIce.PSIceOrderCancel.read__(is__, cancel);
            inS__.endReadParams();
            PortServerIce.PSIceOrderCancelOut cancelout;
            PortServerIce.PSIceErrorCode error;
            int ret__ = obj__.CancelOrder(account, cancel, out cancelout, out error, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            PortServerIce.PSIceOrderCancelOut.write__(os__, cancelout);
            PortServerIce.PSIceErrorCode.write__(os__, error);
            os__.writeInt(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus RefundShare___(TradeServant obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            PortServerIce.PSIceAccount account;
            account = null;
            PortServerIce.PSIceShareRefund share;
            share = null;
            account = PortServerIce.PSIceAccount.read__(is__, account);
            share = PortServerIce.PSIceShareRefund.read__(is__, share);
            inS__.endReadParams();
            PortServerIce.PSIceShareRefundOut refundout;
            PortServerIce.PSIceErrorCode error;
            int ret__ = obj__.RefundShare(account, share, out refundout, out error, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            PortServerIce.PSIceShareRefundOut.write__(os__, refundout);
            PortServerIce.PSIceErrorCode.write__(os__, error);
            os__.writeInt(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus RefundCash___(TradeServant obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            PortServerIce.PSIceAccount account;
            account = null;
            PortServerIce.PSIceCashRefund cash;
            cash = null;
            account = PortServerIce.PSIceAccount.read__(is__, account);
            cash = PortServerIce.PSIceCashRefund.read__(is__, cash);
            inS__.endReadParams();
            PortServerIce.PSIceCashRefundOut refundout;
            PortServerIce.PSIceErrorCode error;
            int ret__ = obj__.RefundCash(account, cash, out refundout, out error, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            PortServerIce.PSIceCashRefundOut.write__(os__, refundout);
            PortServerIce.PSIceErrorCode.write__(os__, error);
            os__.writeInt(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "CancelOrder",
            "RefundCash",
            "RefundShare",
            "SendOrder",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return CancelOrder___(this, inS__, current__);
                }
                case 1:
                {
                    return RefundCash___(this, inS__, current__);
                }
                case 2:
                {
                    return RefundShare___(this, inS__, current__);
                }
                case 3:
                {
                    return SendOrder___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}
